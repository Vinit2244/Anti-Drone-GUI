import {
  D,
  E,
  W,
  _,
  a,
  a2,
  m,
  u
} from "./chunk-UTVCGPHI.js";
import {
  d,
  e,
  s,
  w
} from "./chunk-TUIQDYNE.js";
import "./chunk-AC2VUBZ6.js";

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-4NZJJ336.js
var l = {};
e(l, { checkUpdate: () => c, installUpdate: () => f, onUpdaterEvent: () => d2 });
async function d2(n8) {
  return E("tauri://update-status", (e2) => {
    n8(e2 == null ? void 0 : e2.payload);
  });
}
async function f() {
  let n8;
  function e2() {
    n8 && n8(), n8 = void 0;
  }
  return new Promise((i7, r4) => {
    function o5(a8) {
      if (a8.error) {
        e2(), r4(a8.error);
        return;
      }
      a8.status === "DONE" && (e2(), i7());
    }
    d2(o5).then((a8) => {
      n8 = a8;
    }).catch((a8) => {
      throw e2(), a8;
    }), D("tauri://update-install").catch((a8) => {
      throw e2(), a8;
    });
  });
}
async function c() {
  let n8;
  function e2() {
    n8 && n8(), n8 = void 0;
  }
  return new Promise((i7, r4) => {
    function o5(t5) {
      e2(), i7({ manifest: t5, shouldUpdate: true });
    }
    function a8(t5) {
      if (t5.error) {
        e2(), r4(t5.error);
        return;
      }
      t5.status === "UPTODATE" && (e2(), i7({ shouldUpdate: false }));
    }
    _("tauri://update-available", (t5) => {
      o5(t5 == null ? void 0 : t5.payload);
    }).catch((t5) => {
      throw e2(), t5;
    }), d2(a8).then((t5) => {
      n8 = t5;
    }).catch((t5) => {
      throw e2(), t5;
    }), D("tauri://update").catch((t5) => {
      throw e2(), t5;
    });
  });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-NMUKSDLG.js
var S = {};
e(S, { CloseRequestedEvent: () => y, LogicalPosition: () => c2, LogicalSize: () => m2, PhysicalPosition: () => r, PhysicalSize: () => o, UserAttentionType: () => W2, WebviewWindow: () => s2, WebviewWindowHandle: () => u2, WindowManager: () => b, appWindow: () => g, availableMonitors: () => D2, currentMonitor: () => C, getAll: () => h, getCurrent: () => E2, primaryMonitor: () => T });
var m2 = class {
  constructor(e2, a8) {
    this.type = "Logical";
    this.width = e2, this.height = a8;
  }
};
var o = class {
  constructor(e2, a8) {
    this.type = "Physical";
    this.width = e2, this.height = a8;
  }
  toLogical(e2) {
    return new m2(this.width / e2, this.height / e2);
  }
};
var c2 = class {
  constructor(e2, a8) {
    this.type = "Logical";
    this.x = e2, this.y = a8;
  }
};
var r = class {
  constructor(e2, a8) {
    this.type = "Physical";
    this.x = e2, this.y = a8;
  }
  toLogical(e2) {
    return new c2(this.x / e2, this.y / e2);
  }
};
var W2 = ((a8) => (a8[a8.Critical = 1] = "Critical", a8[a8.Informational = 2] = "Informational", a8))(W2 || {});
function E2() {
  return new s2(window.__TAURI_METADATA__.__currentWindow.label, { skip: true });
}
function h() {
  return window.__TAURI_METADATA__.__windows.map((t5) => new s2(t5.label, { skip: true }));
}
var M = ["tauri://created", "tauri://error"];
var u2 = class {
  constructor(e2) {
    this.label = e2, this.listeners = /* @__PURE__ */ Object.create(null);
  }
  async listen(e2, a8) {
    return this._handleTauriEvent(e2, a8) ? Promise.resolve(() => {
      let n8 = this.listeners[e2];
      n8.splice(n8.indexOf(a8), 1);
    }) : a2(e2, this.label, a8);
  }
  async once(e2, a8) {
    return this._handleTauriEvent(e2, a8) ? Promise.resolve(() => {
      let n8 = this.listeners[e2];
      n8.splice(n8.indexOf(a8), 1);
    }) : u(e2, this.label, a8);
  }
  async emit(e2, a8) {
    if (M.includes(e2)) {
      for (let n8 of this.listeners[e2] || [])
        n8({ event: e2, id: -1, windowLabel: this.label, payload: a8 });
      return Promise.resolve();
    }
    return m(e2, this.label, a8);
  }
  _handleTauriEvent(e2, a8) {
    return M.includes(e2) ? (e2 in this.listeners ? this.listeners[e2].push(a8) : this.listeners[e2] = [a8], true) : false;
  }
};
var b = class extends u2 {
  async scaleFactor() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "scaleFactor" } } } });
  }
  async innerPosition() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "innerPosition" } } } }).then(({ x: e2, y: a8 }) => new r(e2, a8));
  }
  async outerPosition() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "outerPosition" } } } }).then(({ x: e2, y: a8 }) => new r(e2, a8));
  }
  async innerSize() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "innerSize" } } } }).then(({ width: e2, height: a8 }) => new o(e2, a8));
  }
  async outerSize() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "outerSize" } } } }).then(({ width: e2, height: a8 }) => new o(e2, a8));
  }
  async isFullscreen() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isFullscreen" } } } });
  }
  async isMinimized() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isMinimized" } } } });
  }
  async isMaximized() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isMaximized" } } } });
  }
  async isFocused() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isFocused" } } } });
  }
  async isDecorated() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isDecorated" } } } });
  }
  async isResizable() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isResizable" } } } });
  }
  async isMaximizable() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isMaximizable" } } } });
  }
  async isMinimizable() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isMinimizable" } } } });
  }
  async isClosable() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isClosable" } } } });
  }
  async isVisible() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "isVisible" } } } });
  }
  async title() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "title" } } } });
  }
  async theme() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "theme" } } } });
  }
  async center() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "center" } } } });
  }
  async requestUserAttention(e2) {
    let a8 = null;
    return e2 && (e2 === 1 ? a8 = { type: "Critical" } : a8 = { type: "Informational" }), a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "requestUserAttention", payload: a8 } } } });
  }
  async setResizable(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setResizable", payload: e2 } } } });
  }
  async setMaximizable(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setMaximizable", payload: e2 } } } });
  }
  async setMinimizable(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setMinimizable", payload: e2 } } } });
  }
  async setClosable(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setClosable", payload: e2 } } } });
  }
  async setTitle(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setTitle", payload: e2 } } } });
  }
  async maximize() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "maximize" } } } });
  }
  async unmaximize() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "unmaximize" } } } });
  }
  async toggleMaximize() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "toggleMaximize" } } } });
  }
  async minimize() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "minimize" } } } });
  }
  async unminimize() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "unminimize" } } } });
  }
  async show() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "show" } } } });
  }
  async hide() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "hide" } } } });
  }
  async close() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "close" } } } });
  }
  async setDecorations(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setDecorations", payload: e2 } } } });
  }
  async setAlwaysOnTop(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setAlwaysOnTop", payload: e2 } } } });
  }
  async setContentProtected(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setContentProtected", payload: e2 } } } });
  }
  async setSize(e2) {
    if (!e2 || e2.type !== "Logical" && e2.type !== "Physical")
      throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setSize", payload: { type: e2.type, data: { width: e2.width, height: e2.height } } } } } });
  }
  async setMinSize(e2) {
    if (e2 && e2.type !== "Logical" && e2.type !== "Physical")
      throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setMinSize", payload: e2 ? { type: e2.type, data: { width: e2.width, height: e2.height } } : null } } } });
  }
  async setMaxSize(e2) {
    if (e2 && e2.type !== "Logical" && e2.type !== "Physical")
      throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setMaxSize", payload: e2 ? { type: e2.type, data: { width: e2.width, height: e2.height } } : null } } } });
  }
  async setPosition(e2) {
    if (!e2 || e2.type !== "Logical" && e2.type !== "Physical")
      throw new Error("the `position` argument must be either a LogicalPosition or a PhysicalPosition instance");
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setPosition", payload: { type: e2.type, data: { x: e2.x, y: e2.y } } } } } });
  }
  async setFullscreen(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setFullscreen", payload: e2 } } } });
  }
  async setFocus() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setFocus" } } } });
  }
  async setIcon(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setIcon", payload: { icon: typeof e2 == "string" ? e2 : Array.from(e2) } } } } });
  }
  async setSkipTaskbar(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setSkipTaskbar", payload: e2 } } } });
  }
  async setCursorGrab(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setCursorGrab", payload: e2 } } } });
  }
  async setCursorVisible(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setCursorVisible", payload: e2 } } } });
  }
  async setCursorIcon(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setCursorIcon", payload: e2 } } } });
  }
  async setCursorPosition(e2) {
    if (!e2 || e2.type !== "Logical" && e2.type !== "Physical")
      throw new Error("the `position` argument must be either a LogicalPosition or a PhysicalPosition instance");
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setCursorPosition", payload: { type: e2.type, data: { x: e2.x, y: e2.y } } } } } });
  }
  async setIgnoreCursorEvents(e2) {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "setIgnoreCursorEvents", payload: e2 } } } });
  }
  async startDragging() {
    return a({ __tauriModule: "Window", message: { cmd: "manage", data: { label: this.label, cmd: { type: "startDragging" } } } });
  }
  async onResized(e2) {
    return this.listen("tauri://resize", (a8) => {
      a8.payload = f2(a8.payload), e2(a8);
    });
  }
  async onMoved(e2) {
    return this.listen("tauri://move", (a8) => {
      a8.payload = v(a8.payload), e2(a8);
    });
  }
  async onCloseRequested(e2) {
    return this.listen("tauri://close-requested", (a8) => {
      let n8 = new y(a8);
      Promise.resolve(e2(n8)).then(() => {
        if (!n8.isPreventDefault())
          return this.close();
      });
    });
  }
  async onFocusChanged(e2) {
    let a8 = await this.listen("tauri://focus", (d6) => {
      e2({ ...d6, payload: true });
    }), n8 = await this.listen("tauri://blur", (d6) => {
      e2({ ...d6, payload: false });
    });
    return () => {
      a8(), n8();
    };
  }
  async onScaleChanged(e2) {
    return this.listen("tauri://scale-change", e2);
  }
  async onMenuClicked(e2) {
    return this.listen("tauri://menu", e2);
  }
  async onFileDropEvent(e2) {
    let a8 = await this.listen("tauri://file-drop", (l8) => {
      e2({ ...l8, payload: { type: "drop", paths: l8.payload } });
    }), n8 = await this.listen("tauri://file-drop-hover", (l8) => {
      e2({ ...l8, payload: { type: "hover", paths: l8.payload } });
    }), d6 = await this.listen("tauri://file-drop-cancelled", (l8) => {
      e2({ ...l8, payload: { type: "cancel" } });
    });
    return () => {
      a8(), n8(), d6();
    };
  }
  async onThemeChanged(e2) {
    return this.listen("tauri://theme-changed", e2);
  }
};
var y = class {
  constructor(e2) {
    this._preventDefault = false;
    this.event = e2.event, this.windowLabel = e2.windowLabel, this.id = e2.id;
  }
  preventDefault() {
    this._preventDefault = true;
  }
  isPreventDefault() {
    return this._preventDefault;
  }
};
var s2 = class extends b {
  constructor(e2, a8 = {}) {
    super(e2), (a8 == null ? void 0 : a8.skip) || a({ __tauriModule: "Window", message: { cmd: "createWebview", data: { options: { label: e2, ...a8 } } } }).then(async () => this.emit("tauri://created")).catch(async (n8) => this.emit("tauri://error", n8));
  }
  static getByLabel(e2) {
    return h().some((a8) => a8.label === e2) ? new s2(e2, { skip: true }) : null;
  }
  static async getFocusedWindow() {
    for (let e2 of h())
      if (await e2.isFocused())
        return e2;
    return null;
  }
};
var g;
"__TAURI_METADATA__" in window ? g = new s2(window.__TAURI_METADATA__.__currentWindow.label, { skip: true }) : (console.warn(`Could not find "window.__TAURI_METADATA__". The "appWindow" value will reference the "main" window label.
Note that this is not an issue if running this frontend on a browser instead of a Tauri window.`), g = new s2("main", { skip: true }));
function p(t5) {
  return t5 === null ? null : { name: t5.name, scaleFactor: t5.scaleFactor, position: v(t5.position), size: f2(t5.size) };
}
function v(t5) {
  return new r(t5.x, t5.y);
}
function f2(t5) {
  return new o(t5.width, t5.height);
}
async function C() {
  return a({ __tauriModule: "Window", message: { cmd: "manage", data: { cmd: { type: "currentMonitor" } } } }).then(p);
}
async function T() {
  return a({ __tauriModule: "Window", message: { cmd: "manage", data: { cmd: { type: "primaryMonitor" } } } }).then(p);
}
async function D2() {
  return a({ __tauriModule: "Window", message: { cmd: "manage", data: { cmd: { type: "availableMonitors" } } } }).then((t5) => t5.map(p));
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-CICBN6X2.js
var s3 = {};
e(s3, { isPermissionGranted: () => o2, requestPermission: () => t, sendNotification: () => r2 });
async function o2() {
  return window.Notification.permission !== "default" ? Promise.resolve(window.Notification.permission === "granted") : a({ __tauriModule: "Notification", message: { cmd: "isNotificationPermissionGranted" } });
}
async function t() {
  return window.Notification.requestPermission();
}
function r2(i7) {
  typeof i7 == "string" ? new window.Notification(i7) : new window.Notification(i7.title, i7);
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-V5J25SYE.js
function n() {
  return navigator.appVersion.includes("Win");
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-2GTLV2NE.js
var u3 = {};
e(u3, { EOL: () => n2, arch: () => a3, locale: () => c3, platform: () => o3, tempdir: () => m3, type: () => t2, version: () => i });
var n2 = n() ? `\r
` : `
`;
async function o3() {
  return a({ __tauriModule: "Os", message: { cmd: "platform" } });
}
async function i() {
  return a({ __tauriModule: "Os", message: { cmd: "version" } });
}
async function t2() {
  return a({ __tauriModule: "Os", message: { cmd: "osType" } });
}
async function a3() {
  return a({ __tauriModule: "Os", message: { cmd: "arch" } });
}
async function m3() {
  return a({ __tauriModule: "Os", message: { cmd: "tempdir" } });
}
async function c3() {
  return a({ __tauriModule: "Os", message: { cmd: "locale" } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-GP2EXCRB.js
var x = {};
e(x, { BaseDirectory: () => F, Dir: () => F, copyFile: () => c4, createDir: () => d3, exists: () => v2, readBinaryFile: () => a4, readDir: () => m4, readTextFile: () => l2, removeDir: () => g2, removeFile: () => O, renameFile: () => _2, writeBinaryFile: () => f3, writeFile: () => u4, writeTextFile: () => u4 });
var F = ((n8) => (n8[n8.Audio = 1] = "Audio", n8[n8.Cache = 2] = "Cache", n8[n8.Config = 3] = "Config", n8[n8.Data = 4] = "Data", n8[n8.LocalData = 5] = "LocalData", n8[n8.Desktop = 6] = "Desktop", n8[n8.Document = 7] = "Document", n8[n8.Download = 8] = "Download", n8[n8.Executable = 9] = "Executable", n8[n8.Font = 10] = "Font", n8[n8.Home = 11] = "Home", n8[n8.Picture = 12] = "Picture", n8[n8.Public = 13] = "Public", n8[n8.Runtime = 14] = "Runtime", n8[n8.Template = 15] = "Template", n8[n8.Video = 16] = "Video", n8[n8.Resource = 17] = "Resource", n8[n8.App = 18] = "App", n8[n8.Log = 19] = "Log", n8[n8.Temp = 20] = "Temp", n8[n8.AppConfig = 21] = "AppConfig", n8[n8.AppData = 22] = "AppData", n8[n8.AppLocalData = 23] = "AppLocalData", n8[n8.AppCache = 24] = "AppCache", n8[n8.AppLog = 25] = "AppLog", n8))(F || {});
async function l2(i7, t5 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "readTextFile", path: i7, options: t5 } });
}
async function a4(i7, t5 = {}) {
  let s9 = await a({ __tauriModule: "Fs", message: { cmd: "readFile", path: i7, options: t5 } });
  return Uint8Array.from(s9);
}
async function u4(i7, t5, s9) {
  typeof s9 == "object" && Object.freeze(s9), typeof i7 == "object" && Object.freeze(i7);
  let e2 = { path: "", contents: "" }, r4 = s9;
  return typeof i7 == "string" ? e2.path = i7 : (e2.path = i7.path, e2.contents = i7.contents), typeof t5 == "string" ? e2.contents = t5 ?? "" : r4 = t5, a({ __tauriModule: "Fs", message: { cmd: "writeFile", path: e2.path, contents: Array.from(new TextEncoder().encode(e2.contents)), options: r4 } });
}
async function f3(i7, t5, s9) {
  typeof s9 == "object" && Object.freeze(s9), typeof i7 == "object" && Object.freeze(i7);
  let e2 = { path: "", contents: [] }, r4 = s9;
  return typeof i7 == "string" ? e2.path = i7 : (e2.path = i7.path, e2.contents = i7.contents), t5 && "dir" in t5 ? r4 = t5 : typeof i7 == "string" && (e2.contents = t5 ?? []), a({ __tauriModule: "Fs", message: { cmd: "writeFile", path: e2.path, contents: Array.from(e2.contents instanceof ArrayBuffer ? new Uint8Array(e2.contents) : e2.contents), options: r4 } });
}
async function m4(i7, t5 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "readDir", path: i7, options: t5 } });
}
async function d3(i7, t5 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "createDir", path: i7, options: t5 } });
}
async function g2(i7, t5 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "removeDir", path: i7, options: t5 } });
}
async function c4(i7, t5, s9 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "copyFile", source: i7, destination: t5, options: s9 } });
}
async function O(i7, t5 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "removeFile", path: i7, options: t5 } });
}
async function _2(i7, t5, s9 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "renameFile", oldPath: i7, newPath: t5, options: s9 } });
}
async function v2(i7, t5 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "exists", path: i7, options: t5 } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-PEDMYRP6.js
var q = {};
e(q, { BaseDirectory: () => F, appCacheDir: () => g3, appConfigDir: () => s4, appDataDir: () => c5, appDir: () => u5, appLocalDataDir: () => m5, appLogDir: () => n3, audioDir: () => d4, basename: () => V, cacheDir: () => P, configDir: () => h2, dataDir: () => l3, delimiter: () => z, desktopDir: () => _3, dirname: () => F2, documentDir: () => p2, downloadDir: () => y2, executableDir: () => f4, extname: () => H, fontDir: () => D3, homeDir: () => M2, isAbsolute: () => W3, join: () => E3, localDataDir: () => v3, logDir: () => w2, normalize: () => B, pictureDir: () => b2, publicDir: () => A, resolve: () => T2, resolveResource: () => x2, resourceDir: () => C2, runtimeDir: () => L, sep: () => j, templateDir: () => R, videoDir: () => k });
async function u5() {
  return s4();
}
async function s4() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 21 } });
}
async function c5() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 22 } });
}
async function m5() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 23 } });
}
async function g3() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 24 } });
}
async function d4() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 1 } });
}
async function P() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 2 } });
}
async function h2() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 3 } });
}
async function l3() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 4 } });
}
async function _3() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 6 } });
}
async function p2() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 7 } });
}
async function y2() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 8 } });
}
async function f4() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 9 } });
}
async function D3() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 10 } });
}
async function M2() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 11 } });
}
async function v3() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 5 } });
}
async function b2() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 12 } });
}
async function A() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 13 } });
}
async function C2() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 17 } });
}
async function x2(t5) {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: t5, directory: 17 } });
}
async function L() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 14 } });
}
async function R() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 15 } });
}
async function k() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 16 } });
}
async function w2() {
  return n3();
}
async function n3() {
  return a({ __tauriModule: "Path", message: { cmd: "resolvePath", path: "", directory: 25 } });
}
var j = n() ? "\\" : "/";
var z = n() ? ";" : ":";
async function T2(...t5) {
  return a({ __tauriModule: "Path", message: { cmd: "resolve", paths: t5 } });
}
async function B(t5) {
  return a({ __tauriModule: "Path", message: { cmd: "normalize", path: t5 } });
}
async function E3(...t5) {
  return a({ __tauriModule: "Path", message: { cmd: "join", paths: t5 } });
}
async function F2(t5) {
  return a({ __tauriModule: "Path", message: { cmd: "dirname", path: t5 } });
}
async function H(t5) {
  return a({ __tauriModule: "Path", message: { cmd: "extname", path: t5 } });
}
async function V(t5, a8) {
  return a({ __tauriModule: "Path", message: { cmd: "basename", path: t5, ext: a8 } });
}
async function W3(t5) {
  return a({ __tauriModule: "Path", message: { cmd: "isAbsolute", path: t5 } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-3O263AOJ.js
var s5 = {};
e(s5, { exit: () => i2, relaunch: () => n4 });
async function i2(r4 = 0) {
  return a({ __tauriModule: "Process", message: { cmd: "exit", exitCode: r4 } });
}
async function n4() {
  return a({ __tauriModule: "Process", message: { cmd: "relaunch" } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-6XWZL67Z.js
var m6 = {};
e(m6, { Child: () => c6, Command: () => l4, EventEmitter: () => i3, open: () => g4 });
async function p3(o5, e2, t5 = [], r4) {
  return typeof t5 == "object" && Object.freeze(t5), a({ __tauriModule: "Shell", message: { cmd: "execute", program: e2, args: t5, options: r4, onEventFn: s(o5) } });
}
var i3 = class {
  constructor() {
    this.eventListeners = /* @__PURE__ */ Object.create(null);
  }
  addListener(e2, t5) {
    return this.on(e2, t5);
  }
  removeListener(e2, t5) {
    return this.off(e2, t5);
  }
  on(e2, t5) {
    return e2 in this.eventListeners ? this.eventListeners[e2].push(t5) : this.eventListeners[e2] = [t5], this;
  }
  once(e2, t5) {
    let r4 = (...s9) => {
      this.removeListener(e2, r4), t5(...s9);
    };
    return this.addListener(e2, r4);
  }
  off(e2, t5) {
    return e2 in this.eventListeners && (this.eventListeners[e2] = this.eventListeners[e2].filter((r4) => r4 !== t5)), this;
  }
  removeAllListeners(e2) {
    return e2 ? delete this.eventListeners[e2] : this.eventListeners = /* @__PURE__ */ Object.create(null), this;
  }
  emit(e2, ...t5) {
    if (e2 in this.eventListeners) {
      let r4 = this.eventListeners[e2];
      for (let s9 of r4)
        s9(...t5);
      return true;
    }
    return false;
  }
  listenerCount(e2) {
    return e2 in this.eventListeners ? this.eventListeners[e2].length : 0;
  }
  prependListener(e2, t5) {
    return e2 in this.eventListeners ? this.eventListeners[e2].unshift(t5) : this.eventListeners[e2] = [t5], this;
  }
  prependOnceListener(e2, t5) {
    let r4 = (...s9) => {
      this.removeListener(e2, r4), t5(...s9);
    };
    return this.prependListener(e2, r4);
  }
};
var c6 = class {
  constructor(e2) {
    this.pid = e2;
  }
  async write(e2) {
    return a({ __tauriModule: "Shell", message: { cmd: "stdinWrite", pid: this.pid, buffer: typeof e2 == "string" ? e2 : Array.from(e2) } });
  }
  async kill() {
    return a({ __tauriModule: "Shell", message: { cmd: "killChild", pid: this.pid } });
  }
};
var l4 = class extends i3 {
  constructor(t5, r4 = [], s9) {
    super();
    this.stdout = new i3();
    this.stderr = new i3();
    this.program = t5, this.args = typeof r4 == "string" ? [r4] : r4, this.options = s9 ?? {};
  }
  static sidecar(t5, r4 = [], s9) {
    let a8 = new l4(t5, r4, s9);
    return a8.options.sidecar = true, a8;
  }
  async spawn() {
    return p3((t5) => {
      switch (t5.event) {
        case "Error":
          this.emit("error", t5.payload);
          break;
        case "Terminated":
          this.emit("close", t5.payload);
          break;
        case "Stdout":
          this.stdout.emit("data", t5.payload);
          break;
        case "Stderr":
          this.stderr.emit("data", t5.payload);
          break;
      }
    }, this.program, this.args, this.options).then((t5) => new c6(t5));
  }
  async execute() {
    return new Promise((t5, r4) => {
      this.on("error", r4);
      let s9 = [], a8 = [];
      this.stdout.on("data", (n8) => {
        s9.push(n8);
      }), this.stderr.on("data", (n8) => {
        a8.push(n8);
      }), this.on("close", (n8) => {
        t5({ code: n8.code, signal: n8.signal, stdout: s9.join(`
`), stderr: a8.join(`
`) });
      }), this.spawn().catch(r4);
    });
  }
};
async function g4(o5, e2) {
  return a({ __tauriModule: "Shell", message: { cmd: "open", path: o5, with: e2 } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-DIFM6EX4.js
var u6 = {};
e(u6, { getName: () => n5, getTauriVersion: () => s6, getVersion: () => i4, hide: () => t3, show: () => o4 });
async function i4() {
  return a({ __tauriModule: "App", message: { cmd: "getAppVersion" } });
}
async function n5() {
  return a({ __tauriModule: "App", message: { cmd: "getAppName" } });
}
async function s6() {
  return a({ __tauriModule: "App", message: { cmd: "getTauriVersion" } });
}
async function o4() {
  return a({ __tauriModule: "App", message: { cmd: "show" } });
}
async function t3() {
  return a({ __tauriModule: "App", message: { cmd: "hide" } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-6IDLE7HB.js
var t4 = {};
e(t4, { getMatches: () => c7 });
async function c7() {
  return a({ __tauriModule: "Cli", message: { cmd: "cliMatches" } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-6PDK3LJA.js
var n6 = {};
e(n6, { readText: () => i5, writeText: () => a5 });
async function a5(r4) {
  return a({ __tauriModule: "Clipboard", message: { cmd: "writeText", data: r4 } });
}
async function i5() {
  return a({ __tauriModule: "Clipboard", message: { cmd: "readText", data: null } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-WJKH4UU7.js
var c8 = {};
e(c8, { ask: () => l5, confirm: () => g5, message: () => s7, open: () => a6, save: () => r3 });
async function a6(t5 = {}) {
  return typeof t5 == "object" && Object.freeze(t5), a({ __tauriModule: "Dialog", message: { cmd: "openDialog", options: t5 } });
}
async function r3(t5 = {}) {
  return typeof t5 == "object" && Object.freeze(t5), a({ __tauriModule: "Dialog", message: { cmd: "saveDialog", options: t5 } });
}
async function s7(t5, i7) {
  var _a, _b;
  let e2 = typeof i7 == "string" ? { title: i7 } : i7;
  return a({ __tauriModule: "Dialog", message: { cmd: "messageDialog", message: t5.toString(), title: (_a = e2 == null ? void 0 : e2.title) == null ? void 0 : _a.toString(), type: e2 == null ? void 0 : e2.type, buttonLabel: (_b = e2 == null ? void 0 : e2.okLabel) == null ? void 0 : _b.toString() } });
}
async function l5(t5, i7) {
  var _a, _b, _c;
  let e2 = typeof i7 == "string" ? { title: i7 } : i7;
  return a({ __tauriModule: "Dialog", message: { cmd: "askDialog", message: t5.toString(), title: (_a = e2 == null ? void 0 : e2.title) == null ? void 0 : _a.toString(), type: e2 == null ? void 0 : e2.type, buttonLabels: [((_b = e2 == null ? void 0 : e2.okLabel) == null ? void 0 : _b.toString()) ?? "Yes", ((_c = e2 == null ? void 0 : e2.cancelLabel) == null ? void 0 : _c.toString()) ?? "No"] } });
}
async function g5(t5, i7) {
  var _a, _b, _c;
  let e2 = typeof i7 == "string" ? { title: i7 } : i7;
  return a({ __tauriModule: "Dialog", message: { cmd: "confirmDialog", message: t5.toString(), title: (_a = e2 == null ? void 0 : e2.title) == null ? void 0 : _a.toString(), type: e2 == null ? void 0 : e2.type, buttonLabels: [((_b = e2 == null ? void 0 : e2.okLabel) == null ? void 0 : _b.toString()) ?? "Ok", ((_c = e2 == null ? void 0 : e2.cancelLabel) == null ? void 0 : _c.toString()) ?? "Cancel"] } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-ITP3W3MJ.js
var c9 = {};
e(c9, { isRegistered: () => u7, register: () => s8, registerAll: () => n7, unregister: () => a7, unregisterAll: () => l6 });
async function s8(r4, t5) {
  return a({ __tauriModule: "GlobalShortcut", message: { cmd: "register", shortcut: r4, handler: s(t5) } });
}
async function n7(r4, t5) {
  return a({ __tauriModule: "GlobalShortcut", message: { cmd: "registerAll", shortcuts: r4, handler: s(t5) } });
}
async function u7(r4) {
  return a({ __tauriModule: "GlobalShortcut", message: { cmd: "isRegistered", shortcut: r4 } });
}
async function a7(r4) {
  return a({ __tauriModule: "GlobalShortcut", message: { cmd: "unregister", shortcut: r4 } });
}
async function l6() {
  return a({ __tauriModule: "GlobalShortcut", message: { cmd: "unregisterAll" } });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/chunk-XH7VLPQH.js
var T3 = {};
e(T3, { Body: () => i6, Client: () => p4, Response: () => m7, ResponseType: () => c10, fetch: () => y3, getClient: () => d5 });
var c10 = ((s9) => (s9[s9.JSON = 1] = "JSON", s9[s9.Text = 2] = "Text", s9[s9.Binary = 3] = "Binary", s9))(c10 || {});
var i6 = class {
  constructor(e2, r4) {
    this.type = e2, this.payload = r4;
  }
  static form(e2) {
    let r4 = {}, s9 = (n8, t5) => {
      if (t5 !== null) {
        let a8;
        typeof t5 == "string" ? a8 = t5 : t5 instanceof Uint8Array || Array.isArray(t5) ? a8 = Array.from(t5) : t5 instanceof File ? a8 = { file: t5.name, mime: t5.type, fileName: t5.name } : typeof t5.file == "string" ? a8 = { file: t5.file, mime: t5.mime, fileName: t5.fileName } : a8 = { file: Array.from(t5.file), mime: t5.mime, fileName: t5.fileName }, r4[String(n8)] = a8;
      }
    };
    if (e2 instanceof FormData)
      for (let [n8, t5] of e2)
        s9(n8, t5);
    else
      for (let [n8, t5] of Object.entries(e2))
        s9(n8, t5);
    return new i6("Form", r4);
  }
  static json(e2) {
    return new i6("Json", e2);
  }
  static text(e2) {
    return new i6("Text", e2);
  }
  static bytes(e2) {
    return new i6("Bytes", Array.from(e2 instanceof ArrayBuffer ? new Uint8Array(e2) : e2));
  }
};
var m7 = class {
  constructor(e2) {
    this.url = e2.url, this.status = e2.status, this.ok = this.status >= 200 && this.status < 300, this.headers = e2.headers, this.rawHeaders = e2.rawHeaders, this.data = e2.data;
  }
};
var p4 = class {
  constructor(e2) {
    this.id = e2;
  }
  async drop() {
    return a({ __tauriModule: "Http", message: { cmd: "dropClient", client: this.id } });
  }
  async request(e2) {
    let r4 = !e2.responseType || e2.responseType === 1;
    return r4 && (e2.responseType = 2), a({ __tauriModule: "Http", message: { cmd: "httpRequest", client: this.id, options: e2 } }).then((s9) => {
      let n8 = new m7(s9);
      if (r4) {
        try {
          n8.data = JSON.parse(n8.data);
        } catch (t5) {
          if (n8.ok && n8.data === "")
            n8.data = {};
          else if (n8.ok)
            throw Error(`Failed to parse response \`${n8.data}\` as JSON: ${t5};
              try setting the \`responseType\` option to \`ResponseType.Text\` or \`ResponseType.Binary\` if the API does not return a JSON response.`);
        }
        return n8;
      }
      return n8;
    });
  }
  async get(e2, r4) {
    return this.request({ method: "GET", url: e2, ...r4 });
  }
  async post(e2, r4, s9) {
    return this.request({ method: "POST", url: e2, body: r4, ...s9 });
  }
  async put(e2, r4, s9) {
    return this.request({ method: "PUT", url: e2, body: r4, ...s9 });
  }
  async patch(e2, r4) {
    return this.request({ method: "PATCH", url: e2, ...r4 });
  }
  async delete(e2, r4) {
    return this.request({ method: "DELETE", url: e2, ...r4 });
  }
};
async function d5(o5) {
  return a({ __tauriModule: "Http", message: { cmd: "createClient", options: o5 } }).then((e2) => new p4(e2));
}
var l7 = null;
async function y3(o5, e2) {
  return l7 === null && (l7 = await d5()), l7.request({ url: o5, method: (e2 == null ? void 0 : e2.method) ?? "GET", ...e2 });
}

// ../../../../../../../.yarn/berry/cache/@tauri-apps-api-npm-1.4.0-152f8109f9-10c0.zip/node_modules/@tauri-apps/api/index.js
var b3 = d;
export {
  u6 as app,
  t4 as cli,
  n6 as clipboard,
  c8 as dialog,
  W as event,
  x as fs,
  c9 as globalShortcut,
  T3 as http,
  b3 as invoke,
  s3 as notification,
  u3 as os,
  q as path,
  s5 as process,
  m6 as shell,
  w as tauri,
  l as updater,
  S as window
};
//# sourceMappingURL=@tauri-apps_api.js.map
