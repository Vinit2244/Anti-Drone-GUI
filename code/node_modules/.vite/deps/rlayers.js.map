{
  "version": 3,
  "sources": ["../../earcut/src/earcut.js", "../../ieee754/index.js", "../../pbf/index.js", "../../xml-utils/get-attribute.js", "../../xml-utils/index-of-match.js", "../../xml-utils/index-of-match-end.js", "../../xml-utils/count-substring.js", "../../xml-utils/find-tag-by-name.js", "../../xml-utils/find-tags-by-name.js", "browser-external:http", "browser-external:https", "browser-external:url", "browser-external:fs", "../../ol/CollectionEventType.js", "../../ol/Collection.js", "../../ol/Feature.js", "../../ol/Geolocation.js", "../../ol/render/EventType.js", "../../ol/layer/Property.js", "../../ol/layer/Base.js", "../../ol/ViewHint.js", "../../ol/ViewProperty.js", "../../ol/tilegrid/common.js", "../../ol/centerconstraint.js", "../../ol/resolutionconstraint.js", "../../ol/rotationconstraint.js", "../../ol/easing.js", "../../ol/View.js", "../../ol/layer/Layer.js", "../../quickselect/index.js", "../../rbush/index.js", "../../ol/style/flat.js", "../../ol/layer/BaseVector.js", "../../ol/render/canvas/Instruction.js", "../../ol/render/VectorContext.js", "../../ol/render/canvas/Builder.js", "../../ol/render/canvas/ImageBuilder.js", "../../ol/render/canvas/LineStringBuilder.js", "../../ol/render/canvas/PolygonBuilder.js", "../../ol/geom/flat/linechunk.js", "../../ol/geom/flat/straightchunk.js", "../../ol/render/canvas/TextBuilder.js", "../../ol/render/canvas/BuilderGroup.js", "../../ol/renderer/Layer.js", "../../ol/render/Event.js", "../../ol/renderer/canvas/Layer.js", "../../ol/geom/flat/textpath.js", "../../ol/render/canvas/Executor.js", "../../ol/render/canvas/ExecutorGroup.js", "../../ol/render/canvas/Immediate.js", "../../ol/render/canvas/hitdetect.js", "../../ol/renderer/vector.js", "../../ol/renderer/canvas/VectorLayer.js", "../../ol/layer/Vector.js", "../../ol/structs/RBush.js", "../../ol/source/Source.js", "../../ol/source/VectorEventType.js", "../../ol/loadingstrategy.js", "../../ol/featureloader.js", "../../ol/source/Vector.js", "../../ol/render.js", "../../ol/geom/flat/geodesic.js", "../../ol/layer/Graticule.js", "../../ol/ImageCanvas.js", "../../ol/TileState.js", "../../ol/Tile.js", "../../ol/ImageTile.js", "../../ol/Kinetic.js", "../../ol/renderer/Map.js", "../../ol/renderer/Composite.js", "../../ol/layer/Group.js", "../../ol/MapEvent.js", "../../ol/MapBrowserEvent.js", "../../ol/MapBrowserEventType.js", "../../ol/pointer/EventType.js", "../../ol/MapBrowserEventHandler.js", "../../ol/MapEventType.js", "../../ol/MapProperty.js", "../../ol/structs/PriorityQueue.js", "../../ol/TileQueue.js", "../../ol/control/Control.js", "../../ol/control/Attribution.js", "../../ol/control/Rotate.js", "../../ol/control/Zoom.js", "../../ol/control/defaults.js", "../../ol/interaction/Property.js", "../../ol/interaction/Interaction.js", "../../ol/interaction/DoubleClickZoom.js", "../../ol/interaction/Pointer.js", "../../ol/events/condition.js", "../../ol/interaction/DragPan.js", "../../ol/interaction/DragRotate.js", "../../ol/render/Box.js", "../../ol/interaction/DragBox.js", "../../ol/interaction/DragZoom.js", "../../ol/events/Key.js", "../../ol/interaction/KeyboardPan.js", "../../ol/interaction/KeyboardZoom.js", "../../ol/interaction/MouseWheelZoom.js", "../../ol/interaction/PinchRotate.js", "../../ol/interaction/PinchZoom.js", "../../ol/interaction/defaults.js", "../../ol/Map.js", "../../ol/Overlay.js", "../../ol/structs/LRUCache.js", "../../ol/tilecoord.js", "../../ol/TileCache.js", "../../ol/TileRange.js", "../../ol/VectorRenderTile.js", "../../ol/VectorTile.js", "../../rlayers/src/RMap.tsx", "../../rlayers/src/layer/RLayer.tsx", "../../ol/webgl.js", "../../ol/webgl/Buffer.js", "../../ol/webgl/ContextEventType.js", "../../ol/webgl/PostProcessingPass.js", "../../ol/vec/mat4.js", "../../ol/webgl/Helper.js", "../../ol/renderer/webgl/Layer.js", "../../ol/webgl/RenderTarget.js", "../../ol/render/webgl/constants.js", "../../ol/render/webgl/utils.js", "../../ol/worker/webgl.js", "../../ol/renderer/webgl/PointsLayer.js", "../../ol/layer/Heatmap.js", "../../ol/layer/BaseImage.js", "../../ol/renderer/canvas/ImageLayer.js", "../../ol/layer/Image.js", "../../ol/format/MVT.js", "../../ol/render/Feature.js", "../../ol/reproj/common.js", "../../ol/reproj/Triangulation.js", "../../ol/reproj.js", "../../ol/reproj/Tile.js", "../../ol/renderer/canvas/TileLayer.js", "../../ol/renderer/canvas/VectorTileLayer.js", "../../ol/layer/TileProperty.js", "../../ol/layer/VectorTile.js", "../../ol/tilegrid/TileGrid.js", "../../ol/source/TileEventType.js", "../../ol/tilegrid.js", "../../ol/source/Tile.js", "../../ol/tileurlfunction.js", "../../ol/source/UrlTile.js", "../../ol/source/VectorTile.js", "../../ol/reproj/Image.js", "../../ol/source/Image.js", "../../ol/layer/BaseTile.js", "../../ol/layer/Tile.js", "../../ol/source/Raster.js", "../../ol/source/TileImage.js", "../../ol/net.js", "../../ol/source/TileJSON.js", "../../ol-mapbox-style/node_modules/csscolorparser/csscolorparser.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/color.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js", "../../ol-mapbox-style/node_modules/@mapbox/unitbezier/index.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/result.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/function/index.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/reference/v8.json", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js", "../../ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/deref.js", "../../ol-mapbox-style/node_modules/mapbox-to-css-font/index.js", "../../ol-mapbox-style/src/shaders.js", "../../ol-mapbox-style/src/mapbox.js", "../../ol-mapbox-style/src/apply.js", "../../ol-mapbox-style/src/util.js", "../../ol-mapbox-style/src/text.js", "../../ol-mapbox-style/src/stylefunction.js", "../../ol/renderer/canvas/VectorImageLayer.js", "../../ol/layer/VectorImage.js", "../../ol/webgl/PaletteTexture.js", "../../ol/DataTile.js", "../../ol/reproj/DataTile.js", "../../ol/webgl/BaseTileRepresentation.js", "../../ol/webgl/TileTexture.js", "../../ol/renderer/webgl/TileLayerBase.js", "../../ol/renderer/webgl/TileLayer.js", "../../ol/style/expressions.js", "../../ol/webgl/ShaderBuilder.js", "../../ol/layer/WebGLTile.js", "../../ol/source/XYZ.js", "../../ol/source/Cluster.js", "../../ol/source/DataTile.js", "../../@petamoriken/float16/src/_util/messages.mjs", "../../@petamoriken/float16/src/_util/primordials.mjs", "../../@petamoriken/float16/src/_util/arrayIterator.mjs", "../../@petamoriken/float16/src/_util/is.mjs", "../../@petamoriken/float16/src/_util/brand.mjs", "../../@petamoriken/float16/src/_util/converter.mjs", "../../@petamoriken/float16/src/_util/spec.mjs", "../../@petamoriken/float16/src/Float16Array.mjs", "../../@petamoriken/float16/src/DataView.mjs", "../../geotiff/dist-module/geotiffimage.js", "../../geotiff/dist-module/rgb.js", "../../geotiff/dist-module/compression/index.js", "../../geotiff/dist-module/resample.js", "../../geotiff/dist-module/dataview64.js", "../../geotiff/dist-module/dataslice.js", "../../geotiff/dist-module/pool.js", "../../geotiff/dist-module/source/httputils.js", "../../geotiff/dist-module/source/basesource.js", "../../quick-lru/index.js", "../../geotiff/dist-module/utils.js", "../../geotiff/dist-module/source/blockedsource.js", "../../geotiff/dist-module/source/client/base.js", "../../geotiff/dist-module/source/client/fetch.js", "../../geotiff/dist-module/source/client/xhr.js", "../../geotiff/dist-module/source/client/http.js", "../../geotiff/dist-module/source/remote.js", "../../geotiff/dist-module/source/filereader.js", "../../geotiff/dist-module/source/file.js", "../../geotiff/dist-module/geotiffwriter.js", "../../geotiff/dist-module/logging.js", "../../geotiff/dist-module/geotiff.js", "../../ol/source/GeoTIFF.js", "../../ol/format/IIIFInfo.js", "../../ol/uri.js", "../../ol/source/ImageStatic.js", "../../ol/source/wms.js", "../../ol/source/ImageWMS.js", "../../ol/source/OSM.js", "../../ol/source/Stamen.js", "../../ol/source/TileWMS.js", "../../ol/tilegrid/WMTS.js", "../../ol/source/WMTS.js", "../../rlayers/src/layer/RLayerRaster.tsx", "../../rlayers/src/layer/RLayerTile.tsx", "../../rlayers/src/layer/RLayerBaseVector.tsx", "../../rlayers/src/RFeature.tsx", "../../rlayers/src/layer/RLayerVector.tsx", "../../rlayers/src/layer/RLayerVectorImage.tsx", "../../rlayers/src/layer/ROSM.tsx", "../../ol/xml.js", "../../ol/format/XML.js", "../../ol/format/xlink.js", "../../ol/format/xsd.js", "../../ol/format/OWS.js", "../../ol/format/WMTSCapabilities.js", "../../rlayers/src/layer/RLayerWMTS.tsx", "../../rlayers/src/layer/RLayerWMS.tsx", "../../rlayers/src/layer/RLayerImage.tsx", "../../rlayers/src/layer/RLayerGraticule.tsx", "../../rlayers/src/layer/RLayerTileJSON.tsx", "../../rlayers/src/layer/RLayerTileWMS.tsx", "../../rlayers/src/layer/RLayerStamen.tsx", "../../rlayers/src/layer/RLayerHeatmap.tsx", "../../rlayers/src/layer/RLayerCluster.tsx", "../../rlayers/src/layer/RLayerVectorTile.tsx", "../../rlayers/src/layer/RLayerWebGL.tsx", "../../rlayers/src/layer/RLayerTileWebGL.tsx", "../../rlayers/src/layer/ROSMWebGL.tsx", "../../rlayers/src/control/index.ts", "../../ol/control/FullScreen.js", "../../ol/control/MousePosition.js", "../../ol/control/OverviewMap.js", "../../ol/control/ScaleLine.js", "../../ol/control/ZoomSlider.js", "../../ol/control/ZoomToExtent.js", "../../rlayers/src/control/RControlBase.tsx", "../../rlayers/src/control/RScaleLine.tsx", "../../rlayers/src/control/RAttribution.tsx", "../../rlayers/src/control/RZoom.tsx", "../../rlayers/src/control/RZoomSlider.tsx", "../../rlayers/src/control/RRotate.tsx", "../../rlayers/src/control/RCustom.tsx", "../../rlayers/src/control/RLayers.tsx", "../../rlayers/src/control/ROverviewMap.tsx", "../../rlayers/src/control/RFullScreen.tsx", "../../rlayers/src/control/RMousePosition.tsx", "../../rlayers/src/control/RZoomToExtent.tsx", "../../rlayers/src/interaction/index.ts", "../../rlayers/src/interaction/RBaseInteraction.tsx", "../../rlayers/src/interaction/RPointer.tsx", "../../rlayers/src/interaction/RDragBox.tsx", "../../ol/interaction/Translate.js", "../../rlayers/src/interaction/RTranslate.tsx", "../../ol/interaction/Draw.js", "../../rlayers/src/interaction/RDraw.tsx", "../../ol/interaction/Modify.js", "../../rlayers/src/interaction/RModify.tsx", "../../rlayers/src/interaction/RDoubleClickZoom.tsx", "../../rlayers/src/interaction/RDragPan.tsx", "../../rlayers/src/interaction/RDragRotate.tsx", "../../rlayers/src/interaction/RDragZoom.tsx", "../../rlayers/src/interaction/RMouseWheelZoom.tsx", "../../rlayers/src/interaction/RPinchRotate.tsx", "../../rlayers/src/interaction/RPinchZoom.tsx", "../../rlayers/src/interaction/RKeyboardPan.tsx", "../../rlayers/src/interaction/RKeyboardZoom.tsx", "../../rlayers/src/ROverlay.tsx", "../../rlayers/src/RPopup.tsx", "../../rlayers/src/RGeolocation.tsx"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n", "function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"[xml-utils] getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  // only search for attributes in the opening tag\n  const opening = xml.slice(0, xml.indexOf(\">\") + 1);\n\n  const quotechars = ['\"', \"'\"];\n  for (let i = 0; i < quotechars.length; i++) {\n    const char = quotechars[i];\n    const pattern = attributeName + \"\\\\=\" + char + \"([^\" + char + \"]*)\" + char;\n    if (debug) console.log(\"[xml-utils] pattern:\", pattern);\n\n    const re = new RegExp(pattern);\n    const match = re.exec(opening);\n    if (debug) console.log(\"[xml-utils] match:\", match);\n    if (match) return match[1];\n  }\n}\n\nmodule.exports = getAttribute;\nmodule.exports.default = getAttribute;\n", "function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;\nmodule.exports.default = indexOfMatch;\n", "function indexOfMatchEnd(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index + match[0].length - 1;\n  else return -1;\n}\n\nmodule.exports = indexOfMatchEnd;\nmodule.exports.default = indexOfMatchEnd;\n", "function countSubstring(string, substring) {\n  const pattern = new RegExp(substring, \"g\");\n  const match = string.match(pattern);\n  return match ? match.length : 0;\n}\n\nmodule.exports = countSubstring;\nmodule.exports.default = countSubstring;\n", "const indexOfMatch = require(\"./index-of-match.js\");\nconst indexOfMatchEnd = require(\"./index-of-match-end.js\");\nconst countSubstring = require(\"./count-substring.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n  const nested = !(options && typeof options.nested === false);\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\n\\>\\/]`, startIndex);\n  if (debug) console.log(\"[xml-utils] start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n\n  let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n\n  const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n  if (debug) console.log(\"[xml-utils] selfClosing:\", selfClosing);\n\n  if (selfClosing === false) {\n    // check if tag has subtags with the same name\n    if (nested) {\n      let startIndex = 0;\n      let openings = 1;\n      let closings = 0;\n      while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex)) !== -1) {\n        const clip = afterStart.substring(startIndex, relativeEnd + 1);\n        openings += countSubstring(clip, \"<\" + tagName + \"[ \\n\\t>]\");\n        closings += countSubstring(clip, \"</\" + tagName + \">\");\n        // we can't have more openings than closings\n        if (closings >= openings) break;\n        startIndex = relativeEnd;\n      }\n    } else {\n      relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n    }\n  }\n\n  const end = start + tagName.length + relativeEnd + 1;\n  if (debug) console.log(\"[xml-utils] end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\nmodule.exports.default = findTagByName;\n", "const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = (options && options.debug) || false;\n  const nested = options && typeof options.nested === \"boolean\" ? options.nested : true;\n  let startIndex = (options && options.startIndex) || 0;\n  let tag;\n  while ((tag = findTagByName(xml, tagName, { debug, startIndex }))) {\n    if (nested) {\n      startIndex = tag.start + 1 + tagName.length;\n    } else {\n      startIndex = tag.end;\n    }\n    tags.push(tag);\n  }\n  if (debug) console.log(\"findTagsByName found\", tags.length, \"tags\");\n  return tags;\n}\n\nmodule.exports = findTagsByName;\nmodule.exports.default = findTagsByName;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n", "/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n", "/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n", "/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n", "/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n", "/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n", "/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n", "/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n", "/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n", "/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n", "/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n", "/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n", "/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n", "/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n", "/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n", "/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n", "\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n", "import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n", "/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `'text-placement': 'line'` or the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|null|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n  if (color === 'none') {\n    return null;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n\n/**\n * @return {import('./flat.js').FlatStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n", "/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n", "/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n", "/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n", "/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n", "/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n", "/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n", "/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n", "import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n", "/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n", "/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n", "/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n", "/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n", "/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n", "/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n", "/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n", "/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n", "/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n", "/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n", "/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n", "/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n", "/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n", "/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n", "/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n", "/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n", "/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n", "/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n", "/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n", "/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n", "/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n", "/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n", "/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n", "/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n", "/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n", "/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n", "/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n", "/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n", "/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n", "/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n", "/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n", "/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n", "/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n", "/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n", "/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n", "/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n", "/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n", "/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n", "/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n", "/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n", "/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n", "/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n", "/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n", "/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n", "/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n", "/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n", "/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n", "/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n", "/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n", "/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n", "/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n", "/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n", "/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n", "/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n", "/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n", "/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n", "/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n", "/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n", "/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n", "/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n", "/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n", "/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n", "/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n", "/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n", "/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n", "/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n", "/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n", "/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n", "/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n", "import React, {PropsWithChildren} from 'react';\nimport {Map, View, MapBrowserEvent, MapEvent} from 'ol';\nimport RenderEvent from 'ol/render/Event';\nimport BaseEvent from 'ol/events/Event';\nimport {Extent} from 'ol/extent';\nimport {Coordinate} from 'ol/coordinate';\nimport {ProjectionLike} from 'ol/proj';\n\nimport {RContext} from './context';\nimport {RlayersBase} from './REvent';\n\n/** Center and zoom level */\nexport type RView = {\n    /** Center of the map */\n    center: Coordinate;\n    /** Zoom level, 0 is the whole world, 28 is maximum resolution */\n    zoom: number;\n    /**\n     * Optional resolution in meters per pixel\n     *\n     * When set, it takes precedence over the zoom level\n     *\n     * @default zoom\n     */\n    resolution?: number;\n};\n\n/**\n * @propsfor RMap\n */\nexport interface RMapProps extends PropsWithChildren<unknown> {\n    /** The initial view parameters - {center, zoom}, reset only on full component reload */\n    initial: RView;\n    /** External view state with React semantics */\n    view?: [RView, (view: RView) => void];\n    /** CSS class */\n    className?: string;\n    /** Width when not using CSS */\n    width?: number | string;\n    /** Height when not using CSS */\n    height?: number | string;\n    /**\n     * Do not include any default controls. Cannot be changed once set.\n     * @default false\n     */\n    noDefaultControls?: boolean;\n    /**\n     * Do not include any default interactions. Cannot be changed once set.\n     * @default false\n     */\n    noDefaultInteractions?: boolean;\n    /** View projection\n     * @default 'ESPG:3857'\n     */\n    projection?: ProjectionLike;\n    /** Called immediately on click */\n    onClick?: (this: RMap, e: MapBrowserEvent<UIEvent>) => boolean | void;\n    /** Called on single click when the double click timer has expired */\n    onSingleClick?: (this: RMap, e: MapBrowserEvent<UIEvent>) => boolean | void;\n    /** Called on double click */\n    onDblClick?: (this: RMap, e: MapBrowserEvent<UIEvent>) => boolean | void;\n    /** Called when the user starts panning the map */\n    onMoveStart?: (this: RMap, e: MapBrowserEvent<UIEvent>) => boolean | void;\n    /** Called when the user stops panning the map */\n    onMoveEnd?: (this: RMap, e: MapBrowserEvent<UIEvent>) => boolean | void;\n    /** Called on every pointer move when dragging, `e.preventDefault()`\n     * can be used to stop OpenLayers from also panning the map */\n    onPointerDrag?: (this: RMap, e: MapBrowserEvent<UIEvent>) => boolean | void;\n    /** Called on every pointer movement, use with care */\n    onPointerMove?: (this: RMap, e: MapBrowserEvent<UIEvent>) => boolean | void;\n    /** Called after a layer has been rendered */\n    onPostRender?: (this: RMap, e: MapEvent) => boolean | void;\n    /** Called before layers are composed */\n    onPreCompose?: (this: RMap, e: RenderEvent) => boolean | void;\n    /** Called after layers are composed */\n    onPostCompose?: (this: RMap, e: RenderEvent) => boolean | void;\n    /** Called after completely rendering the map */\n    onRenderComplete?: (this: RMap, e: RenderEvent) => boolean | void;\n    /** Called on every change */\n    onChange?: (this: RMap, e: BaseEvent) => void;\n    /** A set of properties that can be accessed later by .get()/.getProperties() */\n    properties?: Record<string, unknown>;\n    /** Extent of the map, cannot be dynamically modified\n     * @default world\n     */\n    extent?: Extent;\n    /** Minimum resolution, cannot be dynamically modified */\n    minResolution?: number;\n    /** Maximum resolution, cannot be dynamically modified */\n    maxResolution?: number;\n    /**\n     * If true, the view will always animate to the closest zoom level after an interaction;\n     * false means intermediary zoom levels are allowed.\n     * @default false\n     */\n    constrainResolution?: boolean;\n    /** Minimum zoom level */\n    minZoom?: number;\n    /** Maximum zoom level */\n    maxZoom?: number;\n    /**\n     * Allow rotation of the map.\n     * Cannot be updated once the map is created.\n     *\n     * @default true\n     */\n    enableRotation?: boolean;\n    /**\n     * Rotation constraint. false means no constraint. true means no constraint, but snap to zero near zero.\n     * A number constrains the rotation to that number of values.\n     * For example, 4 will constrain the rotation to 0, 90, 180, and 270 degrees.\n     * Cannot be updated once the map is created.\n     *\n     * @default true\n     */\n    constrainRotation?: boolean | number;\n}\n\n/**\n * Main map component\n *\n * All other components, except `RStyle` should be part of an `RMap`\n */\nexport default class RMap extends RlayersBase<RMapProps, Record<string, never>> {\n    ol: Map;\n    target: React.RefObject<HTMLDivElement>;\n\n    constructor(props: Readonly<RMapProps>) {\n        super(props);\n        this.target = React.createRef();\n        this.ol = new Map({\n            controls: props.noDefaultControls ? [] : undefined,\n            interactions: props.noDefaultInteractions ? [] : undefined,\n            view: new View({\n                projection: props.projection,\n                center: props.initial.center,\n                zoom: props.initial.resolution === undefined ? props.initial.zoom : undefined,\n                resolution: props.initial.resolution,\n                extent: props.extent,\n                minResolution: props.minResolution,\n                maxResolution: props.maxResolution,\n                constrainResolution: props.constrainResolution,\n                minZoom: props.minZoom,\n                maxZoom: props.maxZoom,\n                enableRotation: props.enableRotation,\n                constrainRotation: props.constrainRotation\n            })\n        });\n        if (this.props.view) this.ol.on('moveend', this.updateView);\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.ol.setTarget(this.target.current);\n    }\n\n    updateView = (e: MapEvent): void => {\n        const view = this.ol.getView();\n        if (typeof this.props?.view[1] === 'function')\n            this.props.view[1]({\n                center: view.getCenter(),\n                zoom: view.getZoom(),\n                resolution: view.getResolution()\n            });\n    };\n\n    refresh(prevProps?: RMapProps): void {\n        super.refresh(prevProps);\n        const view = this.ol.getView();\n        for (const p of ['minZoom', 'maxZoom', 'constrainResolution']) {\n            const m = p.charAt(0).toUpperCase() + p.substring(1);\n            if (!prevProps || this.props[p] !== prevProps[p]) view['set' + m](this.props[p]);\n        }\n        if (this.props.view) {\n            view.setCenter(this.props.view[0].center);\n\n            if (this.props.view[0].resolution === undefined) view.setZoom(this.props.view[0].zoom);\n            else view.setResolution(this.props.view[0].resolution);\n        }\n        if (this.props.properties) this.ol.setProperties(this.props.properties);\n        if (this.props.view) this.ol.on('moveend', this.updateView);\n        else this.ol.un('moveend', this.updateView);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div\n                className={this.props.className}\n                style={{width: this.props.width, height: this.props.height}}\n                ref={this.target}\n            >\n                <RContext.Provider value={{map: this.ol}}>{this.props.children}</RContext.Provider>\n            </div>\n        );\n    }\n}\n", "import React, {PropsWithChildren} from 'react';\nimport {Layer} from 'ol/layer';\nimport {Source} from 'ol/source';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport BaseEvent from 'ol/events/Event';\nimport {ProjectionLike} from 'ol/proj';\n\nimport {RContext, RContextType} from '../context';\nimport {RlayersBase} from '../REvent';\nimport debug from '../debug';\n\n/**\n * @propsfor RLayerProps\n */\nexport interface RLayerProps extends PropsWithChildren<unknown> {\n    /** State of the layer */\n    visible?: boolean;\n    /** Opacity when blending */\n    opacity?: number;\n    /** zIndex */\n    zIndex?: number;\n    /** Minimum resolution below which the layer is not rendered */\n    minResolution?: number;\n    /** Maximum resolution above which the layer is not rendered */\n    maxResolution?: number;\n    /** Minimum zoom level below which the layer is not rendered */\n    minZoom?: number;\n    /** Maximum zoom level which the layer is not rendered */\n    maxZoom?: number;\n    /** Custom attributions string */\n    attributions?: string;\n    /** A set of properties that can be accessed later by .get()/.getProperties() */\n    properties?: Record<string, unknown>;\n    /** The layer will be reprojected if its projection is different than the map */\n    projection?: ProjectionLike;\n    /** Called on every change */\n    onChange?: (this: RLayer<RLayerProps>, e: BaseEvent) => void;\n}\n\n/**\n * Abstract base class for all layers, not meant to be used directly\n */\nexport default class RLayer<P extends RLayerProps> extends RlayersBase<P, Record<string, never>> {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ol: Layer<Source, LayerRenderer<any>>;\n    source: Source;\n\n    constructor(props: Readonly<P>, context?: React.Context<RContextType>) {\n        super(props, context);\n        if (!this.context?.map?.addLayer) throw new Error('A layer must be part of a map');\n    }\n\n    refresh(prevProps?: P): void {\n        super.refresh(prevProps);\n        for (const p of [\n            'visible',\n            'opacity',\n            'zIndex',\n            'minResolution',\n            'maxResolution',\n            'minZoom',\n            'maxZoom'\n        ]) {\n            const m = p.charAt(0).toUpperCase() + p.substring(1);\n            if (this.props[p] !== (prevProps && prevProps[p])) this.ol['set' + m](this.props[p]);\n        }\n        if (this.source && this.props.attributions)\n            this.source.setAttributions(this.props.attributions);\n        if (this.props.properties) this.ol.setProperties(this.props.properties);\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.context.map.addLayer(this.ol);\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.context.map.removeLayer(this.ol);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='_rlayers_RLayer'>\n                <RContext.Provider\n                    value={\n                        {\n                            ...this.context,\n                            layer: this.ol,\n                            source: this.source\n                        } as RContextType\n                    }\n                >\n                    {this.props.children}\n                </RContext.Provider>\n            </div>\n        );\n    }\n}\n", "/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n", "/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n", "/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n", "/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1]\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   * @api\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n", "/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n", "/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n", "/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n", "/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1]\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n", "/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n", "/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n", "\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\",69:\\\"`width` or `height` cannot be provided together with `scale`\\\"};class o extends Error{constructor(e){const t=r[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}var i=o;function a(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function s(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],a=t[1],s=t[2],u=t[3],f=t[4],x=t[5];return e[0]=u/n,e[1]=-a/n,e[2]=-s/n,e[3]=o/n,e[4]=(s*x-u*f)/n,e[5]=-(o*x-a*f)/n,e}function u(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var f={exports:{}};function x(e,t,n){n=n||2;var r,o,i,a,s,u,f,x=t&&t.length,h=x?t[0]*n:e.length,v=l(e,0,h,n,!0),d=[];if(!v||v.next===v.prev)return d;if(x&&(v=function(e,t,n,r){var o,i,a,s=[];for(o=0,i=t.length;o<i;o++)(a=l(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===a.next&&(a.steiner=!0),s.push(A(a));for(s.sort(b),o=0;o<s.length;o++)n=g(s[o],n);return n}(e,t,v,n)),e.length>80*n){r=i=e[0],o=a=e[1];for(var y=n;y<h;y+=n)(s=e[y])<r&&(r=s),(u=e[y+1])<o&&(o=u),s>i&&(i=s),u>a&&(a=u);f=0!==(f=Math.max(i-r,a-o))?32767/f:0}return c(v,d,n,r,o,f,0),d}function l(e,t,n,r,o){var i,a;if(o===P(e,t,n,r)>0)for(i=t;i<n;i+=r)a=k(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=k(i,e[i],e[i+1],a);return a&&F(a,a.next)&&(R(a),a=a.next),a}function h(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!F(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(R(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function c(e,t,n,r,o,i,a){if(e){!a&&i&&function(e,t,n,r){var o=e;do{0===o.z&&(o.z=w(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,a,s,u,f=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,s=0,t=0;t<f&&(s++,r=r.nextZ);t++);for(u=f;s>0||u>0&&r;)0!==s&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,s--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,f*=2}while(a>1)}(o)}(e,r,o,i);for(var s,u,f=e;e.prev!==e.next;)if(s=e.prev,u=e.next,i?d(e,r,o,i):v(e))t.push(s.i/n|0),t.push(e.i/n|0),t.push(u.i/n|0),R(e),e=u.next,f=u.next;else if((e=u)===f){a?1===a?c(e=y(h(e),t,n),t,n,r,o,i,2):2===a&&p(e,t,n,r,o,i):c(h(e),t,n,r,o,i,1);break}}}function v(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=t.x,i=n.x,a=r.x,s=t.y,u=n.y,f=r.y,x=o<i?o<a?o:a:i<a?i:a,l=s<u?s<f?s:f:u<f?u:f,h=o>i?o>a?o:a:i>a?i:a,c=s>u?s>f?s:f:u>f?u:f,v=r.next;v!==t;){if(v.x>=x&&v.x<=h&&v.y>=l&&v.y<=c&&E(o,s,i,u,a,f,v.x,v.y)&&Z(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function d(e,t,n,r){var o=e.prev,i=e,a=e.next;if(Z(o,i,a)>=0)return!1;for(var s=o.x,u=i.x,f=a.x,x=o.y,l=i.y,h=a.y,c=s<u?s<f?s:f:u<f?u:f,v=x<l?x<h?x:h:l<h?l:h,d=s>u?s>f?s:f:u>f?u:f,y=x>l?x>h?x:h:l>h?l:h,p=w(c,v,t,n,r),b=w(d,y,t,n,r),g=e.prevZ,m=e.nextZ;g&&g.z>=p&&m&&m.z<=b;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;g&&g.z>=p;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;m&&m.z<=b;){if(m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function y(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!F(o,i)&&T(o,r,r.next,i)&&z(o,i)&&z(i,o)&&(t.push(o.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),R(r),R(r.next),r=e=i),r=r.next}while(r!==e);return h(r)}function p(e,t,n,r,o,i){var a=e;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&M(a,s)){var u=U(a,s);return a=h(a,a.next),u=h(u,u.next),c(a,t,n,r,o,i,0),void c(u,t,n,r,o,i,0)}s=s.next}a=a.next}while(a!==e)}function b(e,t){return e.x-t.x}function g(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=o&&s>a&&(a=s,n=r.x<r.next.x?r:r.next,s===o))return n}r=r.next}while(r!==t);if(!n)return null;var u,f=n,x=n.x,l=n.y,h=1/0;r=n;do{o>=r.x&&r.x>=x&&o!==r.x&&E(i<l?o:a,i,x,l,i<l?a:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),z(r,e)&&(u<h||u===h&&(r.x>n.x||r.x===n.x&&m(n,r)))&&(n=r,h=u)),r=r.next}while(r!==f);return n}(e,t);if(!n)return t;var r=U(n,e);return h(r,r.next),h(n,n.next)}function m(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function w(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function A(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function E(e,t,n,r,o,i,a,s){return(o-a)*(t-s)>=(e-a)*(i-s)&&(e-a)*(r-s)>=(n-a)*(t-s)&&(n-a)*(i-s)>=(o-a)*(r-s)}function M(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&T(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||F(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function F(e,t){return e.x===t.x&&e.y===t.y}function T(e,t,n,r){var o=S(Z(e,t,n)),i=S(Z(e,t,r)),a=S(Z(n,r,e)),s=S(Z(n,r,t));return o!==i&&a!==s||(!(0!==o||!I(e,n,t))||(!(0!==i||!I(e,r,t))||(!(0!==a||!I(n,e,r))||!(0!==s||!I(n,t,r)))))}function I(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function S(e){return e>0?1:e<0?-1:0}function z(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function U(e,t){var n=new B(e.i,e.x,e.y),r=new B(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function k(e,t,n,r){var o=new B(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function R(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function B(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function P(e,t,n,r){for(var o=0,i=t,a=n-r;i<n;i+=r)o+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return o}f.exports=x,f.exports.default=x,x.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,a=Math.abs(P(e,0,i,n));if(o)for(var s=0,u=t.length;s<u;s++){var f=t[s]*n,x=s<u-1?t[s+1]*n:e.length;a-=Math.abs(P(e,f,x,n))}var l=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,c=r[s+1]*n,v=r[s+2]*n;l+=Math.abs((e[h]-e[v])*(e[c+1]-e[h+1])-(e[h]-e[c])*(e[v+1]-e[h+1]))}return 0===a&&0===l?0:Math.abs((l-a)/a)},x.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var a=0;a<t;a++)n.vertices.push(e[o][i][a]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};var N=u(f.exports);const _=[],O={vertexPosition:0,indexPosition:0};function q(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function L(e,t,n,r,o,i){const a=3+o,s=e[t+0],u=e[t+1],f=_;f.length=o;for(let n=0;n<f.length;n++)f[n]=e[t+2+n];let x=i?i.vertexPosition:0,l=i?i.indexPosition:0;const h=x/a;return q(n,x,s,u,0),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,1),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,2),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,3),f.length&&n.set(f,x+3),x+=a,r[l++]=h,r[l++]=h+1,r[l++]=h+3,r[l++]=h+1,r[l++]=h+2,r[l++]=h+3,O.vertexPosition=x,O.indexPosition=l,O}function C(e,t,n,r,o,i,s,u,f,x){const l=5+u.length,h=i.length/l,c=[e[t+0],e[t+1]],v=[e[n],e[n+1]],d=a(x,[...c]),y=a(x,[...v]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],a=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),s=[(n[0]-e[0])/a,(n[1]-e[1])/a],u=0===r||0===a?0:Math.acos((f=s[0]*o[0]+s[1]*o[1],x=-1,l=1,Math.min(Math.max(f,x),l)));var f,x,l;return s[0]*i[0]+s[1]*i[1]>0?u:2*Math.PI-u}const g=null!==o;let m=0,w=0;if(null!==r){m=b(d,y,a(x,[...[e[r],e[r+1]]]))}if(g){w=b(y,d,a(x,[...[e[o],e[o+1]]]))}i.push(c[0],c[1],v[0],v[1],p(0,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(1,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(2,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(3,m,w)),i.push(...u),s.push(h,h+1,h+2,h+1,h+3,h+2)}function G(e,t,n,r,o){const i=2+o;let a=t;const s=e.slice(a,a+o);a+=o;const u=e[a++];let f=0;const x=new Array(u-1);for(let t=0;t<u;t++)f+=e[a++],t<u-1&&(x[t]=f);const l=e.slice(a,a+2*f),h=N(l,x,2);for(let e=0;e<h.length;e++)r.push(h[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...s);return a+2*f}const j=self;j.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesSize,r=t+n,i=new Float32Array(o.renderInstructions),a=i.length/r,s=4*a*(n+e),u=new Uint32Array(6*a),f=new Float32Array(s);let x;for(let e=0;e<i.length;e+=r)x=L(i,e,f,u,n,x);const l=Object.assign({vertexBuffer:f.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);j.postMessage(l,[f.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesSize,r=2,i=new Float32Array(o.renderInstructions);let a=0;const u=o.renderInstructionsTransform,f=[1,0,0,1,0,0];let x,l;for(s(f,u);a<i.length;){l=Array.from(i.slice(a,a+n)),a+=n,x=i[a++];for(let n=0;n<x-1;n++)C(i,a+n*r,a+(n+1)*r,n>0?a+(n-1)*r:null,n<x-2?a+(n+2)*r:null,e,t,l,0,f);a+=x*r}const h=Uint32Array.from(t),c=Float32Array.from(e),v=Object.assign({vertexBuffer:c.buffer,indexBuffer:h.buffer,renderInstructions:i.buffer},o);j.postMessage(v,[c.buffer,h.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesSize,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=G(r,i,e,t,n);const a=Uint32Array.from(t),s=Float32Array.from(e),u=Object.assign({vertexBuffer:s.buffer,indexBuffer:a.buffer,renderInstructions:r.buffer},o);j.postMessage(u,[s.buffer,a.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n", "/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const [startWorld, endWorld, worldWidth] =\n      this.getWorldParameters_(frameState);\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Compute world params\n   * @private\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<number>} The world start, end and width.\n   */\n  getWorldParameters_(frameState) {\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    return [startWorld, endWorld, worldWidth];\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n", "/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      hitDetectionEnabled: true,\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n        uniform mediump int u_hitDetection;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n          if (u_hitDetection > 0) {\n            if (alpha < 0.05) {\n              discard;\n            }\n            gl_FragColor = v_hitColor;\n          }\n      }`,\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => {\n              return this.gradient_;\n            },\n            u_opacity: () => {\n              return this.getOpacity();\n            },\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n", "/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n", "/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return this.image_ ? this.image_.getImage() : null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = this.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n", "/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n", "/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n", "/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n", "/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n", "/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n", "/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n", "/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n", "/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n", "/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n", "/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n", "/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n", "/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n", "/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n", "/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n", "/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n", "/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n", "/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n", "/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n", "/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n", "/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n", "/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n", "/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n", "/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n", "/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n", "/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n", "/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n", "// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n", "// @flow\n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n    static blue: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n", "// @flow\n\nimport assert from 'assert';\n\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {ExpressionSpecification} from '../types.js';\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters: any, propertySpec: StylePropertySpecification): ExpressionSpecification {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string): string | ExpressionSpecification {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n", "// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n", "// @flow\n\nimport type {Expression} from './expression.js';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[_: string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>): Scope {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n", "// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\nexport type ResolvedImageTypeT = { kind: 'resolvedImage' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT |\n    ResolvedImageTypeT\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object'\n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: any, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n", "// @flow\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare var Intl: {\n    Collator: Class<Intl$Collator>\n};\n\ndeclare class Intl$Collator {\n    constructor (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    static (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    compare (a: string, b: string): number;\n\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit',\n    usage?: 'sort' | 'search',\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant',\n    ignorePunctuation?: boolean,\n    numeric?: boolean,\n    caseFirst?: 'upper' | 'lower' | 'false'\n}\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n", "// @flow\nimport type Color from '../../util/color.js';\nimport type ResolvedImage from '../types/resolved_image.js';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<mixed> {\n        const serialized: Array<mixed> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: { [key: string]: mixed } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]: Array<mixed>).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n", "// @flow\n\nexport type ResolvedImageOptions = {\n    name: string,\n    available: boolean\n};\n\nexport default class ResolvedImage {\n    name: string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString(): string {\n        return this.name;\n    }\n\n    static fromString(name: string): ResolvedImage | null {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize(): Array<string> {\n        return [\"image\", this.name];\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\nimport type {Type} from './types.js';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value): string {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n", "// @flow\n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\nimport type {Type} from '../types.js';\nimport type {Value}  from '../values.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Literal {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate(): Value {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n", "// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON(): string {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n", "// @flow\n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]: any);\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext): Formatted {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n", "// @flow\n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx: EvaluationContext): null | ResolvedImage {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"image\", this.input.serialize()];\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): null | boolean | number | string | Color | Formatted | ResolvedImage {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n", "// @flow\n\nimport {Color} from './values.js';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {FormattedSection} from './types/formatted.js';\nimport type {GlobalProperties, Feature, FeatureState} from './index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n    formattedSection: ?FormattedSection;\n    availableImages: ?Array<string>;\n    canonical: null | CanonicalTileID;\n    featureTileCoord: ?Point;\n    featureDistanceData: ?FeatureDistanceData;\n\n    _parseColorCache: {[_: string]: ?Color};\n\n    constructor() {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id(): number | null {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType(): null | string {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry(): ?Array<Array<Point>> {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID(): null | CanonicalTileID {\n        return this.canonical;\n    }\n\n    properties(): {[string]: any} {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter(): number {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n", "// @flow\n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\nimport type {Value} from './values.js';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: {[_: string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = (null: any);\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {[_: string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n", "// @flow\n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext): Collator {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n", "// @flow\n\nimport {isValue} from '../values.js';\nimport type {Type} from '../types.js';\nimport {BooleanType} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {GeoJSON, GeoJSONPolygon, GeoJSONMultiPolygon} from '@mapbox/geojson-types';\nimport type {CanonicalTileID} from '../../../source/tile_id.js';\n\ntype GeoJSONPolygons =| GeoJSONPolygon | GeoJSONMultiPolygon;\n\n// minX, minY, maxX, maxY\ntype BBox = [number, number, number, number];\nconst EXTENT = 8192;\n\nfunction updateBBox(bbox: BBox, coord: [number, number]) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1: BBox, bbox2: BBox) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical: CanonicalTileID) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox: BBox, canonical: CanonicalTileID) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical: CanonicalTileID) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Within {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]: Object);\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n", "// @flow\n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\nimport type {Expression} from './expression.js';\n\nfunction isFeatureConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>): boolean {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n", "// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Var {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<string> {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n", "// @flow\n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: ?Type, bindings?: Array<[string, Expression]>): ParsingContext {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n", "// @flow\n\nimport RuntimeError from './runtime_error.js';\n\nimport type {Expression} from './expression.js';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number): number {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n", "// @flow\n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Step {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n", "/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n", "// @flow\n\nimport Color from './color.js';\n\nexport function number(a: number, b: number, t: number): number {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number): Color {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n", "// @flow\n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number): LABColor {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number): HCLColor {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n", "// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number): number {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Interpolate {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): Color {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Coalesce {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n", "// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Let {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined(): boolean {\n        return this.result.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n", "// @flow\n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type, ArrayType} from '../types.js';\nimport type {Value} from '../values.js';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?At {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n", "// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?In {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n", "// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: ?Expression;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?IndexOf {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx): number);\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType, type Type} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Match {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Case {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n", "// @flow\n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: ?Expression;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Slice {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const beginIndex = (this.beginIndex.evaluate(ctx): number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx): number);\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n", "// @flow\n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression, ExpressionRegistration} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx: EvaluationContext, a: any, b: any): boolean { return a === b; }\nfunction neq(ctx: EvaluationContext, a: any, b: any): boolean { return a !== b; }\nfunction lt(ctx: EvaluationContext, a: any, b: any): boolean { return a < b; }\nfunction gt(ctx: EvaluationContext, a: any, b: any): boolean { return a > b; }\nfunction lteq(ctx: EvaluationContext, a: any, b: any): boolean { return a <= b; }\nfunction gteq(ctx: EvaluationContext, a: any, b: any): boolean { return a >= b; }\n\nfunction eqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic: (EvaluationContext, any, any) => boolean, compareWithCollator: (EvaluationContext, any, any, any) => boolean): ExpressionRegistration {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext): boolean {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n\n        serialize(): SerializedExpression {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals: $Call<typeof makeComparison, '==', typeof eq, typeof eqCollate> = makeComparison('==', eq, eqCollate);\nexport const NotEquals: $Call<typeof makeComparison, '!=', typeof neq, typeof neqCollate> = makeComparison('!=', neq, neqCollate);\nexport const LessThan: $Call<typeof makeComparison, '<', typeof lt, typeof ltCollate> = makeComparison('<', lt, ltCollate);\nexport const GreaterThan: $Call<typeof makeComparison, '>', typeof gt, typeof gtCollate> = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual: $Call<typeof makeComparison, '<=', typeof lteq, typeof lteqCollate> = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual: $Call<typeof makeComparison, '>=', typeof gteq, typeof gteqCollate> = makeComparison('>=', gteq, gteqCollate);\n", "// @flow\n\nimport {StringType, NumberType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ndeclare var Intl: {\n    NumberFormat: Class<Intl$NumberFormat>\n};\n\ndeclare class Intl$NumberFormat {\n    constructor (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    static (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    format(a: number): string;\n\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent' | 'unit';\n    currency?: null | string;\n    unit?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    unit: Expression | null;     // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                unit: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext): string {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n", "// @flow\n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Length {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext): any | number {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n", "// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\nimport type {Varargs} from '../compound_expression.js';\nimport type {ExpressionRegistry} from '../expression.js';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n", "// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n", "// @flow\n\nimport type {StylePropertySpecification} from '../style-spec.js';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n", "\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\nimport type {Type, EvaluationKind} from './types.js';\nimport type {Value} from './values.js';\nimport type {Expression} from './expression.js';\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {Result} from '../util/result.js';\nimport type {InterpolationType} from './definitions/interpolate.js';\nimport type {PropertyValueSpecification} from '../types.js';\nimport type {FormattedSection} from './types/formatted.js';\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nexport type Feature = {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'LineString' | 'Polygon',\n    +id?: number | null,\n    +properties: {[_: string]: any},\n    +patterns?: {[_: string]: string},\n    +geometry?: Array<Array<Point>>\n};\n\nexport type FeatureState = {[_: string]: any};\n\nexport type GlobalProperties = $ReadOnly<{\n    zoom: number,\n    pitch?: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    skyRadialProgress?: number,\n    isSupportedScript?: (_: string) => boolean,\n    accumulated?: Value\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[_: string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed): boolean {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n}\n\nexport type SourceExpression = {\n    kind: 'source',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n};\n\nexport type CameraExpression = {\n    kind: 'camera',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type CompositeExpression = {\n    kind: 'composite',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value): ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value): SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType): CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType): CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}): StylePropertyFunction<T> {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input: StylePropertyFunction<T>): {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification} {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n", "// @flow\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: mixed): mixed {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: mixed): mixed {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: { [key: string]: mixed } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n", "{\n  \"$version\": 8,\n  \"$root\": {\n    \"version\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": [\n        8\n      ],\n      \"doc\": \"Style specification version number. Must be 8.\",\n      \"example\": 8\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"doc\": \"A human-readable name for the style.\",\n      \"example\": \"Bright\"\n    },\n    \"metadata\": {\n      \"type\": \"*\",\n      \"doc\": \"Arbitrary properties useful to track with the stylesheet, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'mapbox:'.\"\n    },\n    \"center\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"doc\": \"Default map center in longitude and latitude.  The style center will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": [\n        -73.9749,\n        40.7736\n      ]\n    },\n    \"zoom\": {\n      \"type\": \"number\",\n      \"doc\": \"Default zoom level.  The style zoom will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": 12.5\n    },\n    \"bearing\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"doc\": \"Default bearing, in degrees. The bearing is the compass direction that is \\\"up\\\"; for example, a bearing of 90° orients the map so that east is up. This value will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": 29\n    },\n    \"pitch\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"units\": \"degrees\",\n      \"doc\": \"Default pitch, in degrees. Zero is perpendicular to the surface, for a look straight down at the map, while a greater value like 60 looks ahead towards the horizon. The style pitch will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": 50\n    },\n    \"light\": {\n      \"type\": \"light\",\n      \"doc\": \"The global light source.\",\n      \"example\": {\n        \"anchor\": \"viewport\",\n        \"color\": \"white\",\n        \"intensity\": 0.4\n      }\n    },\n    \"terrain\": {\n      \"type\": \"terrain\",\n      \"doc\": \"A global modifier that elevates layers and markers based on a DEM data source.\"\n    },\n    \"fog\": {\n      \"type\": \"fog\",\n      \"doc\": \"A global effect that fades layers and markers based on their distance to the camera. The fog can be used to approximate the effect of atmosphere on distant objects and enhance the depth perception of the map when used with terrain or 3D features. Note: fog is renamed to atmosphere in the Android and iOS SDKs and planned to be changed in GL-JS v.3.0.0.\"\n    },\n    \"sources\": {\n      \"required\": true,\n      \"type\": \"sources\",\n      \"doc\": \"Data source specifications.\",\n      \"example\": {\n        \"mapbox-streets\": {\n          \"type\": \"vector\",\n          \"url\": \"mapbox://mapbox.mapbox-streets-v6\"\n        }\n      }\n    },\n    \"sprite\": {\n      \"type\": \"string\",\n      \"doc\": \"A base URL for retrieving the sprite image and metadata. The extensions `.png`, `.json` and scale factor `@2x.png` will be automatically appended. This property is required if any layer uses the `background-pattern`, `fill-pattern`, `line-pattern`, `fill-extrusion-pattern`, or `icon-image` properties. The URL must be absolute, containing the [scheme, authority and path components](https://en.wikipedia.org/wiki/URL#Syntax).\",\n      \"example\": \"mapbox://sprites/mapbox/bright-v8\"\n    },\n    \"glyphs\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL template for loading signed-distance-field glyph sets in PBF format. The URL must include `{fontstack}` and `{range}` tokens. This property is required if any layer uses the `text-field` layout property. The URL must be absolute, containing the [scheme, authority and path components](https://en.wikipedia.org/wiki/URL#Syntax).\",\n      \"example\": \"mapbox://fonts/mapbox/{fontstack}/{range}.pbf\"\n    },\n    \"transition\": {\n      \"type\": \"transition\",\n      \"doc\": \"A global transition definition to use as a default across properties, to be used for timing transitions between one value and the next when no property-specific transition is set. Collision-based symbol fading is controlled independently of the style's `transition` property.\",\n      \"example\": {\n        \"duration\": 300,\n        \"delay\": 0\n      }\n    },\n    \"projection\": {\n      \"type\": \"projection\",\n      \"doc\": \"The projection the map should be rendered in. Supported projections are Mercator, Globe, Albers, Equal Earth, Equirectangular (WGS84), Lambert conformal conic, Natural Earth, and Winkel Tripel. Terrain, sky and fog are supported by only Mercator and globe. CustomLayerInterface is not supported outside of Mercator.\",\n      \"example\": {\n        \"name\": \"albers\",\n        \"center\": [-154, 50],\n        \"parallels\": [55, 65]\n      }\n    },\n    \"layers\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"value\": \"layer\",\n      \"doc\": \"Layers will be drawn in the order of this array.\",\n      \"example\": [\n        {\n          \"id\": \"water\",\n          \"source\": \"mapbox-streets\",\n          \"source-layer\": \"water\",\n          \"type\": \"fill\",\n          \"paint\": {\n            \"fill-color\": \"#00ffff\"\n          }\n        }\n      ]\n    }\n  },\n  \"sources\": {\n    \"*\": {\n      \"type\": \"source\",\n      \"doc\": \"Specification of a data source. For vector and raster sources, either TileJSON or a URL to a TileJSON must be provided. For image and video sources, a URL must be provided. For GeoJSON sources, a URL or inline GeoJSON must be provided.\"\n    }\n  },\n  \"source\": [\n    \"source_vector\",\n    \"source_raster\",\n    \"source_raster_dem\",\n    \"source_geojson\",\n    \"source_video\",\n    \"source_image\"\n  ],\n  \"source_vector\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"vector\": {\n          \"doc\": \"A vector tile source.\"\n        }\n      },\n      \"doc\": \"The type of the source.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`.\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"An array of one or more tile source URLs, as in the TileJSON spec.\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        -180,\n        -85.051129,\n        180,\n        85.051129\n      ],\n      \"doc\": \"An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL.\"\n    },\n    \"scheme\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"xyz\": {\n          \"doc\": \"Slippy map tilenames scheme.\"\n        },\n        \"tms\": {\n          \"doc\": \"OSGeo spec scheme.\"\n        }\n      },\n      \"default\": \"xyz\",\n      \"doc\": \"Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Minimum zoom level for which tiles are available, as in the TileJSON spec.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22,\n      \"doc\": \"Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"promoteId\": {\n      \"type\": \"promoteId\",\n      \"doc\": \"A property to use as a feature id (for feature state). Either a property name, or an object of the form `{<sourceLayer>: <propertyName>}`. If specified as a string for a vector tile source, the same property is used across all its source layers. If specified as an object only specified source layers will have id overriden, others will fallback to original feature id\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"A setting to determine whether a source's tiles are cached locally.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"android\": \"9.3.0\",\n          \"ios\": \"5.10.0\"\n        }\n      }\n    },\n    \"*\": {\n      \"type\": \"*\",\n      \"doc\": \"Other keys to configure the data source.\"\n    }\n  },\n  \"source_raster\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"raster\": {\n          \"doc\": \"A raster tile source.\"\n        }\n      },\n      \"doc\": \"The type of the source.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`.\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"An array of one or more tile source URLs, as in the TileJSON spec.\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        -180,\n        -85.051129,\n        180,\n        85.051129\n      ],\n      \"doc\": \"An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Minimum zoom level for which tiles are available, as in the TileJSON spec.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22,\n      \"doc\": \"Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.\"\n    },\n    \"tileSize\": {\n      \"type\": \"number\",\n      \"default\": 512,\n      \"units\": \"pixels\",\n      \"doc\": \"The minimum visual size to display tiles for this layer. Only configurable for raster layers.\"\n    },\n    \"scheme\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"xyz\": {\n          \"doc\": \"Slippy map tilenames scheme.\"\n        },\n        \"tms\": {\n          \"doc\": \"OSGeo spec scheme.\"\n        }\n      },\n      \"default\": \"xyz\",\n      \"doc\": \"Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed.\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"A setting to determine whether a source's tiles are cached locally.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"android\": \"9.3.0\",\n          \"ios\": \"5.10.0\"\n        }\n      }\n    },\n    \"*\": {\n      \"type\": \"*\",\n      \"doc\": \"Other keys to configure the data source.\"\n    }\n  },\n  \"source_raster_dem\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"raster-dem\": {\n          \"doc\": \"A RGB-encoded raster DEM source\"\n        }\n      },\n      \"doc\": \"The type of the source.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`.\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"An array of one or more tile source URLs, as in the TileJSON spec.\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        -180,\n        -85.051129,\n        180,\n        85.051129\n      ],\n      \"doc\": \"An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Minimum zoom level for which tiles are available, as in the TileJSON spec.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22,\n      \"doc\": \"Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.\"\n    },\n    \"tileSize\": {\n      \"type\": \"number\",\n      \"default\": 512,\n      \"units\": \"pixels\",\n      \"doc\": \"The minimum visual size to display tiles for this layer. Only configurable for raster layers.\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"encoding\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"terrarium\": {\n          \"doc\": \"Terrarium format PNG tiles. See https://aws.amazon.com/es/public-datasets/terrain/ for more info.\"\n        },\n        \"mapbox\": {\n          \"doc\": \"Mapbox Terrain RGB tiles. See https://www.mapbox.com/help/access-elevation-data/#mapbox-terrain-rgb for more info.\"\n        }\n      },\n      \"default\": \"mapbox\",\n      \"doc\": \"The encoding used by this source. Mapbox Terrain RGB is used by default\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"A setting to determine whether a source's tiles are cached locally.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"android\": \"9.3.0\",\n          \"ios\": \"5.10.0\"\n        }\n      }\n    },\n    \"*\": {\n      \"type\": \"*\",\n      \"doc\": \"Other keys to configure the data source.\"\n    }\n  },\n  \"source_geojson\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"geojson\": {\n          \"doc\": \"A GeoJSON data source.\"\n        }\n      },\n      \"doc\": \"The data type of the GeoJSON source.\"\n    },\n    \"data\": {\n      \"type\": \"*\",\n      \"doc\": \"A URL to a GeoJSON file, or inline GeoJSON.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 18,\n      \"doc\": \"Maximum zoom level at which to create vector tiles (higher means greater detail at high zoom levels).\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"buffer\": {\n      \"type\": \"number\",\n      \"default\": 128,\n      \"maximum\": 512,\n      \"minimum\": 0,\n      \"doc\": \"Size of the tile buffer on each side. A value of 0 produces no buffer. A value of 512 produces a buffer as wide as the tile itself. Larger values produce fewer rendering artifacts near tile edges and slower performance.\"\n    },\n    \"filter\": {\n      \"type\": \"*\",\n      \"doc\": \"An expression for filtering features prior to processing them for rendering.\"\n    },\n    \"tolerance\": {\n      \"type\": \"number\",\n      \"default\": 0.375,\n      \"doc\": \"Douglas-Peucker simplification tolerance (higher means simpler geometries and faster performance).\"\n    },\n    \"cluster\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If the data is a collection of point features, setting this to true clusters the points by radius into groups. Cluster groups become new `Point` features in the source with additional properties:\\n * `cluster` Is `true` if the point is a cluster \\n * `cluster_id` A unqiue id for the cluster to be used in conjunction with the [cluster inspection methods](https://www.mapbox.com/mapbox-gl-js/api/#geojsonsource#getclusterexpansionzoom)\\n * `point_count` Number of original points grouped into this cluster\\n * `point_count_abbreviated` An abbreviated point count\"\n    },\n    \"clusterRadius\": {\n      \"type\": \"number\",\n      \"default\": 50,\n      \"minimum\": 0,\n      \"doc\": \"Radius of each cluster if clustering is enabled. A value of 512 indicates a radius equal to the width of a tile.\"\n    },\n    \"clusterMaxZoom\": {\n      \"type\": \"number\",\n      \"doc\": \"Max zoom on which to cluster points if clustering is enabled. Defaults to one zoom less than maxzoom (so that last zoom features are not clustered). Clusters are re-evaluated at integer zoom levels so setting clusterMaxZoom to 14 means the clusters will be displayed until z15.\"\n    },\n    \"clusterMinPoints\": {\n      \"type\": \"number\",\n      \"doc\": \"Minimum number of points necessary to form a cluster if clustering is enabled. Defaults to `2`.\"\n    },\n    \"clusterProperties\": {\n      \"type\": \"*\",\n      \"doc\": \"An object defining custom properties on the generated clusters if clustering is enabled, aggregating values from clustered points. Has the form `{\\\"property_name\\\": [operator, map_expression]}`. `operator` is any expression function that accepts at least 2 operands (e.g. `\\\"+\\\"` or `\\\"max\\\"`) — it accumulates the property value from clusters/points the cluster contains; `map_expression` produces the value of a single point.\\n\\nExample: `{\\\"sum\\\": [\\\"+\\\", [\\\"get\\\", \\\"scalerank\\\"]]}`.\\n\\nFor more advanced use cases, in place of `operator`, you can use a custom reduce expression that references a special `[\\\"accumulated\\\"]` value, e.g.:\\n`{\\\"sum\\\": [[\\\"+\\\", [\\\"accumulated\\\"], [\\\"get\\\", \\\"sum\\\"]], [\\\"get\\\", \\\"scalerank\\\"]]}`\"\n    },\n    \"lineMetrics\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"Whether to calculate line distance metrics. This is required for line layers that specify `line-gradient` values.\"\n    },\n    \"generateId\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"Whether to generate ids for the geojson features. When enabled, the `feature.id` property will be auto assigned based on its index in the `features` array, over-writing any previous values.\"\n    },\n    \"promoteId\": {\n      \"type\": \"promoteId\",\n      \"doc\": \"A property to use as a feature id (for feature state). Either a property name, or an object of the form `{<sourceLayer>: <propertyName>}`.\"\n    }\n  },\n  \"source_video\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"video\": {\n          \"doc\": \"A video data source.\"\n        }\n      },\n      \"doc\": \"The data type of the video source.\"\n    },\n    \"urls\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"URLs to video content in order of preferred format.\"\n    },\n    \"coordinates\": {\n      \"required\": true,\n      \"doc\": \"Corners of video specified in longitude, latitude pairs.\",\n      \"type\": \"array\",\n      \"length\": 4,\n      \"value\": {\n        \"type\": \"array\",\n        \"length\": 2,\n        \"value\": \"number\",\n        \"doc\": \"A single longitude, latitude pair.\"\n      }\n    }\n  },\n  \"source_image\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"image\": {\n          \"doc\": \"An image data source.\"\n        }\n      },\n      \"doc\": \"The data type of the image source.\"\n    },\n    \"url\": {\n      \"required\": true,\n      \"type\": \"string\",\n      \"doc\": \"URL that points to an image.\"\n    },\n    \"coordinates\": {\n      \"required\": true,\n      \"doc\": \"Corners of image specified in longitude, latitude pairs.\",\n      \"type\": \"array\",\n      \"length\": 4,\n      \"value\": {\n        \"type\": \"array\",\n        \"length\": 2,\n        \"value\": \"number\",\n        \"doc\": \"A single longitude, latitude pair.\"\n      }\n    }\n  },\n  \"layer\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"doc\": \"Unique layer name.\",\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"fill\": {\n          \"doc\": \"A filled polygon with an optional stroked border.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"line\": {\n          \"doc\": \"A stroked line.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"symbol\": {\n          \"doc\": \"An icon or a text label.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"circle\": {\n          \"doc\": \"A filled circle.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"heatmap\": {\n          \"doc\": \"A heatmap.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.41.0\",\n              \"android\": \"6.0.0\",\n              \"ios\": \"4.0.0\",\n              \"macos\": \"0.7.0\"\n            }\n          }\n        },\n        \"fill-extrusion\": {\n          \"doc\": \"An extruded (3D) polygon.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.27.0\",\n              \"android\": \"5.1.0\",\n              \"ios\": \"3.6.0\",\n              \"macos\": \"0.5.0\"\n            }\n          }\n        },\n        \"raster\": {\n          \"doc\": \"Raster map textures such as satellite imagery.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"hillshade\": {\n          \"doc\": \"Client-side hillshading visualization based on DEM data. Currently, the implementation only supports Mapbox Terrain RGB and Mapzen Terrarium tiles.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.43.0\",\n              \"android\": \"6.0.0\",\n              \"ios\": \"4.0.0\",\n              \"macos\": \"0.7.0\"\n            }\n          }\n        },\n        \"background\": {\n          \"doc\": \"The background color or pattern of the map.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"sky\": {\n          \"doc\": \"A spherical dome around the map that is always rendered behind all other layers.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"2.0.0\",\n              \"ios\": \"10.0.0\",\n              \"android\": \"10.0.0\"\n            }\n          }\n        }\n      },\n      \"doc\": \"Rendering type of this layer.\",\n      \"required\": true\n    },\n    \"metadata\": {\n      \"type\": \"*\",\n      \"doc\": \"Arbitrary properties useful to track with the layer, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'mapbox:'.\"\n    },\n    \"source\": {\n      \"type\": \"string\",\n      \"doc\": \"Name of a source description to be used for this layer. Required for all layer types except `background`.\"\n    },\n    \"source-layer\": {\n      \"type\": \"string\",\n      \"doc\": \"Layer to use from a vector tile source. Required for vector tile sources; prohibited for all other source types, including GeoJSON sources.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"maximum\": 24,\n      \"doc\": \"The minimum zoom level for the layer. At zoom levels less than the minzoom, the layer will be hidden.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"maximum\": 24,\n      \"doc\": \"The maximum zoom level for the layer. At zoom levels equal to or greater than the maxzoom, the layer will be hidden.\"\n    },\n    \"filter\": {\n      \"type\": \"filter\",\n      \"doc\": \"An expression specifying conditions on source features. Only features that match the filter are displayed. Zoom expressions in filters are only evaluated at integer zoom levels. The `[\\\"feature-state\\\", ...]` expression is not supported in filter expressions.  The `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions are supported only for filter expressions on the symbol layer.\"\n    },\n    \"layout\": {\n      \"type\": \"layout\",\n      \"doc\": \"Layout properties for the layer.\"\n    },\n    \"paint\": {\n      \"type\": \"paint\",\n      \"doc\": \"Default paint properties for this layer.\"\n    }\n  },\n  \"layout\": [\n    \"layout_fill\",\n    \"layout_line\",\n    \"layout_circle\",\n    \"layout_heatmap\",\n    \"layout_fill-extrusion\",\n    \"layout_symbol\",\n    \"layout_raster\",\n    \"layout_hillshade\",\n    \"layout_background\",\n    \"layout_sky\"\n  ],\n  \"layout_background\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_sky\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_fill\": {\n    \"fill-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_circle\": {\n    \"circle-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.2.0\",\n          \"ios\": \"5.9.0\",\n          \"macos\": \"0.16.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.2.0\",\n          \"ios\": \"5.9.0\",\n          \"macos\": \"0.16.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_heatmap\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_fill-extrusion\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    },\n    \"fill-extrusion-edge-radius\": {\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"Radius of a fill extrusion edge in meters. If not zero, rounds extrusion edges for a smoother appearance.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"v2.10.0\",\n          \"android\": \"10.7.0\",\n          \"ios\": \"10.7.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_line\": {\n    \"line-cap\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"butt\": {\n          \"doc\": \"A cap with a squared-off end which is drawn to the exact endpoint of the line.\"\n        },\n        \"round\": {\n          \"doc\": \"A cap with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.\"\n        },\n        \"square\": {\n          \"doc\": \"A cap with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.\"\n        }\n      },\n      \"default\": \"butt\",\n      \"doc\": \"The display of line endings.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"2.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-join\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"bevel\": {\n          \"doc\": \"A join with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.\"\n        },\n        \"round\": {\n          \"doc\": \"A join with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.\"\n        },\n        \"miter\": {\n          \"doc\": \"A join with a sharp, angled corner which is drawn with the outer sides beyond the endpoint of the path until they meet.\"\n        }\n      },\n      \"default\": \"miter\",\n      \"doc\": \"The display of lines when joining.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-miter-limit\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"doc\": \"Used to automatically convert miter joins to bevel joins for sharp angles.\",\n      \"requires\": [\n        {\n          \"line-join\": \"miter\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-round-limit\": {\n      \"type\": \"number\",\n      \"default\": 1.05,\n      \"doc\": \"Used to automatically convert round joins to miter joins for shallow angles.\",\n      \"requires\": [\n        {\n          \"line-join\": \"round\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_symbol\": {\n    \"symbol-placement\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"point\": {\n          \"doc\": \"The label is placed at the point where the geometry is located.\"\n        },\n        \"line\": {\n          \"doc\": \"The label is placed along the line of the geometry. Can only be used on `LineString` and `Polygon` geometries.\"\n        },\n        \"line-center\": {\n          \"doc\": \"The label is placed at the center of the line of the geometry. Can only be used on `LineString` and `Polygon` geometries. Note that a single feature in a vector tile may contain multiple line geometries.\"\n        }\n      },\n      \"default\": \"point\",\n      \"doc\": \"Label placement relative to its geometry.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"`line-center` value\": {\n          \"js\": \"0.47.0\",\n          \"android\": \"6.4.0\",\n          \"ios\": \"4.3.0\",\n          \"macos\": \"0.10.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-spacing\": {\n      \"type\": \"number\",\n      \"default\": 250,\n      \"minimum\": 1,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance between two symbol anchors.\",\n      \"requires\": [\n        {\n          \"symbol-placement\": \"line\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-avoid-edges\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the symbols will not cross tile edges to avoid mutual collisions. Recommended in layers that don't have enough padding in the vector tile to prevent collisions, or if it is a point symbol layer placed after a line symbol layer. When using a client that supports global collision detection, like Mapbox GL JS version 0.42.0 or greater, enabling this property is not needed to prevent clipped labels at tile boundaries.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with lower sort keys are drawn and placed first.  When `icon-allow-overlap` or `text-allow-overlap` is `false`, features with a lower sort key will have priority during placement. When `icon-allow-overlap` or `text-allow-overlap` is set to `true`, features with a higher sort key will overlap over features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.53.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.11.0\",\n          \"macos\": \"0.14.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.53.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.11.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"symbol-z-order\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"auto\": {\n          \"doc\": \"Sorts symbols by `symbol-sort-key` if set. Otherwise, sorts symbols by their y-position relative to the viewport if `icon-allow-overlap` or `text-allow-overlap` is set to `true` or `icon-ignore-placement` or `text-ignore-placement` is `false`.\"\n        },\n        \"viewport-y\": {\n          \"doc\": \"Sorts symbols by their y-position relative to the viewport if `icon-allow-overlap` or `text-allow-overlap` is set to `true` or `icon-ignore-placement` or `text-ignore-placement` is `false`.\"\n        },\n        \"source\": {\n          \"doc\": \"Sorts symbols by `symbol-sort-key` if set. Otherwise, no sorting is applied; symbols are rendered in the same order as the source data.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"Determines whether overlapping symbols in the same layer are rendered in the order that they appear in the data source or by their y-position relative to the viewport. To control the order and prioritization of symbols otherwise, use `symbol-sort-key`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.6.0\",\n          \"ios\": \"4.5.0\",\n          \"macos\": \"0.12.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-allow-overlap\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the icon will be visible even if it collides with other previously drawn symbols.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-ignore-placement\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, other symbols can be visible even if they collide with the icon.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-optional\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, text will display without their corresponding icons when the icon collides with other symbols and the text does not.\",\n      \"requires\": [\n        \"icon-image\",\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-rotation-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, aligns icons east-west. When `symbol-placement` is set to `line` or `line-center`, aligns icon x-axes with the line.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Produces icons whose x-axes are aligned with the x-axis of the viewport, regardless of the value of `symbol-placement`.\"\n        },\n        \"auto\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, this is equivalent to `viewport`. When `symbol-placement` is set to `line` or `line-center`, this is equivalent to `map`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"In combination with `symbol-placement`, determines the rotation behavior of icons.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"`auto` value\": {\n          \"js\": \"0.25.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-size\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"units\": \"factor of the original icon size\",\n      \"doc\": \"Scales the original size of the icon by the provided factor. The new pixel size of the image will be the original pixel size multiplied by `icon-size`. 1 is the original size; 3 triples the size of the image.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-text-fit\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"none\": {\n          \"doc\": \"The icon is displayed at its intrinsic aspect ratio.\"\n        },\n        \"width\": {\n          \"doc\": \"The icon is scaled in the x-dimension to fit the width of the text.\"\n        },\n        \"height\": {\n          \"doc\": \"The icon is scaled in the y-dimension to fit the height of the text.\"\n        },\n        \"both\": {\n          \"doc\": \"The icon is scaled in both x- and y-dimensions.\"\n        }\n      },\n      \"default\": \"none\",\n      \"doc\": \"Scales the icon to fit around the associated text.\",\n      \"requires\": [\n        \"icon-image\",\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        },\n        \"stretchable icons\": {\n          \"js\": \"1.6.0\",\n          \"android\": \"9.2.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-text-fit-padding\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        0,\n        0,\n        0,\n        0\n      ],\n      \"units\": \"pixels\",\n      \"doc\": \"Size of the additional area added to dimensions determined by `icon-text-fit`, in clockwise order: top, right, bottom, left.\",\n      \"requires\": [\n        \"icon-image\",\n        \"text-field\",\n        {\n          \"icon-text-fit\": [\n            \"both\",\n            \"width\",\n            \"height\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-image\": {\n      \"type\": \"resolvedImage\",\n      \"doc\": \"Name of image in sprite to use for drawing an image background.\",\n      \"tokens\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"doc\": \"Rotates the icon clockwise.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-padding\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"doc\": \"Size of the additional area around the icon bounding box used for detecting symbol collisions.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-keep-upright\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the icon may be flipped to prevent it from being rendered upside-down.\",\n      \"requires\": [\n        \"icon-image\",\n        {\n          \"icon-rotation-alignment\": \"map\"\n        },\n        {\n          \"symbol-placement\": [\n            \"line\",\n            \"line-center\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-offset\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"doc\": \"Offset distance of icon from its anchor. Positive values indicate right and down, while negative values indicate left and up. Each component is multiplied by the value of `icon-size` to obtain the final offset in pixels. When combined with `icon-rotate` the offset will be as if the rotated direction was up.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"center\": {\n          \"doc\": \"The center of the icon is placed closest to the anchor.\"\n        },\n        \"left\": {\n          \"doc\": \"The left side of the icon is placed closest to the anchor.\"\n        },\n        \"right\": {\n          \"doc\": \"The right side of the icon is placed closest to the anchor.\"\n        },\n        \"top\": {\n          \"doc\": \"The top of the icon is placed closest to the anchor.\"\n        },\n        \"bottom\": {\n          \"doc\": \"The bottom of the icon is placed closest to the anchor.\"\n        },\n        \"top-left\": {\n          \"doc\": \"The top left corner of the icon is placed closest to the anchor.\"\n        },\n        \"top-right\": {\n          \"doc\": \"The top right corner of the icon is placed closest to the anchor.\"\n        },\n        \"bottom-left\": {\n          \"doc\": \"The bottom left corner of the icon is placed closest to the anchor.\"\n        },\n        \"bottom-right\": {\n          \"doc\": \"The bottom right corner of the icon is placed closest to the anchor.\"\n        }\n      },\n      \"default\": \"center\",\n      \"doc\": \"Part of the icon placed closest to the anchor.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The icon is aligned to the plane of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The icon is aligned to the plane of the viewport.\"\n        },\n        \"auto\": {\n          \"doc\": \"Automatically matches the value of `icon-rotation-alignment`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"Orientation of icon when map is pitched.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The text is aligned to the plane of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The text is aligned to the plane of the viewport.\"\n        },\n        \"auto\": {\n          \"doc\": \"Automatically matches the value of `text-rotation-alignment`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"Orientation of text when map is pitched.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        },\n        \"`auto` value\": {\n          \"js\": \"0.25.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-rotation-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, aligns text east-west. When `symbol-placement` is set to `line` or `line-center`, aligns text x-axes with the line.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Produces glyphs whose x-axes are aligned with the x-axis of the viewport, regardless of the value of `symbol-placement`.\"\n        },\n        \"auto\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, this is equivalent to `viewport`. When `symbol-placement` is set to `line` or `line-center`, this is equivalent to `map`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"In combination with `symbol-placement`, determines the rotation behavior of the individual glyphs forming the text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"`auto` value\": {\n          \"js\": \"0.25.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-field\": {\n      \"type\": \"formatted\",\n      \"default\": \"\",\n      \"tokens\": true,\n      \"doc\": \"Value to use for a text label. If a plain `string` is provided, it will be treated as a `formatted` with default/inherited formatting options. SDF images are not supported in formatted text and will be ignored.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-font\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"default\": [\n        \"Open Sans Regular\",\n        \"Arial Unicode MS Regular\"\n      ],\n      \"doc\": \"Font stack to use for displaying text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-size\": {\n      \"type\": \"number\",\n      \"default\": 16,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"doc\": \"Font size.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-max-width\": {\n      \"type\": \"number\",\n      \"default\": 10,\n      \"minimum\": 0,\n      \"units\": \"ems\",\n      \"doc\": \"The maximum line width for text wrapping.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"symbol-placement\": [\n            \"point\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-line-height\": {\n      \"type\": \"number\",\n      \"default\": 1.2,\n      \"units\": \"ems\",\n      \"doc\": \"Text leading value for multi-line text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.0.0\",\n          \"ios\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-letter-spacing\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"units\": \"ems\",\n      \"doc\": \"Text tracking amount.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-justify\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"auto\": {\n          \"doc\": \"The text is aligned towards the anchor position.\"\n        },\n        \"left\": {\n          \"doc\": \"The text is aligned to the left.\"\n        },\n        \"center\": {\n          \"doc\": \"The text is centered.\"\n        },\n        \"right\": {\n          \"doc\": \"The text is aligned to the right.\"\n        }\n      },\n      \"default\": \"center\",\n      \"doc\": \"Text justification options.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        },\n        \"auto\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-radial-offset\": {\n      \"type\": \"number\",\n      \"units\": \"ems\",\n      \"default\": 0,\n      \"doc\": \"Radial offset of text, in the direction of the symbol's anchor. Useful in combination with `text-variable-anchor`, which defaults to using the two-dimensional `text-offset` if present.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"property-type\": \"data-driven\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      }\n    },\n    \"text-variable-anchor\": {\n      \"type\": \"array\",\n      \"value\": \"enum\",\n      \"values\": {\n        \"center\": {\n          \"doc\": \"The center of the text is placed closest to the anchor.\"\n        },\n        \"left\": {\n          \"doc\": \"The left side of the text is placed closest to the anchor.\"\n        },\n        \"right\": {\n          \"doc\": \"The right side of the text is placed closest to the anchor.\"\n        },\n        \"top\": {\n          \"doc\": \"The top of the text is placed closest to the anchor.\"\n        },\n        \"bottom\": {\n          \"doc\": \"The bottom of the text is placed closest to the anchor.\"\n        },\n        \"top-left\": {\n          \"doc\": \"The top left corner of the text is placed closest to the anchor.\"\n        },\n        \"top-right\": {\n          \"doc\": \"The top right corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-left\": {\n          \"doc\": \"The bottom left corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-right\": {\n          \"doc\": \"The bottom right corner of the text is placed closest to the anchor.\"\n        }\n      },\n      \"requires\": [\n        \"text-field\",\n        {\n          \"symbol-placement\": [\n            \"point\"\n          ]\n        }\n      ],\n      \"doc\": \"To increase the chance of placing high-priority labels on the map, you can provide an array of `text-anchor` locations: the renderer will attempt to place the label at each location, in order, before moving onto the next label. Use `text-justify: auto` to choose justification based on anchor position. To apply an offset, use the `text-radial-offset` or the two-dimensional `text-offset`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"center\": {\n          \"doc\": \"The center of the text is placed closest to the anchor.\"\n        },\n        \"left\": {\n          \"doc\": \"The left side of the text is placed closest to the anchor.\"\n        },\n        \"right\": {\n          \"doc\": \"The right side of the text is placed closest to the anchor.\"\n        },\n        \"top\": {\n          \"doc\": \"The top of the text is placed closest to the anchor.\"\n        },\n        \"bottom\": {\n          \"doc\": \"The bottom of the text is placed closest to the anchor.\"\n        },\n        \"top-left\": {\n          \"doc\": \"The top left corner of the text is placed closest to the anchor.\"\n        },\n        \"top-right\": {\n          \"doc\": \"The top right corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-left\": {\n          \"doc\": \"The bottom left corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-right\": {\n          \"doc\": \"The bottom right corner of the text is placed closest to the anchor.\"\n        }\n      },\n      \"default\": \"center\",\n      \"doc\": \"Part of the text placed closest to the anchor.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"!\": \"text-variable-anchor\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-max-angle\": {\n      \"type\": \"number\",\n      \"default\": 45,\n      \"units\": \"degrees\",\n      \"doc\": \"Maximum angle change between adjacent characters.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"symbol-placement\": [\n            \"line\",\n            \"line-center\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-writing-mode\": {\n      \"type\": \"array\",\n      \"value\": \"enum\",\n      \"values\": {\n        \"horizontal\": {\n          \"doc\": \"If a text's language supports horizontal writing mode, symbols would be laid out horizontally.\"\n        },\n        \"vertical\": {\n          \"doc\": \"If a text's language supports vertical writing mode, symbols would be laid out vertically.\"\n        }\n      },\n      \"doc\": \"The property allows control over a symbol's orientation. Note that the property values act as a hint, so that a symbol whose language doesn’t support the provided orientation will be laid out in its natural orientation. Example: English point symbol will be rendered horizontally even if array value contains single 'vertical' enum value. For symbol with point placement, the order of elements in an array define priority order for the placement of an orientation variant. For symbol with line placement, the default text writing mode is either ['horizontal', 'vertical'] or ['vertical', 'horizontal'], the order doesn't affect the placement.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.3.0\",\n          \"android\": \"8.3.0\",\n          \"ios\": \"5.3.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"doc\": \"Rotates the text clockwise.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-padding\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"doc\": \"Size of the additional area around the text bounding box used for detecting symbol collisions.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-keep-upright\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"doc\": \"If true, the text may be flipped vertically to prevent it from being rendered upside-down.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"text-rotation-alignment\": \"map\"\n        },\n        {\n          \"symbol-placement\": [\n            \"line\",\n            \"line-center\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-transform\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"none\": {\n          \"doc\": \"The text is not altered.\"\n        },\n        \"uppercase\": {\n          \"doc\": \"Forces all letters to be displayed in uppercase.\"\n        },\n        \"lowercase\": {\n          \"doc\": \"Forces all letters to be displayed in lowercase.\"\n        }\n      },\n      \"default\": \"none\",\n      \"doc\": \"Specifies how to capitalize text, similar to the CSS `text-transform` property.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-offset\": {\n      \"type\": \"array\",\n      \"doc\": \"Offset distance of text from its anchor. Positive values indicate right and down, while negative values indicate left and up. If used with text-variable-anchor, input values will be taken as absolute values. Offsets along the x- and y-axis will be applied automatically based on the anchor position.\",\n      \"value\": \"number\",\n      \"units\": \"ems\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"requires\": [\n        \"text-field\",\n        {\n          \"!\": \"text-radial-offset\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-allow-overlap\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the text will be visible even if it collides with other previously drawn symbols.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-ignore-placement\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, other symbols can be visible even if they collide with the text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-optional\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, icons will display without their corresponding text when the text collides with other symbols and the icon does not.\",\n      \"requires\": [\n        \"text-field\",\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_raster\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_hillshade\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"filter\": {\n    \"type\": \"array\",\n    \"value\": \"*\",\n    \"doc\": \"A filter selects specific features from a layer.\"\n  },\n  \"filter_symbol\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a symbol. Symbols support dynamic filtering, meaning this expression can use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\", \"pitch\", \"distance-from-center\"]\n    }\n  },\n  \"filter_fill\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a polygon. Fill layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_line\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a Polygon or LineString. Line layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_circle\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a circle. Circle layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_fill-extrusion\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a Polygon. Fill-extrusion layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_heatmap\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression used to determine whether a point is being displayed or not. Heatmap layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_operator\": {\n    \"type\": \"enum\",\n    \"values\": {\n      \"==\": {\n        \"doc\": \"`[\\\"==\\\", key, value]` equality: `feature[key] = value`\"\n      },\n      \"!=\": {\n        \"doc\": \"`[\\\"!=\\\", key, value]` inequality: `feature[key] ≠ value`\"\n      },\n      \">\": {\n        \"doc\": \"`[\\\">\\\", key, value]` greater than: `feature[key] > value`\"\n      },\n      \">=\": {\n        \"doc\": \"`[\\\">=\\\", key, value]` greater than or equal: `feature[key] ≥ value`\"\n      },\n      \"<\": {\n        \"doc\": \"`[\\\"<\\\", key, value]` less than: `feature[key] < value`\"\n      },\n      \"<=\": {\n        \"doc\": \"`[\\\"<=\\\", key, value]` less than or equal: `feature[key] ≤ value`\"\n      },\n      \"in\": {\n        \"doc\": \"`[\\\"in\\\", key, v0, ..., vn]` set inclusion: `feature[key] ∈ {v0, ..., vn}`\"\n      },\n      \"!in\": {\n        \"doc\": \"`[\\\"!in\\\", key, v0, ..., vn]` set exclusion: `feature[key] ∉ {v0, ..., vn}`\"\n      },\n      \"all\": {\n        \"doc\": \"`[\\\"all\\\", f0, ..., fn]` logical `AND`: `f0 ∧ ... ∧ fn`\"\n      },\n      \"any\": {\n        \"doc\": \"`[\\\"any\\\", f0, ..., fn]` logical `OR`: `f0 ∨ ... ∨ fn`\"\n      },\n      \"none\": {\n        \"doc\": \"`[\\\"none\\\", f0, ..., fn]` logical `NOR`: `¬f0 ∧ ... ∧ ¬fn`\"\n      },\n      \"has\": {\n        \"doc\": \"`[\\\"has\\\", key]` `feature[key]` exists\"\n      },\n      \"!has\": {\n        \"doc\": \"`[\\\"!has\\\", key]` `feature[key]` does not exist\"\n      },\n      \"within\": {\n        \"doc\": \"`[\\\"within\\\", object]` feature geometry is within object geometry\"\n      }\n    },\n    \"doc\": \"The filter operator.\"\n  },\n  \"geometry_type\": {\n    \"type\": \"enum\",\n    \"values\": {\n      \"Point\": {\n        \"doc\": \"Filter to point geometries.\"\n      },\n      \"LineString\": {\n        \"doc\": \"Filter to line geometries.\"\n      },\n      \"Polygon\": {\n        \"doc\": \"Filter to polygon geometries.\"\n      }\n    },\n    \"doc\": \"The geometry type for the filter to select.\"\n  },\n  \"function\": {\n    \"expression\": {\n      \"type\": \"expression\",\n      \"doc\": \"An expression.\"\n    },\n    \"stops\": {\n      \"type\": \"array\",\n      \"doc\": \"An array of stops.\",\n      \"value\": \"function_stop\"\n    },\n    \"base\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"doc\": \"The exponential base of the interpolation curve. It controls the rate at which the result increases. Higher values make the result increase more towards the high end of the range. With `1` the stops are interpolated linearly.\"\n    },\n    \"property\": {\n      \"type\": \"string\",\n      \"doc\": \"The name of a feature property to use as the function input.\",\n      \"default\": \"$zoom\"\n    },\n    \"type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"identity\": {\n          \"doc\": \"Return the input value as the output value.\"\n        },\n        \"exponential\": {\n          \"doc\": \"Generate an output by interpolating between stops just less than and just greater than the function input.\"\n        },\n        \"interval\": {\n          \"doc\": \"Return the output value of the stop just less than the function input.\"\n        },\n        \"categorical\": {\n          \"doc\": \"Return the output value of the stop equal to the function input.\"\n        }\n      },\n      \"doc\": \"The interpolation strategy to use in function evaluation.\",\n      \"default\": \"exponential\"\n    },\n    \"colorSpace\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"rgb\": {\n          \"doc\": \"Use the RGB color space to interpolate color values\"\n        },\n        \"lab\": {\n          \"doc\": \"Use the LAB color space to interpolate color values.\"\n        },\n        \"hcl\": {\n          \"doc\": \"Use the HCL color space to interpolate color values, interpolating the Hue, Chroma, and Luminance channels individually.\"\n        }\n      },\n      \"doc\": \"The color space in which colors interpolated. Interpolating colors in perceptual color spaces like LAB and HCL tend to produce color ramps that look more consistent and produce colors that can be differentiated more easily than those interpolated in RGB space.\",\n      \"default\": \"rgb\"\n    },\n    \"default\": {\n      \"type\": \"*\",\n      \"required\": false,\n      \"doc\": \"A value to serve as a fallback function result when a value isn't otherwise available. It is used in the following circumstances:\\n* In categorical functions, when the feature value does not match any of the stop domain values.\\n* In property and zoom-and-property functions, when a feature does not contain a value for the specified property.\\n* In identity functions, when the feature value is not valid for the style property (for example, if the function is being used for a `circle-color` property but the feature property value is not a string or not a valid color).\\n* In interval or exponential property and zoom-and-property functions, when the feature value is not numeric.\\nIf no default is provided, the style property's default is used in these circumstances.\"\n    }\n  },\n  \"function_stop\": {\n    \"type\": \"array\",\n    \"minimum\": 0,\n    \"maximum\": 24,\n    \"value\": [\n      \"number\",\n      \"color\"\n    ],\n    \"length\": 2,\n    \"doc\": \"Zoom level and value pair.\"\n  },\n  \"expression\": {\n    \"type\": \"array\",\n    \"value\": \"*\",\n    \"minimum\": 1,\n    \"doc\": \"An expression defines a function that can be used for data-driven style properties or feature filters.\"\n  },\n  \"expression_name\": {\n    \"doc\": \"\",\n    \"type\": \"enum\",\n    \"values\": {\n      \"let\": {\n        \"doc\": \"Binds expressions to named variables, which can then be referenced in the result expression using [\\\"var\\\", \\\"variable_name\\\"].\",\n        \"group\": \"Variable binding\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"var\": {\n        \"doc\": \"References variable bound using \\\"let\\\".\",\n        \"group\": \"Variable binding\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"literal\": {\n        \"doc\": \"Provides a literal array or object value.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"array\": {\n        \"doc\": \"Asserts that the input is an array (optionally with a specific item type and length).  If, when the input expression is evaluated, it is not of the asserted type, then this assertion will cause the whole expression to be aborted.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"at\": {\n        \"doc\": \"Retrieves an item from an array.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"in\": {\n        \"doc\": \"Determines whether an item exists in an array or a substring exists in a string. In the specific case when the second and third arguments are string literals, you must wrap at least one of them in a [`literal`](#types-literal) expression to hint correct interpretation to the [type system](#type-system).\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.6.0\",\n            \"android\": \"9.1.0\",\n            \"ios\": \"5.8.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"index-of\": {\n        \"doc\": \"Returns the first position at which an item can be found in an array or a substring can be found in a string, or `-1` if the input cannot be found. Accepts an optional index from where to begin the search.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.10.0\",\n            \"android\": \"10.0.0\",\n            \"ios\": \"10.0.0\"\n          }\n        }\n      },\n      \"slice\": {\n        \"doc\": \"Returns an item from an array or a substring from a string from a specified start index, or between a start index and an end index if set. The return value is inclusive of the start index but not of the end index.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.10.0\",\n            \"android\": \"10.0.0\",\n            \"ios\": \"10.0.0\"\n          }\n        }\n      },\n      \"case\": {\n        \"doc\": \"Selects the first output whose corresponding test condition evaluates to true, or the fallback value otherwise.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"match\": {\n        \"doc\": \"Selects the output for which the label value matches the input value, or the fallback value if no match is found. The input can be any expression (for example, `[\\\"get\\\", \\\"building_type\\\"]`). Each label must be unique, and must be either:\\n - a single literal value; or\\n - an array of literal values, the values of which must be all strings or all numbers (for example `[100, 101]` or `[\\\"c\\\", \\\"b\\\"]`).\\n\\nThe input matches if any of the values in the array matches using strict equality, similar to the `\\\"in\\\"` operator.\\nIf the input type does not match the type of the labels, the result will be the fallback value.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"coalesce\": {\n        \"doc\": \"Evaluates each expression in turn until the first valid value is obtained. Invalid values are `null` and [`'image'`](#types-image) expressions that are unavailable in the style. If all values are invalid, `coalesce` returns the first value listed.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"step\": {\n        \"doc\": \"Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of input and output values (\\\"stops\\\"). The `input` may be any numeric expression (e.g., `[\\\"get\\\", \\\"population\\\"]`). Stop inputs must be numeric literals in strictly ascending order. Returns the output value of the stop just less than the input, or the first output if the input is less than the first stop.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.42.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"interpolate\": {\n        \"doc\": \"Produces continuous, smooth results by interpolating between pairs of input and output values (\\\"stops\\\"). The `input` may be any numeric expression (e.g., `[\\\"get\\\", \\\"population\\\"]`). Stop inputs must be numeric literals in strictly ascending order. The output type must be `number`, `array<number>`, or `color`.\\n\\nInterpolation types:\\n- `[\\\"linear\\\"]`: Interpolates linearly between the pair of stops just less than and just greater than the input.\\n- `[\\\"exponential\\\", base]`: Interpolates exponentially between the stops just less than and just greater than the input. `base` controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly.\\n- `[\\\"cubic-bezier\\\", x1, y1, x2, y2]`: Interpolates using the cubic bezier curve defined by the given control points.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.42.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"interpolate-hcl\": {\n        \"doc\": \"Produces continuous, smooth results by interpolating between pairs of input and output values (\\\"stops\\\"). Works like `interpolate`, but the output type must be `color`, and the interpolation is performed in the Hue-Chroma-Luminance color space.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.49.0\"\n          }\n        }\n      },\n      \"interpolate-lab\": {\n        \"doc\": \"Produces continuous, smooth results by interpolating between pairs of input and output values (\\\"stops\\\"). Works like `interpolate`, but the output type must be `color`, and the interpolation is performed in the CIELAB color space.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.49.0\"\n          }\n        }\n      },\n      \"ln2\": {\n        \"doc\": \"Returns mathematical constant ln(2).\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"pi\": {\n        \"doc\": \"Returns the mathematical constant pi.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"e\": {\n        \"doc\": \"Returns the mathematical constant e.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"typeof\": {\n        \"doc\": \"Returns a string describing the type of the given value.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"string\": {\n        \"doc\": \"Asserts that the input value is a string. If multiple values are provided, each one is evaluated in order until a string is obtained. If none of the inputs are strings, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"number\": {\n        \"doc\": \"Asserts that the input value is a number. If multiple values are provided, each one is evaluated in order until a number is obtained. If none of the inputs are numbers, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"boolean\": {\n        \"doc\": \"Asserts that the input value is a boolean. If multiple values are provided, each one is evaluated in order until a boolean is obtained. If none of the inputs are booleans, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"object\": {\n        \"doc\": \"Asserts that the input value is an object. If multiple values are provided, each one is evaluated in order until an object is obtained. If none of the inputs are objects, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"collator\": {\n        \"doc\": \"Returns a `collator` for use in locale-dependent comparison operations. The `case-sensitive` and `diacritic-sensitive` options default to `false`. The `locale` argument specifies the IETF language tag of the locale to use. If none is provided, the default locale is used. If the requested locale is not available, the `collator` will use a system-defined fallback locale. Use `resolved-locale` to test the results of locale fallback behavior.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"format\": {\n        \"doc\": \"Returns a `formatted` string for displaying mixed-format text in the `text-field` property. The input may contain a string literal or expression, including an [`'image'`](#types-image) expression. Strings may be followed by a style override object that supports the following properties:\\n- `\\\"text-font\\\"`: Overrides the font stack specified by the root layout property.\\n- `\\\"text-color\\\"`: Overrides the color specified by the root paint property.\\n- `\\\"font-scale\\\"`: Applies a scaling factor on `text-size` as specified by the root layout property.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.48.0\",\n            \"android\": \"6.7.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          },\n          \"text-font\": {\n            \"js\": \"0.48.0\",\n            \"android\": \"6.7.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          },\n          \"font-scale\": {\n            \"js\": \"0.48.0\",\n            \"android\": \"6.7.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          },\n          \"text-color\": {\n            \"js\": \"1.3.0\",\n            \"android\": \"7.3.0\",\n            \"ios\": \"4.10.0\",\n            \"macos\": \"0.14.0\"\n          },\n          \"image\": {\n            \"js\": \"1.6.0\",\n            \"android\": \"8.6.0\",\n            \"ios\": \"5.7.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"image\": {\n        \"doc\": \"Returns a [`ResolvedImage`](/mapbox-gl-js/style-spec/types/#resolvedimage) for use in [`icon-image`](/mapbox-gl-js/style-spec/layers/#layout-symbol-icon-image), `*-pattern` entries, and as a section in the [`'format'`](#types-format) expression. A [`'coalesce'`](#coalesce) expression containing `image` expressions will evaluate to the first listed image that is currently in the style. This validation process is synchronous and requires the image to have been added to the style before requesting it in the `'image'` argument.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.4.0\",\n            \"android\": \"8.6.0\",\n            \"ios\": \"5.7.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"number-format\": {\n        \"doc\": \"Converts the input number into a string representation using the providing formatting rules. If set, the `locale` argument specifies the locale to use, as a BCP 47 language tag. If set, the `currency` argument specifies an ISO 4217 code to use for currency-style formatting. If set, the `unit` argument specifies a [simple ECMAScript unit](https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier) to use for unit-style formatting. If set, the `min-fraction-digits` and `max-fraction-digits` arguments specify the minimum and maximum number of fractional digits to include.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.54.0\",\n            \"android\" : \"8.4.0\",\n            \"ios\": \"5.4.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"to-string\": {\n        \"doc\": \"Converts the input value to a string. If the input is `null`, the result is `\\\"\\\"`. If the input is a [`boolean`](#types-boolean), the result is `\\\"true\\\"` or `\\\"false\\\"`. If the input is a number, it is converted to a string as specified by the [\\\"NumberToString\\\" algorithm](https://tc39.github.io/ecma262/#sec-tostring-applied-to-the-number-type) of the ECMAScript Language Specification. If the input is a [`color`](#color), it is converted to a string of the form `\\\"rgba(r,g,b,a)\\\"`, where `r`, `g`, and `b` are numerals ranging from 0 to 255, and `a` ranges from 0 to 1. If the input is an [`'image'`](#types-image) expression, `'to-string'` returns the image name. Otherwise, the input is converted to a string in the format specified by the [`JSON.stringify`](https://tc39.github.io/ecma262/#sec-json.stringify) function of the ECMAScript Language Specification.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-number\": {\n        \"doc\": \"Converts the input value to a number, if possible. If the input is `null` or `false`, the result is 0. If the input is `true`, the result is 1. If the input is a string, it is converted to a number as specified by the [\\\"ToNumber Applied to the String Type\\\" algorithm](https://tc39.github.io/ecma262/#sec-tonumber-applied-to-the-string-type) of the ECMAScript Language Specification. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-boolean\": {\n        \"doc\": \"Converts the input value to a boolean. The result is `false` when then input is an empty string, 0, `false`, `null`, or `NaN`; otherwise it is `true`.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-rgba\": {\n        \"doc\": \"Returns a four-element array containing the input color's red, green, blue, and alpha components, in that order.\",\n        \"group\": \"Color\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-color\": {\n        \"doc\": \"Converts the input value to a color. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"rgb\": {\n        \"doc\": \"Creates a color value from red, green, and blue components, which must range between 0 and 255, and an alpha component of 1. If any component is out of range, the expression is an error.\",\n        \"group\": \"Color\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"rgba\": {\n        \"doc\": \"Creates a color value from red, green, blue components, which must range between 0 and 255, and an alpha component which must range between 0 and 1. If any component is out of range, the expression is an error.\",\n        \"group\": \"Color\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"get\": {\n        \"doc\": \"Retrieves a property value from the current feature's properties, or from another object if a second argument is provided. Returns `null` if the requested property is missing.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"has\": {\n        \"doc\": \"Tests for the presence of an property value in the current feature's properties, or from another object if a second argument is provided.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"length\": {\n        \"doc\": \"Returns the length of an array or string.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"properties\": {\n        \"doc\": \"Returns the feature properties object.  Note that in some cases, it may be more efficient to use `[\\\"get\\\", \\\"property_name\\\"]` directly.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"feature-state\": {\n        \"doc\": \"Retrieves a property value from the current feature's state. Returns `null` if the requested property is not present on the feature's state. A feature's state is not part of the GeoJSON or vector tile data, and must be set programmatically on each feature. Features are identified by their `id` attribute, which must be an integer or a string that can be cast to an integer. Note that [\\\"feature-state\\\"] can only be used with paint properties that support data-driven styling.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.46.0\",\n            \"android\": \"10.0.0\",\n            \"ios\": \"10.0.0\"\n          }\n        }\n      },\n      \"geometry-type\": {\n        \"doc\": \"Returns the feature's geometry type: `Point`, `LineString` or `Polygon`. `Multi*` feature types return the singular forms.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"id\": {\n        \"doc\": \"Returns the feature's id, if it has one.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"zoom\": {\n        \"doc\": \"Returns the current zoom level.  Note that in style layout and paint properties, [\\\"zoom\\\"] may only appear as the input to a top-level \\\"step\\\" or \\\"interpolate\\\" expression.\",\n        \"group\": \"Camera\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"pitch\": {\n        \"doc\": \"Returns the current pitch in degrees. `[\\\"pitch\\\"]` may only be used in the `filter` expression for a `symbol` layer.\",\n        \"group\": \"Camera\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"2.6.0\",\n            \"android\": \"10.9.0\",\n            \"ios\": \"10.9.0\"\n          }\n        }\n      },\n      \"distance-from-center\": {\n        \"doc\": \"Returns the distance of a `symbol` instance from the center of the map. The distance is measured in pixels divided by the height of the map container. It measures 0 at the center, decreases towards the camera and increase away from the camera. For example, if the height of the map is 1000px, a value of -1 means 1000px away from the center towards the camera, and a value of 1 means a distance of 1000px away from the camera from the center. `[\\\"distance-from-center\\\"]` may only be used in the `filter` expression for a `symbol` layer.\",\n        \"group\": \"Camera\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"2.6.0\",\n            \"android\": \"10.9.0\",\n            \"ios\": \"10.9.0\"\n          }\n        }\n      },\n      \"heatmap-density\": {\n        \"doc\": \"Returns the kernel density estimation of a pixel in a heatmap layer, which is a relative measure of how many data points are crowded around a particular pixel. Can only be used in the `heatmap-color` property.\",\n        \"group\": \"Heatmap\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"line-progress\": {\n        \"doc\": \"Returns the progress along a gradient line. Can only be used in the `line-gradient` property.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          }\n        }\n      },\n      \"sky-radial-progress\": {\n        \"doc\": \"Returns the distance of a point on the sky from the sun position. Returns 0 at sun position and 1 when the distance reaches `sky-gradient-radius`. Can only be used in the `sky-gradient` property.\",\n        \"group\": \"sky\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"2.0.0\",\n            \"ios\": \"10.0.0\",\n            \"android\": \"10.0.0\"\n          }\n        }\n      },\n      \"accumulated\": {\n        \"doc\": \"Returns the value of a cluster property accumulated so far. Can only be used in the `clusterProperties` option of a clustered GeoJSON source.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.53.0\",\n            \"android\": \"8.4.0\",\n            \"ios\": \"5.5.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"+\": {\n        \"doc\": \"Returns the sum of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"*\": {\n        \"doc\": \"Returns the product of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"-\": {\n        \"doc\": \"For two inputs, returns the result of subtracting the second input from the first. For a single input, returns the result of subtracting it from 0.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"/\": {\n        \"doc\": \"Returns the result of floating point division of the first input by the second.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"%\": {\n        \"doc\": \"Returns the remainder after integer division of the first input by the second.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"^\": {\n        \"doc\": \"Returns the result of raising the first input to the power specified by the second.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"sqrt\": {\n        \"doc\": \"Returns the square root of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.42.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"log10\": {\n        \"doc\": \"Returns the base-ten logarithm of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"ln\": {\n        \"doc\": \"Returns the natural logarithm of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"log2\": {\n        \"doc\": \"Returns the base-two logarithm of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"sin\": {\n        \"doc\": \"Returns the sine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"cos\": {\n        \"doc\": \"Returns the cosine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"tan\": {\n        \"doc\": \"Returns the tangent of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"asin\": {\n        \"doc\": \"Returns the arcsine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"acos\": {\n        \"doc\": \"Returns the arccosine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"atan\": {\n        \"doc\": \"Returns the arctangent of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"min\": {\n        \"doc\": \"Returns the minimum value of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"max\": {\n        \"doc\": \"Returns the maximum value of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"round\": {\n        \"doc\": \"Rounds the input to the nearest integer. Halfway values are rounded away from zero. For example, `[\\\"round\\\", -1.5]` evaluates to -2.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"abs\": {\n        \"doc\": \"Returns the absolute value of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"ceil\": {\n        \"doc\": \"Returns the smallest integer that is greater than or equal to the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"floor\": {\n        \"doc\": \"Returns the largest integer that is less than or equal to the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"distance\": {\n        \"doc\": \"Returns the shortest distance in meters between the evaluated feature and the input geometry. The input value can be a valid GeoJSON of type `Point`, `MultiPoint`, `LineString`, `MultiLineString`, `Polygon`, `MultiPolygon`, `Feature`, or `FeatureCollection`. Distance values returned may vary in precision due to loss in precision from encoding geometries, particularly below zoom level 13.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"android\": \"9.2.0\",\n            \"ios\": \"5.9.0\",\n            \"macos\": \"0.16.0\"\n          }\n        }\n      },\n      \"==\": {\n        \"doc\": \"Returns `true` if the input values are equal, `false` otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"!=\": {\n        \"doc\": \"Returns `true` if the input values are not equal, `false` otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \">\": {\n        \"doc\": \"Returns `true` if the first input is strictly greater than the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"<\": {\n        \"doc\": \"Returns `true` if the first input is strictly less than the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \">=\": {\n        \"doc\": \"Returns `true` if the first input is greater than or equal to the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"<=\": {\n        \"doc\": \"Returns `true` if the first input is less than or equal to the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"all\": {\n        \"doc\": \"Returns `true` if all the inputs are `true`, `false` otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to `false`, the result is `false` and no further input expressions are evaluated.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"any\": {\n        \"doc\": \"Returns `true` if any of the inputs are `true`, `false` otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to `true`, the result is `true` and no further input expressions are evaluated.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"!\": {\n        \"doc\": \"Logical negation. Returns `true` if the input is `false`, and `false` if the input is `true`.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"within\": {\n        \"doc\": \"Returns `true` if the evaluated feature is fully contained inside a boundary of the input geometry, `false` otherwise. The input value can be a valid GeoJSON of type `Polygon`, `MultiPolygon`, `Feature`, or `FeatureCollection`. Supported features for evaluation:\\n- `Point`: Returns `false` if a point is on the boundary or falls outside the boundary.\\n- `LineString`: Returns `false` if any part of a line falls outside the boundary, the line intersects the boundary, or a line's endpoint is on the boundary.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.9.0\",\n            \"android\": \"9.1.0\",\n            \"ios\": \"5.8.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"is-supported-script\": {\n        \"doc\": \"Returns `true` if the input string is expected to render legibly. Returns `false` if the input string contains sections that cannot be rendered without potential loss of meaning (e.g. Indic scripts that require complex text shaping, or right-to-left scripts if the the `mapbox-gl-rtl-text` plugin is not in use in Mapbox GL JS).\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.6.0\",\n            \"ios\": \"4.1.0\",\n            \"macos\": \"0.8.0\"\n          }\n        }\n      },\n      \"upcase\": {\n        \"doc\": \"Returns the input string converted to uppercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"downcase\": {\n        \"doc\": \"Returns the input string converted to lowercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"concat\": {\n        \"doc\": \"Returns a `string` consisting of the concatenation of the inputs. Each input is converted to a string as if by `to-string`.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"resolved-locale\": {\n        \"doc\": \"Returns the IETF language tag of the locale being used by the provided `collator`. This can be used to determine the default system locale, or to determine if a requested locale was successfully loaded.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      }\n    }\n  },\n  \"fog\": {\n    \"range\": {\n      \"type\": \"array\",\n      \"default\": [\n        0.5,\n        10\n      ],\n      \"minimum\": -20,\n      \"maximum\": 20,\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"doc\": \"The start and end distance range in which fog fades from fully transparent to fully opaque. The distance to the point at the center of the map is defined as zero, so that negative range values are closer to the camera, and positive values are farther away.\",\n      \"example\": [\n        0.5,\n        10\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#ffffff\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"The color of the atmosphere region immediately below the horizon and within the `range` and above the horizon and within `horizon-blend`. Using opacity is recommended only for smoothly transitioning fog on/off as anything less than 100% opacity results in more tiles loaded and drawn.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"high-color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#245cdf\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"The color of the atmosphere region above the horizon, `high-color` extends further above the horizon than the `color` property and its spread can be controlled with `horizon-blend`. The opacity can be set to `0` to remove the high atmosphere color contribution.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"space-color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n\n      \"default\":\n      [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"zoom\"\n        ],\n        4,\n        \"#010b19\",\n        7,\n        \"#367ab9\"\n      ],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"The color of the region above the horizon and after the end of the `horizon-blend` contribution. The opacity can be set to `0` to have a transparent background.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"horizon-blend\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\":\n      [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"zoom\"\n        ],\n        4,\n        0.2,\n        7,\n        0.1\n      ],\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Horizon blend applies a smooth fade from the color of the atmosphere to the color of space. A value of zero leaves a sharp transition from atmosphere to space. Increasing the value blends the color of atmosphere into increasingly high angles of the sky.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"star-intensity\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\":\n      [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"zoom\"\n        ],\n        5,\n        0.35,\n        6,\n        0\n      ],\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"A value controlling the star intensity where `0` will show no stars and `1` will show stars at their maximum intensity.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    }\n  },\n  \"light\": {\n    \"anchor\": {\n      \"type\": \"enum\",\n      \"default\": \"viewport\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The position of the light source is aligned to the rotation of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The position of the light source is aligned to the rotation of the viewport.\"\n        }\n      },\n      \"property-type\": \"data-constant\",\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"doc\": \"Whether extruded geometries are lit relative to the map or viewport.\",\n      \"example\": \"map\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    },\n    \"position\": {\n      \"type\": \"array\",\n      \"default\": [\n        1.15,\n        210,\n        30\n      ],\n      \"length\": 3,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"doc\": \"Position of the light source relative to lit (extruded) geometries, in [r radial coordinate, a azimuthal angle, p polar angle] where r indicates the distance from the center of the base of an object to its light, a indicates the position of the light relative to 0° (0° when `light.anchor` is set to `viewport` corresponds to the top of the viewport, or 0° when `light.anchor` is set to `map` corresponds to due north, and degrees proceed clockwise), and p indicates the height of the light (from 0°, directly above, to 180°, directly below).\",\n      \"example\": [\n        1.5,\n        90,\n        80\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    },\n    \"color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#ffffff\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Color tint for lighting extruded geometries.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    },\n    \"intensity\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": 0.5,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Intensity of lighting (on a scale from 0 to 1). Higher numbers will present as more extreme contrast.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    }\n  },\n  \"projection\": {\n    \"name\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"albers\": {\n          \"doc\": \"An Albers equal-area projection centered on the continental United States. You can configure the projection for a different region by setting `center` and `parallels` properties. You may want to set max bounds to constrain the map to the relevant region.\"\n        },\n        \"equalEarth\": {\n          \"doc\": \"An Equal Earth projection.\"\n        },\n        \"equirectangular\": {\n          \"doc\": \"An Equirectangular projection. This projection is very similar to the Plate Carrée projection.\"\n        },\n        \"lambertConformalConic\": {\n          \"doc\": \"A Lambert conformal conic projection. You can configure the projection for a region by setting `center` and `parallels` properties. You may want to set max bounds to constrain the map to the relevant region.\"\n        },\n        \"mercator\": {\n          \"doc\": \"The Mercator projection is the default projection.\"\n        },\n        \"naturalEarth\": {\n          \"doc\": \"A Natural Earth projection.\"\n        },\n        \"winkelTripel\": {\n          \"doc\": \"A Winkel Tripel projection.\"\n        },\n        \"globe\": {\n          \"doc\": \"A globe projection.\"\n        }\n      },\n      \"default\": \"mercator\",\n      \"doc\": \"The name of the projection to be used for rendering the map.\",\n      \"required\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.6.0\"\n        }\n      }\n    },\n    \"center\": {\n      \"type\": \"array\",\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"minimum\": [-180, -90],\n      \"maximum\": [180, 90],\n      \"transition\": false,\n      \"doc\": \"The reference longitude and latitude of the projection. `center` takes the form of [lng, lat]. This property is only configurable for conic projections (Albers and Lambert Conformal Conic). All other projections are centered on [0, 0].\",\n      \"example\": [\n        -96,\n        37.5\n      ],\n      \"requires\": [\n        {\n          \"name\": [\n              \"albers\",\n              \"lambertConformalConic\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.6.0\"\n        }\n      }\n    },\n    \"parallels\": {\n      \"type\": \"array\",\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"minimum\": [-90, -90],\n      \"maximum\": [90, 90],\n      \"transition\": false,\n      \"doc\":  \"The standard parallels of the projection, denoting the desired latitude range with minimal distortion. `parallels` takes the form of [lat0, lat1]. This property is only configurable for conic projections (Albers and Lambert Conformal Conic).\",\n      \"example\": [\n        29.5,\n        45.5\n      ],\n      \"requires\": [\n        {\n          \"name\": [\n              \"albers\",\n              \"lambertConformalConic\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.6.0\"\n        }\n      }\n    }\n  },\n  \"terrain\" : {\n    \"source\": {\n      \"type\": \"string\",\n      \"doc\": \"Name of a source of `raster_dem` type to be used for terrain elevation.\",\n      \"required\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      }\n    },\n    \"exaggeration\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": 1.0,\n      \"minimum\": 0,\n      \"maximum\": 1000,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Exaggerates the elevation of the terrain by multiplying the data from the DEM with this value.\",\n      \"requires\": [\n        \"source\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      }\n    }\n  },\n  \"paint\": [\n    \"paint_fill\",\n    \"paint_line\",\n    \"paint_circle\",\n    \"paint_heatmap\",\n    \"paint_fill-extrusion\",\n    \"paint_symbol\",\n    \"paint_raster\",\n    \"paint_hillshade\",\n    \"paint_background\",\n    \"paint_sky\"\n  ],\n  \"paint_fill\": {\n    \"fill-antialias\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"doc\": \"Whether or not the fill should be antialiased.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity of the entire fill layer. In contrast to the `fill-color`, this value will also affect the 1px stroke around the fill, if the stroke is used.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The color of the filled part of this layer. This color can be specified as `rgba` with an alpha component and the color's opacity will not affect the opacity of the 1px stroke, if it is used.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"fill-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.19.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-outline-color\": {\n      \"type\": \"color\",\n      \"doc\": \"The outline color of the fill. Matches the value of `fill-color` if unspecified.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"fill-pattern\"\n        },\n        {\n          \"fill-antialias\": true\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.19.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The fill is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The fill is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `fill-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"fill-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing image fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.5.0\",\n          \"macos\": \"0.11.0\",\n          \"ios\": \"4.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    }\n  },\n  \"paint_fill-extrusion\": {\n    \"fill-extrusion-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity of the entire fill extrusion layer. This is rendered on a per-layer, not per-feature, basis, and data-driven styling is not available.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The base color of the extruded fill. The extrusion's surfaces will be shaded differently based on this color in combination with the root `light` settings. If this color is specified as `rgba` with an alpha component, the alpha component will be ignored; use `fill-extrusion-opacity` to set layer opacity.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"fill-extrusion-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up (on the flat plane), respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The fill extrusion is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The fill extrusion is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `fill-extrusion-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"fill-extrusion-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing images on extruded fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.5.0\",\n          \"macos\": \"0.11.0\",\n          \"ios\": \"4.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-height\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"meters\",\n      \"doc\": \"The height with which to extrude this layer.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-base\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"meters\",\n      \"doc\": \"The height with which to extrude the base of this layer. Must be less than or equal to `fill-extrusion-height`.\",\n      \"transition\": true,\n      \"requires\": [\n        \"fill-extrusion-height\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-vertical-gradient\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"doc\": \"Whether to apply a vertical gradient to the sides of a fill-extrusion layer. If true, sides will be shaded slightly darker farther down.\",\n      \"transition\": false,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.50.0\",\n          \"android\": \"7.0.0\",\n          \"ios\": \"4.7.0\",\n          \"macos\": \"0.13.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-ambient-occlusion-intensity\": {\n      \"property-type\": \"data-constant\",\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 0.0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Controls the intensity of shading near ground and concave angles between walls. Default value 0.0 disables ambient occlusion and values around 0.3 provide the most plausible results for buildings.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.10.0\",\n          \"android\": \"10.7.0\",\n          \"ios\": \"10.7.0\"\n        }\n      }\n    },\n    \"fill-extrusion-ambient-occlusion-radius\": {\n      \"property-type\": \"data-constant\",\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 3.0,\n      \"minimum\": 0,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Shades area near ground and concave angles between walls where the radius defines only vertical impact. Default value 3.0 corresponds to height of one floor and brings the most plausible results for buildings.\",\n      \"requires\": [\n        \"fill-extrusion-edge-radius\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.10.0\",\n          \"android\": \"10.7.0\",\n          \"ios\": \"10.7.0\"\n        }\n      }\n    }\n  },\n  \"paint_line\": {\n    \"line-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the line will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-color\": {\n      \"type\": \"color\",\n      \"doc\": \"The color with which the line will be drawn.\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"line-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.23.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The line is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The line is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `line-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"line-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-width\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Stroke thickness.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-gap-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"doc\": \"Draws a line casing outside of a line's actual path. Value indicates the width of the inner gap.\",\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-offset\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"The line's offset. For linear features, a positive value offsets the line to the right, relative to the direction of the line, and a negative value to the left. For polygon features, a positive value results in an inset, and a negative value results in an outset.\",\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.12.1\",\n          \"android\": \"3.0.0\",\n          \"ios\": \"3.1.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Blur applied to the line, in pixels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-dasharray\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"doc\": \"Specifies the lengths of the alternating dashes and gaps that form the dash pattern. The lengths are later scaled by the line width. To convert a dash length to pixels, multiply the length by the current line width. Note that GeoJSON sources with `lineMetrics: true` specified won't render dashed lines to the expected scale. Also note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"minimum\": 0,\n      \"transition\": false,\n      \"units\": \"line widths\",\n      \"requires\": [\n        {\n          \"!\": \"line-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"2.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing image lines. For seamless patterns, image width must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.5.0\",\n          \"macos\": \"0.11.0\",\n          \"ios\": \"4.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-gradient\": {\n      \"type\": \"color\",\n      \"doc\": \"Defines a gradient with which to color a line feature. Can only be used with GeoJSON sources that specify `\\\"lineMetrics\\\": true`.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"!\": \"line-pattern\"\n        },\n        {\n          \"source\": \"geojson\",\n          \"has\": {\n            \"lineMetrics\": true\n          }\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.45.0\",\n          \"android\": \"6.5.0\",\n          \"ios\": \"4.4.0\",\n          \"macos\": \"0.11.0\"\n        },\n        \"data-driven styling\": {}\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"line-progress\"\n        ]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"line-trim-offset\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"doc\": \"The line part between [trim-start, trim-end] will be marked as transparent to make a route vanishing effect. The line trim-off offset is based on the whole line range [0.0, 1.0].\",\n      \"length\": 2,\n      \"default\": [0.0, 0.0],\n      \"minimum\": [0.0, 0.0],\n      \"maximum\": [1.0, 1.0],\n      \"transition\": false,\n      \"requires\": [\n          {\n              \"source\": \"geojson\",\n              \"has\": {\n                  \"lineMetrics\": true\n              }\n          }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.5.0\",\n          \"ios\": \"10.5.0\",\n          \"macos\": \"10.5.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"paint_circle\": {\n    \"circle-radius\": {\n      \"type\": \"number\",\n      \"default\": 5,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Circle radius.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.18.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The fill color of the circle.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.18.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Amount to blur the circle. 1 blurs the circle such that only the centerpoint is full opacity.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.20.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the circle will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.20.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The circle is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The circle is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `circle-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"circle-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-pitch-scale\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"Circles are scaled according to their apparent distance to the camera.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Circles are not scaled.\"\n        }\n      },\n      \"default\": \"map\",\n      \"doc\": \"Controls the scaling behavior of the circle when the map is pitched.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The circle is aligned to the plane of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The circle is aligned to the plane of the viewport.\"\n        }\n      },\n      \"default\": \"viewport\",\n      \"doc\": \"Orientation of circle when map is pitched.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-stroke-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The width of the circle's stroke. Strokes are placed outside of the `circle-radius`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-stroke-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The stroke color of the circle.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-stroke-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity of the circle's stroke.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    }\n  },\n  \"paint_heatmap\": {\n    \"heatmap-radius\": {\n      \"type\": \"number\",\n      \"default\": 30,\n      \"minimum\": 1,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Radius of influence of one heatmap point in pixels. Increasing the value makes the heatmap smoother, but less detailed. `queryRenderedFeatures` on heatmap layers will return points within this radius.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"heatmap-weight\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": false,\n      \"doc\": \"A measure of how much an individual point contributes to the heatmap. A value of 10 would be equivalent to having 10 points of weight 1 in the same spot. Especially useful when combined with clustering.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"heatmap-intensity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"doc\": \"Similar to `heatmap-weight` but controls the intensity of the heatmap globally. Primarily used for adjusting the heatmap based on zoom level.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"heatmap-color\": {\n      \"type\": \"color\",\n      \"default\": [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"heatmap-density\"\n        ],\n        0,\n        \"rgba(0, 0, 255, 0)\",\n        0.1,\n        \"royalblue\",\n        0.3,\n        \"cyan\",\n        0.5,\n        \"lime\",\n        0.7,\n        \"yellow\",\n        1,\n        \"red\"\n      ],\n      \"doc\": \"Defines the color of each pixel based on its density value in a heatmap.  Should be an expression that uses `[\\\"heatmap-density\\\"]` as input.\",\n      \"transition\": false,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        },\n        \"data-driven styling\": {}\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"heatmap-density\"\n        ]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"heatmap-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The global opacity at which the heatmap layer will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_symbol\": {\n    \"icon-opacity\": {\n      \"doc\": \"The opacity at which the icon will be drawn.\",\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"doc\": \"The color of the icon. This can only be used with [SDF icons](/help/troubleshooting/using-recolorable-images-in-mapbox-maps/).\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"rgba(0, 0, 0, 0)\",\n      \"transition\": true,\n      \"doc\": \"The color of the icon's halo. Icon halos can only be used with [SDF icons](/help/troubleshooting/using-recolorable-images-in-mapbox-maps/).\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance of halo to the icon outline.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Fade out the halo towards the outside.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance that the icon's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"Icons are translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Icons are translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `icon-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"icon-image\",\n        \"icon-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the text will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-color\": {\n      \"type\": \"color\",\n      \"doc\": \"The color with which the text will be drawn.\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"overridable\": true,\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"rgba(0, 0, 0, 0)\",\n      \"transition\": true,\n      \"doc\": \"The color of the text's halo, which helps it stand out from backgrounds.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance of halo to the font outline. Max text halo width is 1/4 of the font-size.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The halo's fadeout distance towards the outside.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance that the text's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The text is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The text is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `text-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"text-field\",\n        \"text-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_raster\": {\n    \"raster-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the image will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-hue-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"transition\": true,\n      \"units\": \"degrees\",\n      \"doc\": \"Rotates hues around the color wheel.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-brightness-min\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the brightness of the image. The value is the minimum brightness.\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-brightness-max\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the brightness of the image. The value is the maximum brightness.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-saturation\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the saturation of the image.\",\n      \"default\": 0,\n      \"minimum\": -1,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-contrast\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the contrast of the image.\",\n      \"default\": 0,\n      \"minimum\": -1,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-resampling\": {\n      \"type\": \"enum\",\n      \"doc\": \"The resampling/interpolation method to use for overscaling, also known as texture magnification filter\",\n      \"values\": {\n        \"linear\": {\n          \"doc\": \"(Bi)linear filtering interpolates pixel values using the weighted average of the four closest original source pixels creating a smooth but blurry look when overscaled\"\n        },\n        \"nearest\": {\n          \"doc\": \"Nearest neighbor filtering interpolates pixel values using the nearest original source pixel creating a sharp but pixelated look when overscaled\"\n        }\n      },\n      \"default\": \"linear\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.47.0\",\n          \"android\": \"6.3.0\",\n          \"ios\": \"4.2.0\",\n          \"macos\": \"0.9.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-fade-duration\": {\n      \"type\": \"number\",\n      \"default\": 300,\n      \"minimum\": 0,\n      \"transition\": false,\n      \"units\": \"milliseconds\",\n      \"doc\": \"Fade duration when a new tile is added.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_hillshade\": {\n    \"hillshade-illumination-direction\": {\n      \"type\": \"number\",\n      \"default\": 335,\n      \"minimum\": 0,\n      \"maximum\": 359,\n      \"doc\": \"The direction of the light source used to generate the hillshading with 0 as the top of the viewport if `hillshade-illumination-anchor` is set to `viewport` and due north if `hillshade-illumination-anchor` is set to `map`.\",\n      \"transition\": false,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-illumination-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The hillshade illumination is relative to the north direction.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The hillshade illumination is relative to the top of the viewport.\"\n        }\n      },\n      \"default\": \"viewport\",\n      \"doc\": \"Direction of light source when map is rotated.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-exaggeration\": {\n      \"type\": \"number\",\n      \"doc\": \"Intensity of the hillshade\",\n      \"default\": 0.5,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-shadow-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The shading color of areas that face away from the light source.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-highlight-color\": {\n      \"type\": \"color\",\n      \"default\": \"#FFFFFF\",\n      \"doc\": \"The shading color of areas that faces towards the light source.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-accent-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The shading color used to accentuate rugged terrain like sharp cliffs and gorges.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_background\": {\n    \"background-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The color with which the background will be drawn.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"background-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"background-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing an image background. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"background-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity at which the background will be drawn.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_sky\": {\n    \"sky-type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"gradient\": {\n          \"doc\": \"Renders the sky with a gradient that can be configured with `sky-gradient-radius` and `sky-gradient`.\"\n        },\n        \"atmosphere\": {\n          \"doc\": \"Renders the sky with a simulated atmospheric scattering algorithm, the sun direction can be attached to the light position or explicitly set through `sky-atmosphere-sun`.\"\n        }\n      },\n      \"default\": \"atmosphere\",\n      \"doc\": \"The type of the sky\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-sun\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"units\": \"degrees\",\n      \"minimum\": [0, 0],\n      \"maximum\": [360, 180],\n      \"transition\": false,\n      \"doc\": \"Position of the sun center [a azimuthal angle, p polar angle]. The azimuthal angle indicates the position of the sun relative to 0° north, where degrees proceed clockwise. The polar angle indicates the height of the sun, where 0° is directly above, at zenith, and 90° at the horizon. When this property is ommitted, the sun center is directly inherited from the light position.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-sun-intensity\": {\n      \"type\": \"number\",\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"default\": 10,\n      \"minimum\": 0,\n      \"maximum\": 100,\n      \"transition\": false,\n      \"doc\": \"Intensity of the sun as a light source in the atmosphere (on a scale from 0 to a 100). Setting higher values will brighten up the sky.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient-center\": {\n      \"type\": \"array\",\n      \"requires\": [\n        {\n          \"sky-type\": \"gradient\"\n        }\n      ],\n      \"value\": \"number\",\n      \"default\": [\n        0,\n        0\n      ],\n      \"length\": 2,\n      \"units\": \"degrees\",\n      \"minimum\": [0, 0],\n      \"maximum\": [360, 180],\n      \"transition\": false,\n      \"doc\": \"Position of the gradient center [a azimuthal angle, p polar angle]. The azimuthal angle indicates the position of the gradient center relative to 0° north, where degrees proceed clockwise. The polar angle indicates the height of the gradient center, where 0° is directly above, at zenith, and 90° at the horizon.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient-radius\": {\n      \"type\": \"number\",\n      \"requires\": [\n        {\n          \"sky-type\": \"gradient\"\n        }\n      ],\n      \"default\": 90,\n      \"minimum\": 0,\n      \"maximum\": 180,\n      \"transition\": false,\n      \"doc\": \"The angular distance (measured in degrees) from `sky-gradient-center` up to which the gradient extends. A value of 180 causes the gradient to wrap around to the opposite direction from `sky-gradient-center`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient\": {\n      \"type\": \"color\",\n      \"default\": [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"sky-radial-progress\"\n        ],\n        0.8,\n        \"#87ceeb\",\n        1,\n        \"white\"\n      ],\n      \"doc\": \"Defines a radial color gradient with which to color the sky. The color values can be interpolated with an expression using `sky-radial-progress`. The range [0, 1] for the interpolant covers a radial distance (in degrees) of [0, `sky-gradient-radius`] centered at the position specified by `sky-gradient-center`.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"sky-type\": \"gradient\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        },\n        \"data-driven styling\": {}\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"sky-radial-progress\"\n        ]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"sky-atmosphere-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"white\",\n      \"doc\": \"A color applied to the atmosphere sun halo. The alpha channel describes how strongly the sun halo is represented in an atmosphere sky layer.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-color\": {\n      \"type\": \"color\",\n      \"default\": \"white\",\n      \"doc\": \"A color used to tweak the main atmospheric scattering coefficients. Using white applies the default coefficients giving the natural blue color to the atmosphere. This color affects how heavily the corresponding wavelength is represented during scattering. The alpha channel describes the density of the atmosphere, with 1 maximum density and 0 no density.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity of the entire sky layer.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"transition\": {\n    \"duration\": {\n      \"type\": \"number\",\n      \"default\": 300,\n      \"minimum\": 0,\n      \"units\": \"milliseconds\",\n      \"doc\": \"Time allotted for transitions to complete.\"\n    },\n    \"delay\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"milliseconds\",\n      \"doc\": \"Length of time before a transition begins.\"\n    }\n  },\n  \"property-type\": {\n    \"data-driven\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property is interpolable and can be represented using a property expression.\"\n    },\n    \"color-ramp\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property should be specified using a color ramp from which the output color can be sampled based on a property calculation.\"\n    },\n    \"data-constant\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property is interpolable but cannot be represented using a property expression.\"\n    },\n    \"constant\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property is constant across all zoom levels and property values.\"\n    }\n  },\n  \"promoteId\": {\n    \"*\": {\n      \"type\": \"string\",\n      \"doc\": \"A name of a feature property to use as ID for feature state.\"\n    }\n  }\n}\n", "// @flow\n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\nimport type {GlobalProperties, Feature} from '../expression/index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type Point from '@mapbox/point-geometry';\n\nexport type FeatureDistanceData = {bearing: [number, number], center: [number, number], scale: number};\nexport type FilterExpression = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => boolean;\nexport type FeatureFilter = {filter: FilterExpression, dynamicFilter?: FilterExpression, needGeometry: boolean, needFeature: boolean};\n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter: any): boolean {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any, layerType?: string = 'fill'): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter: any): string[] | string | boolean);\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc: any): FilterExpression);\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter: any): any {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression: any): any {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter: any) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter: any): boolean {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression: string): boolean {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression: any): any {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n", "// @flow\nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n", "// @flow\n\nimport refProperties from './util/ref_properties.js';\n\nimport type {LayerSpecification} from './types.js';\n\nfunction deref(layer: LayerSpecification, parent: LayerSpecification): LayerSpecification {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent: any)[k];\n        }\n    });\n\n    return ((result: any): LayerSpecification);\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers: Array<LayerSpecification>): Array<LayerSpecification> {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]: any).ref]);\n        }\n    }\n\n    return layers;\n}\n", "var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n", "/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n", "const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n", "/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  getValue,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFunctionCache,\n  getGlStyle,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJSON,\n          options\n        );\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = decodeURI(transformed.url);\n      }\n    }\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        url: extentUrl,\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    return new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n    });\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = event.resolution;\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n", "import {\n  stylefunction as applyStylefunction,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {expandUrl} from 'ol/tileurlfunction.js';\nimport {finalizeLayer, setupLayer} from './apply.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const request = options.transformRequest\n    ? options.transformRequest(url, resourceType) || new Request(url)\n    : new Request(url);\n  if (!request.headers.get('Accept')) {\n    request.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = request;\n  }\n  const pendingRequest = fetch(request)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [request, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nfunction getTransformedTilesUrl(tilesUrl, options) {\n  if (options.transformRequest) {\n    const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n    if (transformedRequest instanceof Request) {\n      return decodeURI(transformedRequest.url);\n    }\n  }\n  return tilesUrl;\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          })\n        );\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return getTransformedTilesUrl(\n              normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                metadata.request.url\n              ),\n              options\n            );\n          });\n          return Promise.resolve(tileJson);\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return getTransformedTilesUrl(\n            normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              styleUrl || location.href\n            ),\n            options\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.width = area.width;\n  imageCanvas.height = area.height;\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId)\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.'\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id)\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.'\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n", "import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css'\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n", "/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      ).slice(0);\n                      displacement[1] *= -1;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, imgSize, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(spriteImage, spriteImageData, iconColor),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor\n                          );\n                        }\n                        imgSize = [img.width, img.height];\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1}\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        imgSize = spriteImageSize;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        imgSize: imgSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined\n                )\n              : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n", "/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imageResolution = image.getResolution();\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (imageResolution * pixelRatio) / imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n", "/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n", "/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n", "/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n", "/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n", "/**\n * @module ol/webgl/BaseTileRepresentation\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {import(\"../Tile.js\").default} BaseTileType\n */\n\n/**\n * @template {BaseTileType} TileType\n * @typedef {Object} TileRepresentationOptions\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\n/**\n * @classdesc\n * Base class for representing a tile in a webgl context\n * @template {import(\"../Tile.js\").default} TileType\n * @abstract\n */\nclass BaseTileRepresentation extends EventTarget {\n  /**\n   * @param {TileRepresentationOptions<TileType>} options The tile representation options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.gutter_ = options.gutter || 0;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @protected\n     */\n    this.helper_ = options.helper;\n\n    this.loaded = false;\n    this.ready = false;\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  /**\n   * @abstract\n   * @protected\n   */\n  uploadTile() {\n    abstract();\n  }\n\n  setReady() {\n    this.ready = true;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile();\n    }\n  }\n\n  disposeInternal() {\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n}\n\nexport default BaseTileRepresentation;\n", "/**\n * @module ol/webgl/TileTexture\n */\n\nimport BaseTileRepresentation from './BaseTileRepresentation.js';\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @extends {BaseTileRepresentation<TileType>}\n */\nclass TileTexture extends BaseTileRepresentation {\n  /**\n   * @param {import(\"./BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options The tile texture options.\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0])\n    );\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper_.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  uploadTile() {\n    const helper = this.helper_;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    this.textures.length = 0;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      this.setReady();\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter_,\n      sourceTileSize[1] + 2 * this.gutter_,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate\n      );\n      this.setReady();\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate\n      );\n    }\n\n    this.setReady();\n  }\n\n  disposeInternal() {\n    const gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (let i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n", "/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid\n  ) {\n    if (!tileRepresentation.loaded) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.loaded &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n", "/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n", "/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * @param {string} typeHint Type hint\n * @return {ValueTypes} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return ValueTypes.STRING;\n    case 'color':\n      return ValueTypes.COLOR;\n    case 'number':\n      return ValueTypes.NUMBER;\n    case 'boolean':\n      return ValueTypes.BOOLEAN;\n    case 'number[]':\n      return ValueTypes.NUMBER_ARRAY;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes): string} toGlsl Returns a GLSL-compatible string\n * given a parsing context, an array of arguments and an expected type.\n * Note: the expected type can be a combination such as ValueTypes.NUMBER | ValueTypes.STRING or ValueTypes.ANY for instance\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Print types as a readable string\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {string} Types\n */\nfunction printTypes(valueType) {\n  const result = [];\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    result.push('number');\n  }\n  if ((valueType & ValueTypes.COLOR) > 0) {\n    result.push('color');\n  }\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    result.push('boolean');\n  }\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    result.push('number[]');\n  }\n  if ((valueType & ValueTypes.STRING) > 0) {\n    result.push('string');\n  }\n  return result.length > 0 ? result.join(', ') : '(no type)';\n}\n\n/**\n * @typedef {Object} ParsingContextExternal\n * @property {string} name Name, unprefixed\n * @property {ValueTypes} type One of the value types constants\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [callback] Function used for computing the attribute value;\n *   if undefined, `feature.get(attribute.name)` will be used\n */\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<ParsingContextExternal>} variables External variables used in the expression\n * @property {Array<ParsingContextExternal>} attributes External attributes used in the expression\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/literal\").LiteralStyle} style The style being parsed\n */\n\n/**\n * @param {string} operator Operator\n * @param {ParsingContext} context Parsing context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [expectedType] Expected final type (can be several types combined)\n * If omitted, defaults to ValueTypes.NUMBER\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, expectedType) {\n  const returnType =\n    expectedType !== undefined ? expectedType : ValueTypes.NUMBER;\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), returnType);\n  }\n\n  const possibleType = getValueType(value) & returnType;\n  assertNotEmptyType(value, possibleType, '');\n\n  if ((possibleType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if ((possibleType & ValueTypes.STRING) > 0) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if ((possibleType & ValueTypes.COLOR) > 0) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${value} (expected type ${printTypes(returnType)})`\n  );\n}\n\nfunction assertNumber(value) {\n  if ((getValueType(value) & ValueTypes.NUMBER) === 0) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if ((getValueType(value) & ValueTypes.STRING) === 0) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if ((getValueType(value) & ValueTypes.BOOLEAN) === 0) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertNotEmptyType(args, types, descriptor) {\n  if (types === ValueTypes.NONE) {\n    throw new Error(\n      `No matching type was found for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\nfunction assertSingleType(args, types, descriptor) {\n  assertNotEmptyType(args, types, descriptor);\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Expected to have a unique type for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}\nGot the following types instead: ${printTypes(types)}`\n    );\n  }\n}\nfunction assertOfType(args, types, expectedTypes, descriptor) {\n  if ((types & expectedTypes) === ValueTypes.NONE) {\n    throw new Error(\n      `Expected the ${descriptor} type of the following expression: ${JSON.stringify(\n        args\n      )} to be of the following types: ${printTypes(expectedTypes)}\nGot these types instead: ${printTypes(types)}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    if (args.length === 2) {\n      const hint = args[1];\n      return getTypeFromHint(/** @type {string} */ (hint));\n    }\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertString(args[0]);\n    const outputType = expectedType & Operators['get'].getReturnType(args);\n    assertSingleType(['get', ...args], outputType, '');\n    const name = args[0].toString();\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following attribute was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function () {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const name = args[0].toString();\n    if (\n      !context.style.variables ||\n      context.style.variables[name] === undefined\n    ) {\n      throw new Error(\n        `The following variable is missing from the style: ${name}`\n      );\n    }\n    const initialValue = context.style.variables[name];\n    const outputType = expectedType & getValueType(initialValue);\n    assertSingleType(['var', ...args], outputType, '');\n    const existing = context.variables.find((a) => a.name === name);\n    if (!existing) {\n      context.variables.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following variable was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    return uniformNameForVariable(name);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['geometry-type'] = {\n  getReturnType: function () {\n    return ValueTypes.STRING;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    const name = 'geometryType';\n    const computeType = (geometry) => {\n      const type = geometry.getType();\n      switch (type) {\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n          return type;\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n          return type.substring(5);\n        case 'Circle':\n          return 'Polygon';\n        case 'GeometryCollection':\n          return computeType(geometry.getGeometries()[0]);\n        default:\n      }\n    };\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: ValueTypes.STRING,\n        callback: (feature) => {\n          return computeType(feature.getGeometry());\n        },\n      });\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    let outputType = ValueTypes.NUMBER | ValueTypes.COLOR;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    return outputType;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 2);\n    let outputType = expectedType;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    assertOfType(\n      args,\n      outputType,\n      ValueTypes.NUMBER | ValueTypes.COLOR,\n      'output'\n    );\n    return `(${args\n      .map((arg) => expressionToGlsl(context, arg, outputType))\n      .join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sqrt'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sqrt(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0], ValueTypes.BOOLEAN)})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = args\n        .map((arg) => expressionToGlsl(context, arg, ValueTypes.BOOLEAN))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args\n      .slice(0, 3)\n      .map((val) => `${expressionToGlsl(context, val)} / 255.0`);\n    if (args.length === 3) {\n      return `vec4(${parsedArgs.join(', ')}, 1.0)`;\n    }\n    const alpha = expressionToGlsl(context, args[3]);\n    return `(${alpha} * vec4(${parsedArgs.join(', ')}, 1.0))`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    const inputType = ValueTypes.NUMBER;\n    const outputType =\n      Operators['interpolate'].getReturnType(args) & expectedType;\n    assertSingleType(['interpolate', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[1], inputType);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i], inputType);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2], inputType);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      let ratio;\n      if (interpolation === 1) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    let inputType = getValueType(args[0]);\n    for (let i = 1; i < args.length - 1; i += 2) {\n      inputType = inputType & getValueType(args[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const outputType = Operators['match'].getReturnType(args) & expectedType;\n    assertSingleType(['match', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[0], inputType);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i], inputType);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    const outputType = Operators['case'].getReturnType(args) & expectedType;\n    assertSingleType(['case', ...args], outputType, 'output');\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i], ValueTypes.BOOLEAN);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['in'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    const needle = args[0];\n    let haystack = args[1];\n    if (!Array.isArray(haystack)) {\n      throw new Error(\n        `The \"in\" operator expects an array literal as its second argument.`\n      );\n    }\n    if (typeof haystack[0] === 'string') {\n      if (haystack[0] !== 'literal') {\n        throw new Error(\n          `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n        );\n      }\n      if (!Array.isArray(haystack[1])) {\n        throw new Error(\n          `The \"in\" operator was provided a literal value which was not an array as second argument.`\n        );\n      }\n      haystack = haystack[1];\n    }\n\n    let inputType = getValueType(needle);\n    for (let i = 0; i < haystack.length - 1; i += 1) {\n      inputType = inputType & getValueType(haystack[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(\n        `  if (inputValue == ${expressionToGlsl(\n          context,\n          haystack[i],\n          inputType\n        )}) { return true; }`\n      );\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${expressionToGlsl(context, needle, inputType)})`;\n  },\n};\n", "/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {colorToGlsl, numberToGlsl} from '../style/expressions.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nconst BASE_UNIFORMS = `uniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform vec4 u_renderExtent;\nuniform mediump int u_hitDetection;\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius']\n    )})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color'])\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color'])\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color'])\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   *\n   * The following uniforms are hardcoded in all shaders: `u_projectionMatrix`, `u_offsetScaleMatrix`,\n   * `u_offsetRotateMatrix`, `u_time`, `u_zoom`, `u_resolution`, `u_hitDetection`.\n   *\n   * The following attributes are hardcoded and expected to be present in the vertex buffers:\n   * `vec2 a_position`, `float a_index` (being the index of the vertex in the quad, 0 to 3), `vec4 a_hitColor`.\n   *\n   * The following varyings are hardcoded and gives the coordinate of the pixel both in the quad and on the texture:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`, `vec4 v_hitColor`.\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    const offsetMatrix = this.symbolRotateWithView_\n      ? 'u_offsetScaleMatrix * u_offsetRotateMatrix'\n      : 'u_offsetScaleMatrix';\n\n    return `precision mediump float;\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_offsetScaleMatrix;\nuniform mat4 u_offsetRotateMatrix;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform mediump int u_hitDetection;\n\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  mat4 offsetMatrix = ${offsetMatrix};\n  vec2 halfSize = ${this.symbolSizeExpression_} * 0.5;\n  vec2 offset = ${this.symbolOffsetExpression_};\n  float angle = ${this.symbolRotationExpression_};\n  float offsetX;\n  float offsetY;\n  if (a_index == 0.0) {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  } else if (a_index == 1.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else if (a_index == 2.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  }\n  vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v = a_index == 2.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v_quadCoord = vec2(u, v);\n  v_hitColor = a_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   *\n   * Expects the following varyings to be transmitted by the vertex shader:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`, `vec4 v_hitColor`.\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `precision mediump float;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform mediump int u_hitDetection;\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.symbolColorExpression_};\n  gl_FragColor.rgb *= gl_FragColor.a;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = pxPos * 4.0 / u_viewportSizePx;\n  return vec4(screenPos.xy, 0.0, 0.0);\n}\n\nvec2 getOffsetDirection(vec2 normalPx, vec2 tangentPx, float joinAngle) {\n  if (cos(joinAngle) > 0.93) return normalPx - tangentPx;\n  float halfAngle = joinAngle / 2.0;\n  vec2 angleBisectorNormal = vec2(\n    sin(halfAngle) * normalPx.x + cos(halfAngle) * normalPx.y,\n    -cos(halfAngle) * normalPx.x + sin(halfAngle) * normalPx.y\n  );\n  float length = 1.0 / sin(halfAngle);\n  return angleBisectorNormal * length;\n}\n\nvoid main(void) {\n  float lineWidth = ${this.strokeWidthExpression_};\n  float anglePrecision = 1500.0;\n  float paramShift = 10000.0;\n  v_angleStart = fract(a_parameters / paramShift) * paramShift / anglePrecision;\n  v_angleEnd = fract(floor(a_parameters / paramShift + 0.5) / paramShift) * paramShift / anglePrecision;\n  float vertexNumber = floor(a_parameters / paramShift / paramShift + 0.0001);\n  vec2 tangentPx = worldToPx(a_segmentEnd) - worldToPx(a_segmentStart);\n  tangentPx = normalize(tangentPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 offsetPx = getOffsetDirection(normalPx * normalDir, tangentDir * tangentPx, angle) * lineWidth * 0.5;\n  vec2 position =  vertexNumber < 1.5 ? a_segmentStart : a_segmentEnd;\n  gl_Position = u_projectionMatrix * vec4(position, 0.0, 1.0) + pxToScreen(offsetPx);\n  v_segmentStart = worldToPx(a_segmentStart);\n  v_segmentEnd = worldToPx(a_segmentEnd);\n  v_width = lineWidth;\n  v_hitColor = a_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float radius) {\n  vec2 startToPoint = point - start;\n  vec2 startToEnd = end - start;\n  float ratio = clamp(dot(startToPoint, startToEnd) / dot(startToEnd, startToEnd), 0.0, 1.0);\n  float dist = length(startToPoint - ratio * startToEnd);\n  return 1.0 - smoothstep(radius - 1.0, radius, dist);\n}\n\nvoid main(void) {\n  vec2 v_currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 v_worldPos = pxToWorld(v_currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      v_worldPos[0] < u_renderExtent[0] ||\n      v_worldPos[1] < u_renderExtent[1] ||\n      v_worldPos[0] > u_renderExtent[2] ||\n      v_worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.strokeColorExpression_} * u_globalAlpha;\n  gl_FragColor *= segmentDistanceField(v_currentPoint, v_segmentStart, v_segmentEnd, v_width);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvoid main(void) {\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 v_worldPos = pxToWorld(gl_FragCoord.xy / u_pixelRatio);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      v_worldPos[0] < u_renderExtent[0] ||\n      v_worldPos[1] < u_renderExtent[1] ||\n      v_worldPos[0] > u_renderExtent[2] ||\n      v_worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n}\n", "/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const context = {\n    inFragmentShader: true,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n    bandCount: bandCount,\n    style: style,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(\n      context,\n      style.contrast,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(\n      context,\n      style.exposure,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(\n      context,\n      style.saturation,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(\n      context,\n      style.brightness,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = context.variables.length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variable = context.variables[i];\n    if (!(variable.name in style.variables)) {\n      throw new Error(`Missing '${variable.name}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variable.name);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variable.name];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(context, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(function (\n    name\n  ) {\n    return context.functions[name];\n  });\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n      ? [source]\n      : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n", "/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n", "/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(!geometry || geometry.getType() === 'Point', 10); // The default `geometryFunction` can only handle `Point` or null geometries\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n", "/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n", "export const THIS_IS_NOT_AN_OBJECT = \"This is not an object\";\nexport const THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT = \"This is not a Float16Array object\";\nexport const THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY =\n  \"This constructor is not a subclass of Float16Array\";\nexport const THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT =\n  \"The constructor property value is not an object\";\nexport const SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT =\n  \"Species constructor didn't return TypedArray object\";\nexport const DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH =\n  \"Derived constructor created TypedArray object which was too small length\";\nexport const ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER =\n  \"Attempting to access detached ArrayBuffer\";\nexport const CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT =\n  \"Cannot convert undefined or null to object\";\nexport const CANNOT_MIX_BIGINT_AND_OTHER_TYPES =\n  \"Cannot mix BigInt and other types, use explicit conversions\";\nexport const ITERATOR_PROPERTY_IS_NOT_CALLABLE = \"@@iterator property is not callable\";\nexport const REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE =\n  \"Reduce of empty array with no initial value\";\nexport const THE_COMPARISON_FUNCTION_MUST_BE_EITHER_A_FUNCTION_OR_UNDEFINED =\n  \"The comparison function must be either a function or undefined\";\nexport const OFFSET_IS_OUT_OF_BOUNDS = \"Offset is out of bounds\";\n", "/* eslint-disable no-restricted-globals, no-restricted-syntax */\n/* global SharedArrayBuffer */\n\nimport { CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT } from \"./messages.mjs\";\n\n/** @type {<T extends (...args: any) => any>(target: T) => (thisArg: ThisType<T>, ...args: any[]) => any} */\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\n\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\n\n// Reflect\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\n\n// Proxy\nexport const NativeProxy = Proxy;\n\n// Number\nexport const {\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = Number;\n\n// Symbol\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\n\n// Object\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\n/** @type {(object: object, key: PropertyKey) => Function | undefined} */\nexport const ObjectPrototype__lookupGetter__ = /** @type {any} */ (ObjectPrototype).__lookupGetter__\n  ? uncurryThis(/** @type {any} */ (ObjectPrototype).__lookupGetter__)\n  : (object, key) => {\n    if (object == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n\n    let target = NativeObject(object);\n    do {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      if (descriptor !== undefined) {\n        if (ObjectHasOwn(descriptor, \"get\")) {\n          return descriptor.get;\n        }\n\n        return;\n      }\n    } while ((target = ReflectGetPrototypeOf(target)) !== null);\n  };\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const ObjectHasOwn = /** @type {any} */ (NativeObject).hasOwn ||\n  uncurryThis(ObjectPrototype.hasOwnProperty);\n\n// Array\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>, ...opts: any[]) => string} */\nexport const ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n\n// Math\nexport const {\n  abs: MathAbs,\n  trunc: MathTrunc,\n} = Math;\n\n// ArrayBuffer\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\nexport const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\n\n// SharedArrayBuffer\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n\n// TypedArray\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n/** @type {any} */\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\nexport const TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\nexport const TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\n/** @type {(target: unknown) => string} */\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\n\n// Uint8Array\nexport const NativeUint8Array = Uint8Array;\n\n// Uint16Array\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\nexport const Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\n\n// Uint32Array\nexport const NativeUint32Array = Uint32Array;\n\n// Float32Array\nexport const NativeFloat32Array = Float32Array;\n\n// ArrayIterator\n/** @type {any} */\nexport const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n\n// Generator\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\nexport const GeneratorPrototypeNext = uncurryThis((function* () {})().next);\n\n// Iterator\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n\n// DataView\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\nexport const DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\nexport const DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\n\n// Error\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError;\n\n// WeakSet\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n * @type {{new <T extends {}>(): WeakSet<T>}}\n */\nexport const NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => Set<T>} */\nexport const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => boolean} */\nexport const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\n\n// WeakMap\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n", "import {\n  ArrayIteratorPrototype,\n  ArrayIteratorPrototypeNext,\n  ArrayPrototypeSymbolIterator,\n  GeneratorPrototypeNext,\n  IteratorPrototype,\n  NativeArrayPrototypeSymbolIterator,\n  NativeWeakMap,\n  ObjectCreate,\n  ObjectDefineProperty,\n  ReflectGetOwnPropertyDescriptor,\n  ReflectOwnKeys,\n  SymbolIterator,\n  WeakMapPrototypeGet,\n  WeakMapPrototypeSet,\n} from \"./primordials.mjs\";\n\n/** @type {WeakMap<{}, IterableIterator<any>>} */\nconst arrayIterators = new NativeWeakMap();\n\nconst SafeIteratorPrototype = ObjectCreate(null, {\n  next: {\n    value: function next() {\n      const arrayIterator = WeakMapPrototypeGet(arrayIterators, this);\n      return ArrayIteratorPrototypeNext(arrayIterator);\n    },\n  },\n\n  [SymbolIterator]: {\n    value: function values() {\n      return this;\n    },\n  },\n});\n\n/**\n * Wrap the Array around the SafeIterator If Array.prototype [@@iterator] has been modified\n * @type {<T>(array: T[]) => Iterable<T>}\n */\nexport function safeIfNeeded(array) {\n  if (\n    array[SymbolIterator] === NativeArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  ) {\n    return array;\n  }\n\n  const safe = ObjectCreate(SafeIteratorPrototype);\n  WeakMapPrototypeSet(arrayIterators, safe, ArrayPrototypeSymbolIterator(array));\n  return safe;\n}\n\n/** @type {WeakMap<{}, Generator<any>>} */\nconst generators = new NativeWeakMap();\n\n/** @see https://tc39.es/ecma262/#sec-%arrayiteratorprototype%-object */\nconst DummyArrayIteratorPrototype = ObjectCreate(IteratorPrototype, {\n  next: {\n    value: function next() {\n      const generator = WeakMapPrototypeGet(generators, this);\n      return GeneratorPrototypeNext(generator);\n    },\n    writable: true,\n    configurable: true,\n  },\n});\n\nfor (const key of ReflectOwnKeys(ArrayIteratorPrototype)) {\n  // next method has already defined\n  if (key === \"next\") {\n    continue;\n  }\n\n  // Copy ArrayIteratorPrototype descriptors to DummyArrayIteratorPrototype\n  ObjectDefineProperty(DummyArrayIteratorPrototype, key, ReflectGetOwnPropertyDescriptor(ArrayIteratorPrototype, key));\n}\n\n/**\n * Wrap the Generator around the dummy ArrayIterator\n * @type {<T>(generator: Generator<T>) => IterableIterator<T>}\n */\nexport function wrap(generator) {\n  const dummy = ObjectCreate(DummyArrayIteratorPrototype);\n  WeakMapPrototypeSet(generators, dummy, generator);\n  return dummy;\n}\n", "import {\n  ArrayBufferPrototypeGetByteLength,\n  ArrayIsArray,\n  ArrayIteratorPrototype,\n  ArrayIteratorPrototypeNext,\n  MathTrunc,\n  NativeArrayPrototypeSymbolIterator,\n  NativeSharedArrayBuffer,\n  NativeTypedArrayPrototypeSymbolIterator,\n  NumberIsFinite,\n  SharedArrayBufferPrototypeGetByteLength,\n  SymbolIterator,\n  TypedArrayPrototypeGetSymbolToStringTag,\n} from \"./primordials.mjs\";\n\n/**\n * @param {unknown} value\n * @returns {value is {}}\n */\nexport function isObject(value) {\n  return (\n    (value !== null && typeof value === \"object\") ||\n    typeof value === \"function\"\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is {}}\n */\nexport function isObjectLike(value) {\n  return value !== null && typeof value === \"object\";\n}\n\n// Inspired by util.types implementation of Node.js\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n\n/**\n * @param {unknown} value\n * @returns {value is TypedArray}\n */\nexport function isNativeTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is BigInt64Array|BigUint64Array}\n */\nexport function isNativeBigIntTypedArray(value) {\n  const typedArrayName = TypedArrayPrototypeGetSymbolToStringTag(value);\n  return (\n    typedArrayName === \"BigInt64Array\" ||\n    typedArrayName === \"BigUint64Array\"\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ArrayBuffer}\n */\nfunction isArrayBuffer(value) {\n  try {\n    ArrayBufferPrototypeGetByteLength(/** @type {any} */ (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is SharedArrayBuffer}\n */\nexport function isSharedArrayBuffer(value) {\n  if (NativeSharedArrayBuffer === null) {\n    return false;\n  }\n\n  try {\n    SharedArrayBufferPrototypeGetByteLength(/** @type {any} */ (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ArrayBuffer|SharedArrayBuffer}\n */\nexport function isAnyArrayBuffer(value) {\n  return isArrayBuffer(value) || isSharedArrayBuffer(value);\n}\n\n/**\n * @param {unknown} value\n * @returns {value is unknown[]}\n */\nexport function isOrdinaryArray(value) {\n  if (!ArrayIsArray(value)) {\n    return false;\n  }\n\n  // Verify that there are no changes in ArrayIterator\n  return (\n    value[SymbolIterator] === NativeArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is TypedArray}\n */\nexport function isOrdinaryNativeTypedArray(value) {\n  if (!isNativeTypedArray(value)) {\n    return false;\n  }\n\n  // Verify that there are no changes in ArrayIterator\n  return (\n    value[SymbolIterator] === NativeTypedArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  );\n}\n\n/**\n * @param {unknown} value\n * @returns {value is string}\n */\nexport function isCanonicalIntegerIndexString(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  const number = +value;\n  if (value !== number + \"\") {\n    return false;\n  }\n\n  if (!NumberIsFinite(number)) {\n    return false;\n  }\n\n  return number === MathTrunc(number);\n}\n", "import { isObject, isObjectLike } from \"./is.mjs\";\nimport { THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT } from \"./messages.mjs\";\nimport { NativeTypeError, ReflectGetPrototypeOf, ReflectHas, SymbolFor } from \"./primordials.mjs\";\n\nexport const brand = SymbolFor(\"__Float16Array__\");\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n * @returns {boolean}\n */\nexport function hasFloat16ArrayBrand(target) {\n  if (!isObjectLike(target)) {\n    return false;\n  }\n\n  const prototype = ReflectGetPrototypeOf(target);\n  if (!isObjectLike(prototype)) {\n    return false;\n  }\n\n  const constructor = prototype.constructor;\n  if (constructor === undefined) {\n    return false;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n\n  return ReflectHas(constructor, brand);\n}\n", "import {\n  EPSILON,\n  MathAbs,\n  NativeArrayBuffer,\n  NativeFloat32Array,\n  NativeUint16Array,\n  NativeUint32Array,\n  NativeUint8Array,\n  NumberIsFinite,\n  NumberIsNaN,\n} from \"./primordials.mjs\";\n\nconst INVERSE_OF_EPSILON = 1 / EPSILON;\n\n/**\n * rounds to the nearest value;\n * if the number falls midway, it is rounded to the nearest value with an even least significant digit\n * @param {number} num\n * @returns {number}\n */\nfunction roundTiesToEven(num) {\n  return (num + INVERSE_OF_EPSILON) - INVERSE_OF_EPSILON;\n}\n\nconst FLOAT16_MIN_VALUE = 6.103515625e-05;\nconst FLOAT16_MAX_VALUE = 65504;\nconst FLOAT16_EPSILON = 0.0009765625;\n\nconst FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE = FLOAT16_EPSILON * FLOAT16_MIN_VALUE;\nconst FLOAT16_EPSILON_DEVIDED_BY_EPSILON = FLOAT16_EPSILON * INVERSE_OF_EPSILON;\n\n/**\n * round a number to a half float number\n * @param {unknown} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16(num) {\n  const number = +num;\n\n  // NaN, Infinity, -Infinity, 0, -0\n  if (!NumberIsFinite(number) || number === 0) {\n    return number;\n  }\n\n  // finite except 0, -0\n  const sign = number > 0 ? 1 : -1;\n  const absolute = MathAbs(number);\n\n  // small number\n  if (absolute < FLOAT16_MIN_VALUE) {\n    return sign * roundTiesToEven(absolute / FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE) * FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE;\n  }\n\n  const temp = (1 + FLOAT16_EPSILON_DEVIDED_BY_EPSILON) * absolute;\n  const result = temp - (temp - absolute);\n\n  // large number\n  if (result > FLOAT16_MAX_VALUE || NumberIsNaN(result)) {\n    return sign * Infinity;\n  }\n\n  return sign * result;\n}\n\n// base algorithm: http://fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst buffer = new NativeArrayBuffer(4);\nconst floatView = new NativeFloat32Array(buffer);\nconst uint32View = new NativeUint32Array(buffer);\n\nconst baseTable = new NativeUint16Array(512);\nconst shiftTable = new NativeUint8Array(512);\n\nfor (let i = 0; i < 256; ++i) {\n  const e = i - 127;\n\n  // very small number (0, -0)\n  if (e < -27) {\n    baseTable[i]         = 0x0000;\n    baseTable[i | 0x100] = 0x8000;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // small number (denorm)\n  } else if (e < -14) {\n    baseTable[i]         =  0x0400 >> (-e - 14);\n    baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n    shiftTable[i]         = -e - 1;\n    shiftTable[i | 0x100] = -e - 1;\n\n  // normal number\n  } else if (e <= 15) {\n    baseTable[i]         =  (e + 15) << 10;\n    baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n\n  // large number (Infinity, -Infinity)\n  } else if (e < 128) {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // stay (NaN, Infinity, -Infinity)\n  } else {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  }\n}\n\n/**\n * round a number to a half float number bits\n * @param {unknown} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n  floatView[0] = roundToFloat16(num);\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\nconst mantissaTable = new NativeUint32Array(2048);\nfor (let i = 1; i < 1024; ++i) {\n  let m = i << 13; // zero pad mantissa bits\n  let e = 0; // zero exponent\n\n  // normalized\n  while ((m & 0x00800000) === 0) {\n    m <<= 1;\n    e -= 0x00800000; // decrement exponent\n  }\n\n  m &= ~0x00800000; // clear leading 1 bit\n  e += 0x38800000; // adjust bias\n\n  mantissaTable[i] = m | e;\n}\nfor (let i = 1024; i < 2048; ++i) {\n  mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nconst exponentTable = new NativeUint32Array(64);\nfor (let i = 1; i < 31; ++i) {\n  exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor (let i = 33; i < 63; ++i) {\n  exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\nconst offsetTable = new NativeUint16Array(64);\nfor (let i = 1; i < 64; ++i) {\n  if (i !== 32) {\n    offsetTable[i] = 1024;\n  }\n}\n\n/**\n * convert a half float number bits to a number\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n  const i = float16bits >> 10;\n  uint32View[0] = mantissaTable[offsetTable[i] + (float16bits & 0x3ff)] + exponentTable[i];\n  return floatView[0];\n}\n", "import { isObject, isSharedArrayBuffer } from \"./is.mjs\";\nimport {\n  THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT,\n  THIS_IS_NOT_AN_OBJECT,\n} from \"./messages.mjs\";\nimport {\n  ArrayBufferPrototypeSlice,\n  MAX_SAFE_INTEGER,\n  MathTrunc,\n  NativeTypeError,\n  NumberIsNaN,\n  ObjectIs,\n  SymbolSpecies,\n} from \"./primordials.mjs\";\n\n/**\n * @see https://tc39.es/ecma262/#sec-tointegerorinfinity\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToIntegerOrInfinity(target) {\n  const number = +target;\n\n  if (NumberIsNaN(number) || number === 0) {\n    return 0;\n  }\n\n  return MathTrunc(number);\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-tolength\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n  if (length < 0) {\n    return 0;\n  }\n\n  return length < MAX_SAFE_INTEGER\n    ? length\n    : MAX_SAFE_INTEGER;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-speciesconstructor\n * @param {object} target\n * @param {{ new(...args: any[]): any; }} defaultConstructor\n * @returns {{ new(...args: any[]): any; }}\n */\nexport function SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n  }\n\n  const constructor = target.constructor;\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n\n  const species = constructor[SymbolSpecies];\n  if (species == null) {\n    return defaultConstructor;\n  }\n\n  return species;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-isdetachedbuffer\n * @param {ArrayBufferLike} buffer\n * @returns {boolean}\n */\nexport function IsDetachedBuffer(buffer) {\n  if (isSharedArrayBuffer(buffer)) {\n    return false;\n  }\n\n  try {\n    ArrayBufferPrototypeSlice(buffer, 0, 0);\n    return false;\n  } catch (e) {/* empty */}\n\n  return true;\n}\n\n/**\n * bigint comparisons are not supported\n * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompare(x, y) {\n  const isXNaN = NumberIsNaN(x);\n  const isYNaN = NumberIsNaN(y);\n\n  if (isXNaN && isYNaN) {\n    return 0;\n  }\n\n  if (isXNaN) {\n    return 1;\n  }\n\n  if (isYNaN) {\n    return -1;\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (x > y) {\n    return 1;\n  }\n\n  if (x === 0 && y === 0) {\n    const isXPlusZero = ObjectIs(x, 0);\n    const isYPlusZero = ObjectIs(y, 0);\n\n    if (!isXPlusZero && isYPlusZero) {\n      return -1;\n    }\n\n    if (isXPlusZero && !isYPlusZero) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n", "import { safeIfNeeded, wrap } from \"./_util/arrayIterator.mjs\";\nimport { brand, hasFloat16ArrayBrand } from \"./_util/brand.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_util/converter.mjs\";\nimport {\n  isAnyArrayBuffer,\n  isCanonicalIntegerIndexString,\n  isNativeBigIntTypedArray,\n  isNativeTypedArray,\n  isObject,\n  isOrdinaryArray,\n  isOrdinaryNativeTypedArray,\n} from \"./_util/is.mjs\";\nimport {\n  ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER,\n  CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT,\n  CANNOT_MIX_BIGINT_AND_OTHER_TYPES,\n  DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH,\n  ITERATOR_PROPERTY_IS_NOT_CALLABLE,\n  OFFSET_IS_OUT_OF_BOUNDS,\n  REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE,\n  SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT,\n  THE_COMPARISON_FUNCTION_MUST_BE_EITHER_A_FUNCTION_OR_UNDEFINED,\n  THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY,\n  THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT,\n} from \"./_util/messages.mjs\";\nimport {\n  ArrayBufferIsView,\n  ArrayPrototypeJoin,\n  ArrayPrototypePush,\n  ArrayPrototypeToLocaleString,\n  NativeArrayBuffer,\n  NativeObject,\n  NativeProxy,\n  NativeRangeError,\n  NativeTypeError,\n  NativeUint16Array,\n  NativeWeakMap,\n  NativeWeakSet,\n  NumberIsNaN,\n  ObjectDefineProperty,\n  ObjectFreeze,\n  ObjectHasOwn,\n  ObjectPrototype__lookupGetter__,\n  ReflectApply,\n  ReflectConstruct,\n  ReflectDefineProperty,\n  ReflectGet,\n  ReflectGetOwnPropertyDescriptor,\n  ReflectHas,\n  ReflectOwnKeys,\n  ReflectSet,\n  ReflectSetPrototypeOf,\n  SymbolIterator,\n  SymbolToStringTag,\n  TypedArray,\n  TypedArrayPrototype,\n  TypedArrayPrototypeCopyWithin,\n  TypedArrayPrototypeEntries,\n  TypedArrayPrototypeFill,\n  TypedArrayPrototypeGetBuffer,\n  TypedArrayPrototypeGetByteOffset,\n  TypedArrayPrototypeGetLength,\n  TypedArrayPrototypeKeys,\n  TypedArrayPrototypeReverse,\n  TypedArrayPrototypeSet,\n  TypedArrayPrototypeSlice,\n  TypedArrayPrototypeSort,\n  TypedArrayPrototypeSubarray,\n  TypedArrayPrototypeValues,\n  Uint16ArrayFrom,\n  WeakMapPrototypeGet,\n  WeakMapPrototypeHas,\n  WeakMapPrototypeSet,\n  WeakSetPrototypeAdd,\n  WeakSetPrototypeHas,\n} from \"./_util/primordials.mjs\";\nimport {\n  IsDetachedBuffer,\n  SpeciesConstructor,\n  ToIntegerOrInfinity,\n  ToLength,\n  defaultCompare,\n} from \"./_util/spec.mjs\";\n\nconst BYTES_PER_ELEMENT = 2;\n\n/** @typedef {Uint16Array & { __float16bits: never }} Float16BitsArray */\n\n/** @type {WeakMap<Float16Array, Float16BitsArray>} */\nconst float16bitsArrays = new NativeWeakMap();\n\n/**\n * @param {unknown} target\n * @returns {target is Float16Array}\n */\nexport function isFloat16Array(target) {\n  return WeakMapPrototypeHas(float16bitsArrays, target) ||\n    (!ArrayBufferIsView(target) && hasFloat16ArrayBrand(target));\n}\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n * @returns {asserts target is Float16Array}\n */\nfunction assertFloat16Array(target) {\n  if (!isFloat16Array(target)) {\n    throw NativeTypeError(THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT);\n  }\n}\n\n/**\n * @param {unknown} target\n * @param {number=} count\n * @throws {TypeError}\n * @returns {asserts target is Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float16Array|Float32Array|Float64Array}\n */\nfunction assertSpeciesTypedArray(target, count) {\n  const isTargetFloat16Array = isFloat16Array(target);\n  const isTargetTypedArray = isNativeTypedArray(target);\n\n  if (!isTargetFloat16Array && !isTargetTypedArray) {\n    throw NativeTypeError(SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT);\n  }\n\n  if (typeof count === \"number\") {\n    let length;\n    if (isTargetFloat16Array) {\n      const float16bitsArray = getFloat16BitsArray(target);\n      length = TypedArrayPrototypeGetLength(float16bitsArray);\n    } else {\n      length = TypedArrayPrototypeGetLength(target);\n    }\n\n    if (length < count) {\n      throw NativeTypeError(\n        DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH\n      );\n    }\n  }\n\n  if (isNativeBigIntTypedArray(target)) {\n    throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n  }\n}\n\n/**\n * @param {Float16Array} float16\n * @throws {TypeError}\n * @returns {Float16BitsArray}\n */\nfunction getFloat16BitsArray(float16) {\n  const float16bitsArray = WeakMapPrototypeGet(float16bitsArrays, float16);\n  if (float16bitsArray !== undefined) {\n    const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n\n    if (IsDetachedBuffer(buffer)) {\n      throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n    }\n\n    return float16bitsArray;\n  }\n\n  // from another Float16Array instance (a different version?)\n  const buffer = /** @type {any} */ (float16).buffer;\n\n  if (IsDetachedBuffer(buffer)) {\n    throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n  }\n\n  const cloned = ReflectConstruct(Float16Array, [\n    buffer,\n    /** @type {any} */ (float16).byteOffset,\n    /** @type {any} */ (float16).length,\n  ], float16.constructor);\n  return WeakMapPrototypeGet(float16bitsArrays, cloned);\n}\n\n/**\n * @param {Float16BitsArray} float16bitsArray\n * @returns {number[]}\n */\nfunction copyToArray(float16bitsArray) {\n  const length = TypedArrayPrototypeGetLength(float16bitsArray);\n\n  const array = [];\n  for (let i = 0; i < length; ++i) {\n    array[i] = convertToNumber(float16bitsArray[i]);\n  }\n\n  return array;\n}\n\n/** @type {WeakSet<Function>} */\nconst TypedArrayPrototypeGetters = new NativeWeakSet();\nfor (const key of ReflectOwnKeys(TypedArrayPrototype)) {\n  // @@toStringTag getter property is defined in Float16Array.prototype\n  if (key === SymbolToStringTag) {\n    continue;\n  }\n\n  const descriptor = ReflectGetOwnPropertyDescriptor(TypedArrayPrototype, key);\n  if (ObjectHasOwn(descriptor, \"get\") && typeof descriptor.get === \"function\") {\n    WeakSetPrototypeAdd(TypedArrayPrototypeGetters, descriptor.get);\n  }\n}\n\nconst handler = ObjectFreeze(/** @type {ProxyHandler<Float16BitsArray>} */ ({\n  get(target, key, receiver) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      return convertToNumber(ReflectGet(target, key));\n    }\n\n    // %TypedArray%.prototype getter properties cannot called by Proxy receiver\n    if (WeakSetPrototypeHas(TypedArrayPrototypeGetters, ObjectPrototype__lookupGetter__(target, key))) {\n      return ReflectGet(target, key);\n    }\n\n    return ReflectGet(target, key, receiver);\n  },\n\n  set(target, key, value, receiver) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      return ReflectSet(target, key, roundToFloat16Bits(value));\n    }\n\n    return ReflectSet(target, key, value, receiver);\n  },\n\n  getOwnPropertyDescriptor(target, key) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      descriptor.value = convertToNumber(descriptor.value);\n      return descriptor;\n    }\n\n    return ReflectGetOwnPropertyDescriptor(target, key);\n  },\n\n  defineProperty(target, key, descriptor) {\n    if (\n      isCanonicalIntegerIndexString(key) &&\n      ObjectHasOwn(target, key) &&\n      ObjectHasOwn(descriptor, \"value\")\n    ) {\n      descriptor.value = roundToFloat16Bits(descriptor.value);\n      return ReflectDefineProperty(target, key, descriptor);\n    }\n\n    return ReflectDefineProperty(target, key, descriptor);\n  },\n}));\n\nexport class Float16Array {\n  /** @see https://tc39.es/ecma262/#sec-typedarray */\n  constructor(input, _byteOffset, _length) {\n    /** @type {Float16BitsArray} */\n    let float16bitsArray;\n\n    if (isFloat16Array(input)) {\n      float16bitsArray = ReflectConstruct(NativeUint16Array, [getFloat16BitsArray(input)], new.target);\n    } else if (isObject(input) && !isAnyArrayBuffer(input)) { // object without ArrayBuffer, SharedArrayBuffer\n      /** @type {ArrayLike<unknown>} */\n      let list;\n      /** @type {number} */\n      let length;\n\n      if (isNativeTypedArray(input)) { // TypedArray\n        list = input;\n        length = TypedArrayPrototypeGetLength(input);\n\n        const buffer = TypedArrayPrototypeGetBuffer(input);\n\n        if (IsDetachedBuffer(buffer)) {\n          throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n        }\n\n        if (isNativeBigIntTypedArray(input)) {\n          throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n        }\n\n        const data = new NativeArrayBuffer(\n          length * BYTES_PER_ELEMENT\n        );\n        float16bitsArray = ReflectConstruct(NativeUint16Array, [data], new.target);\n      } else {\n        const iterator = input[SymbolIterator];\n        if (iterator != null && typeof iterator !== \"function\") {\n          throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n        }\n\n        if (iterator != null) { // Iterable (Array)\n          // for optimization\n          if (isOrdinaryArray(input)) {\n            list = input;\n            length = input.length;\n          } else {\n            // eslint-disable-next-line no-restricted-syntax\n            list = [... /** @type {Iterable<unknown>} */ (input)];\n            length = list.length;\n          }\n        } else { // ArrayLike\n          list = /** @type {ArrayLike<unknown>} */ (input);\n          length = ToLength(list.length);\n        }\n        float16bitsArray = ReflectConstruct(NativeUint16Array, [length], new.target);\n      }\n\n      // set values\n      for (let i = 0; i < length; ++i) {\n        float16bitsArray[i] = roundToFloat16Bits(list[i]);\n      }\n    } else { // primitive, ArrayBuffer, SharedArrayBuffer\n      float16bitsArray = ReflectConstruct(NativeUint16Array, arguments, new.target);\n    }\n\n    /** @type {Float16Array} */\n    const proxy = /** @type {any} */ (new NativeProxy(float16bitsArray, handler));\n\n    // proxy private storage\n    WeakMapPrototypeSet(float16bitsArrays, proxy, float16bitsArray);\n\n    return proxy;\n  }\n\n  /**\n   * limitation: `Object.getOwnPropertyNames(Float16Array)` or `Reflect.ownKeys(Float16Array)` include this key\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.from\n   */\n  static from(src, ...opts) {\n    const Constructor = this;\n\n    if (!ReflectHas(Constructor, brand)) {\n      throw NativeTypeError(\n        THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n      );\n    }\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      if (isFloat16Array(src) && opts.length === 0) {\n        const float16bitsArray = getFloat16BitsArray(src);\n        const uint16 = new NativeUint16Array(\n          TypedArrayPrototypeGetBuffer(float16bitsArray),\n          TypedArrayPrototypeGetByteOffset(float16bitsArray),\n          TypedArrayPrototypeGetLength(float16bitsArray)\n        );\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(TypedArrayPrototypeSlice(uint16))\n        );\n      }\n\n      if (opts.length === 0) {\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(\n            Uint16ArrayFrom(src, roundToFloat16Bits)\n          )\n        );\n      }\n\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n\n      return new Float16Array(\n        TypedArrayPrototypeGetBuffer(\n          Uint16ArrayFrom(src, function (val, ...args) {\n            return roundToFloat16Bits(\n              ReflectApply(mapFunc, this, [val, ...safeIfNeeded(args)])\n            );\n          }, thisArg)\n        )\n      );\n    }\n\n    /** @type {ArrayLike<unknown>} */\n    let list;\n    /** @type {number} */\n    let length;\n\n    const iterator = src[SymbolIterator];\n    if (iterator != null && typeof iterator !== \"function\") {\n      throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n    }\n\n    if (iterator != null) { // Iterable (TypedArray, Array)\n      // for optimization\n      if (isOrdinaryArray(src)) {\n        list = src;\n        length = src.length;\n      } else if (isOrdinaryNativeTypedArray(src)) {\n        list = src;\n        length = TypedArrayPrototypeGetLength(src);\n      } else {\n        // eslint-disable-next-line no-restricted-syntax\n        list = [...src];\n        length = list.length;\n      }\n    } else { // ArrayLike\n      if (src == null) {\n        throw NativeTypeError(\n          CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n        );\n      }\n      list = NativeObject(src);\n      length = ToLength(list.length);\n    }\n\n    const array = new Constructor(length);\n\n    if (opts.length === 0) {\n      for (let i = 0; i < length; ++i) {\n        array[i] = /** @type {number} */ (list[i]);\n      }\n    } else {\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n      for (let i = 0; i < length; ++i) {\n        array[i] = ReflectApply(mapFunc, thisArg, [list[i], i]);\n      }\n    }\n\n    return array;\n  }\n\n  /**\n   * limitation: `Object.getOwnPropertyNames(Float16Array)` or `Reflect.ownKeys(Float16Array)` include this key\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.of\n   */\n  static of(...items) {\n    const Constructor = this;\n\n    if (!ReflectHas(Constructor, brand)) {\n      throw NativeTypeError(\n        THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n      );\n    }\n\n    const length = items.length;\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const float16bitsArray = getFloat16BitsArray(proxy);\n\n      for (let i = 0; i < length; ++i) {\n        float16bitsArray[i] = roundToFloat16Bits(items[i]);\n      }\n\n      return proxy;\n    }\n\n    const array = new Constructor(length);\n\n    for (let i = 0; i < length; ++i) {\n      array[i] = items[i];\n    }\n\n    return array;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys */\n  keys() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    return TypedArrayPrototypeKeys(float16bitsArray);\n  }\n\n  /**\n   * limitation: returns a object whose prototype is not `%ArrayIteratorPrototype%`\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.values\n   */\n  values() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    return wrap((function* () {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const val of TypedArrayPrototypeValues(float16bitsArray)) {\n        yield convertToNumber(val);\n      }\n    })());\n  }\n\n  /**\n   * limitation: returns a object whose prototype is not `%ArrayIteratorPrototype%`\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries\n   */\n  entries() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    return wrap((function* () {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const [i, val] of TypedArrayPrototypeEntries(float16bitsArray)) {\n        yield /** @type {[number, number]} */ ([i, convertToNumber(val)]);\n      }\n    })());\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.at */\n  at(index) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeIndex = ToIntegerOrInfinity(index);\n    const k = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n\n    if (k < 0 || k >= length) {\n      return;\n    }\n\n    return convertToNumber(float16bitsArray[k]);\n  }\n\n  /** @see https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with */\n  with(index, value) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeIndex = ToIntegerOrInfinity(index);\n    const k = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n\n    const number = +value;\n\n    if (k < 0 || k >= length) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n\n    // don't use SpeciesConstructor\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const cloned = new Float16Array(\n      TypedArrayPrototypeGetBuffer(\n        TypedArrayPrototypeSlice(uint16)\n      )\n    );\n    const array = getFloat16BitsArray(cloned);\n\n    array[k] = roundToFloat16Bits(number);\n\n    return cloned;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.map */\n  map(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const array = getFloat16BitsArray(proxy);\n\n      for (let i = 0; i < length; ++i) {\n        const val = convertToNumber(float16bitsArray[i]);\n        array[i] = roundToFloat16Bits(\n          ReflectApply(callback, thisArg, [val, i, this])\n        );\n      }\n\n      return proxy;\n    }\n\n    const array = new Constructor(length);\n    assertSpeciesTypedArray(array, length);\n\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(float16bitsArray[i]);\n      array[i] = ReflectApply(callback, thisArg, [val, i, this]);\n    }\n\n    return /** @type {any} */ (array);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter */\n  filter(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    const kept = [];\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [val, i, this])) {\n        ArrayPrototypePush(kept, val);\n      }\n    }\n\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    const array = new Constructor(kept);\n    assertSpeciesTypedArray(array);\n\n    return /** @type {any} */ (array);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce */\n  reduce(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    if (length === 0 && opts.length === 0) {\n      throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n    }\n\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(float16bitsArray[0]);\n      start = 1;\n    } else {\n      accumulator = opts[0];\n      start = 0;\n    }\n\n    for (let i = start; i < length; ++i) {\n      accumulator = callback(\n        accumulator,\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this\n      );\n    }\n\n    return accumulator;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright */\n  reduceRight(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    if (length === 0 && opts.length === 0) {\n      throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n    }\n\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(float16bitsArray[length - 1]);\n      start = length - 2;\n    } else {\n      accumulator = opts[0];\n      start = length - 1;\n    }\n\n    for (let i = start; i >= 0; --i) {\n      accumulator = callback(\n        accumulator,\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this\n      );\n    }\n\n    return accumulator;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach */\n  forEach(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      ReflectApply(callback, thisArg, [\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this,\n      ]);\n    }\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.find */\n  find(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return value;\n      }\n    }\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex */\n  findIndex(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/proposal-array-find-from-last/index.html#sec-%typedarray%.prototype.findlast */\n  findLast(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return value;\n      }\n    }\n  }\n\n  /** @see https://tc39.es/proposal-array-find-from-last/index.html#sec-%typedarray%.prototype.findlastindex */\n  findLastIndex(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.every */\n  every(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      if (\n        !ReflectApply(callback, thisArg, [\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this,\n        ])\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.some */\n  some(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      if (\n        ReflectApply(callback, thisArg, [\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this,\n        ])\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.set */\n  set(input, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const targetOffset = ToIntegerOrInfinity(opts[0]);\n    if (targetOffset < 0) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n\n    if (input == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n\n    if (isNativeBigIntTypedArray(input)) {\n      throw NativeTypeError(\n        CANNOT_MIX_BIGINT_AND_OTHER_TYPES\n      );\n    }\n\n    // for optimization\n    if (isFloat16Array(input)) {\n      // peel off Proxy\n      return TypedArrayPrototypeSet(\n        getFloat16BitsArray(this),\n        getFloat16BitsArray(input),\n        targetOffset\n      );\n    }\n\n    if (isNativeTypedArray(input)) {\n      const buffer = TypedArrayPrototypeGetBuffer(input);\n      if (IsDetachedBuffer(buffer)) {\n        throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n      }\n    }\n\n    const targetLength = TypedArrayPrototypeGetLength(float16bitsArray);\n\n    const src = NativeObject(input);\n    const srcLength = ToLength(src.length);\n\n    if (targetOffset === Infinity || srcLength + targetOffset > targetLength) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n\n    for (let i = 0; i < srcLength; ++i) {\n      float16bitsArray[i + targetOffset] = roundToFloat16Bits(src[i]);\n    }\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse */\n  reverse() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    TypedArrayPrototypeReverse(float16bitsArray);\n\n    return this;\n  }\n\n  /** @see https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toReversed */\n  toReversed() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    // don't use SpeciesConstructor\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const cloned = new Float16Array(\n      TypedArrayPrototypeGetBuffer(\n        TypedArrayPrototypeSlice(uint16)\n      )\n    );\n\n    const clonedFloat16bitsArray = getFloat16BitsArray(cloned);\n    TypedArrayPrototypeReverse(clonedFloat16bitsArray);\n\n    return cloned;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill */\n  fill(value, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    TypedArrayPrototypeFill(\n      float16bitsArray,\n      roundToFloat16Bits(value),\n      ...safeIfNeeded(opts)\n    );\n\n    return this;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin */\n  copyWithin(target, start, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    TypedArrayPrototypeCopyWithin(float16bitsArray, target, start, ...safeIfNeeded(opts));\n\n    return this;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort */\n  sort(compareFn) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const sortCompare = compareFn !== undefined ? compareFn : defaultCompare;\n    TypedArrayPrototypeSort(float16bitsArray, (x, y) => {\n      return sortCompare(convertToNumber(x), convertToNumber(y));\n    });\n\n    return this;\n  }\n\n  /** @see https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toSorted */\n  toSorted(compareFn) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    if (compareFn !== undefined && typeof compareFn !== \"function\") {\n      throw new NativeTypeError(THE_COMPARISON_FUNCTION_MUST_BE_EITHER_A_FUNCTION_OR_UNDEFINED);\n    }\n    const sortCompare = compareFn !== undefined ? compareFn : defaultCompare;\n\n    // don't use SpeciesConstructor\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const cloned = new Float16Array(\n      TypedArrayPrototypeGetBuffer(\n        TypedArrayPrototypeSlice(uint16)\n      )\n    );\n\n    const clonedFloat16bitsArray = getFloat16BitsArray(cloned);\n    TypedArrayPrototypeSort(clonedFloat16bitsArray, (x, y) => {\n      return sortCompare(convertToNumber(x), convertToNumber(y));\n    });\n\n    return cloned;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice */\n  slice(start, end) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      const uint16 = new NativeUint16Array(\n        TypedArrayPrototypeGetBuffer(float16bitsArray),\n        TypedArrayPrototypeGetByteOffset(float16bitsArray),\n        TypedArrayPrototypeGetLength(float16bitsArray)\n      );\n      return new Float16Array(\n        TypedArrayPrototypeGetBuffer(\n          TypedArrayPrototypeSlice(uint16, start, end)\n        )\n      );\n    }\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeStart = ToIntegerOrInfinity(start);\n    const relativeEnd = end === undefined ? length : ToIntegerOrInfinity(end);\n\n    let k;\n    if (relativeStart === -Infinity) {\n      k = 0;\n    } else if (relativeStart < 0) {\n      k = length + relativeStart > 0 ? length + relativeStart : 0;\n    } else {\n      k = length < relativeStart ? length : relativeStart;\n    }\n\n    let final;\n    if (relativeEnd === -Infinity) {\n      final = 0;\n    } else if (relativeEnd < 0) {\n      final = length + relativeEnd > 0 ? length + relativeEnd : 0;\n    } else {\n      final = length < relativeEnd ? length : relativeEnd;\n    }\n\n    const count = final - k > 0 ? final - k : 0;\n    const array = new Constructor(count);\n    assertSpeciesTypedArray(array, count);\n\n    if (count === 0) {\n      return array;\n    }\n\n    const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n    if (IsDetachedBuffer(buffer)) {\n      throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n    }\n\n    let n = 0;\n    while (k < final) {\n      array[n] = convertToNumber(float16bitsArray[k]);\n      ++k;\n      ++n;\n    }\n\n    return /** @type {any} */ (array);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray */\n  subarray(begin, end) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const uint16Subarray = TypedArrayPrototypeSubarray(uint16, begin, end);\n\n    const array = new Constructor(\n      TypedArrayPrototypeGetBuffer(uint16Subarray),\n      TypedArrayPrototypeGetByteOffset(uint16Subarray),\n      TypedArrayPrototypeGetLength(uint16Subarray)\n    );\n    assertSpeciesTypedArray(array);\n\n    return /** @type {any} */ (array);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof */\n  indexOf(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return -1;\n    }\n\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n\n    for (let i = from; i < length; ++i) {\n      if (\n        ObjectHasOwn(float16bitsArray, i) &&\n        convertToNumber(float16bitsArray[i]) === element\n      ) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof */\n  lastIndexOf(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n\n    let from = opts.length >= 1 ? ToIntegerOrInfinity(opts[0]) : length - 1;\n    if (from === -Infinity) {\n      return -1;\n    }\n\n    if (from >= 0) {\n      from = from < length - 1 ? from : length - 1;\n    } else {\n      from += length;\n    }\n\n    for (let i = from; i >= 0; --i) {\n      if (\n        ObjectHasOwn(float16bitsArray, i) &&\n        convertToNumber(float16bitsArray[i]) === element\n      ) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes */\n  includes(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return false;\n    }\n\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n\n    const isNaN = NumberIsNaN(element);\n    for (let i = from; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n\n      if (isNaN && NumberIsNaN(value)) {\n        return true;\n      }\n\n      if (value === element) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.join */\n  join(separator) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const array = copyToArray(float16bitsArray);\n\n    return ArrayPrototypeJoin(array, separator);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring */\n  toLocaleString(...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n\n    const array = copyToArray(float16bitsArray);\n\n    return ArrayPrototypeToLocaleString(array, ...safeIfNeeded(opts));\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag */\n  get [SymbolToStringTag]() {\n    if (isFloat16Array(this)) {\n      return /** @type {any} */ (\"Float16Array\");\n    }\n  }\n}\n\n/** @see https://tc39.es/ecma262/#sec-typedarray.bytes_per_element */\nObjectDefineProperty(Float16Array, \"BYTES_PER_ELEMENT\", {\n  value: BYTES_PER_ELEMENT,\n});\n\n// limitation: It is peaked by `Object.getOwnPropertySymbols(Float16Array)` and `Reflect.ownKeys(Float16Array)`\nObjectDefineProperty(Float16Array, brand, {});\n\n/** @see https://tc39.es/ecma262/#sec-properties-of-the-typedarray-constructors */\nReflectSetPrototypeOf(Float16Array, TypedArray);\n\nconst Float16ArrayPrototype = Float16Array.prototype;\n\n/** @see https://tc39.es/ecma262/#sec-typedarray.prototype.bytes_per_element */\nObjectDefineProperty(Float16ArrayPrototype, \"BYTES_PER_ELEMENT\", {\n  value: BYTES_PER_ELEMENT,\n});\n\n/** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator */\nObjectDefineProperty(Float16ArrayPrototype, SymbolIterator, {\n  value: Float16ArrayPrototype.values,\n  writable: true,\n  configurable: true,\n});\n\nReflectSetPrototypeOf(Float16ArrayPrototype, TypedArrayPrototype);\n", "import { safeIfNeeded } from \"./_util/arrayIterator.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_util/converter.mjs\";\nimport {\n  DataViewPrototypeGetUint16,\n  DataViewPrototypeSetUint16,\n} from \"./_util/primordials.mjs\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n  return convertToNumber(\n    DataViewPrototypeGetUint16(dataView, byteOffset, ...safeIfNeeded(opts))\n  );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n  return DataViewPrototypeSetUint16(\n    dataView,\n    byteOffset,\n    roundToFloat16Bits(value),\n    ...safeIfNeeded(opts)\n  );\n}\n", "/** @module geotiffimage */\nimport { getFloat16 } from '@petamoriken/float16';\nimport getAttribute from 'xml-utils/get-attribute.js';\nimport findTagsByName from 'xml-utils/find-tags-by-name.js';\n\nimport { photometricInterpretations, ExtraSamplesValues } from './globals.js';\nimport { fromWhiteIsZero, fromBlackIsZero, fromPalette, fromCMYK, fromYCbCr, fromCIELab } from './rgb.js';\nimport { getDecoder } from './compression/index.js';\nimport { resample, resampleInterleaved } from './resample.js';\n\n/**\n * @typedef {Object} ReadRasterOptions\n * @property {Array<number>} [window=whole window] the subset to read data from in pixels.\n * @property {Array<number>} [bbox=whole image] the subset to read data from in\n *                                           geographical coordinates.\n * @property {Array<number>} [samples=all samples] the selection of samples to read from. Default is all samples.\n * @property {boolean} [interleave=false] whether the data shall be read\n *                                             in one single array or separate\n *                                             arrays.\n * @property {Pool} [pool=null] The optional decoder pool to use.\n * @property {number} [width] The desired width of the output. When the width is not the\n *                                 same as the images, resampling will be performed.\n * @property {number} [height] The desired height of the output. When the width is not the\n *                                  same as the images, resampling will be performed.\n * @property {string} [resampleMethod='nearest'] The desired resampling method.\n * @property {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                                       to be aborted\n * @property {number|number[]} [fillValue] The value to use for parts of the image\n *                                              outside of the images extent. When multiple\n *                                              samples are requested, an array of fill values\n *                                              can be passed.\n */\n\n/** @typedef {import(\"./geotiff.js\").TypedArray} TypedArray */\n/** @typedef {import(\"./geotiff.js\").ReadRasterResult} ReadRasterResult */\n\nfunction sum(array, start, end) {\n  let s = 0;\n  for (let i = start; i < end; ++i) {\n    s += array[i];\n  }\n  return s;\n}\n\nfunction arrayForType(format, bitsPerSample, size) {\n  switch (format) {\n    case 1: // unsigned integer data\n      if (bitsPerSample <= 8) {\n        return new Uint8Array(size);\n      } else if (bitsPerSample <= 16) {\n        return new Uint16Array(size);\n      } else if (bitsPerSample <= 32) {\n        return new Uint32Array(size);\n      }\n      break;\n    case 2: // twos complement signed integer data\n      if (bitsPerSample === 8) {\n        return new Int8Array(size);\n      } else if (bitsPerSample === 16) {\n        return new Int16Array(size);\n      } else if (bitsPerSample === 32) {\n        return new Int32Array(size);\n      }\n      break;\n    case 3: // floating point data\n      switch (bitsPerSample) {\n        case 16:\n        case 32:\n          return new Float32Array(size);\n        case 64:\n          return new Float64Array(size);\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  throw Error('Unsupported data format/bitsPerSample');\n}\n\nfunction needsNormalization(format, bitsPerSample) {\n  if ((format === 1 || format === 2) && bitsPerSample <= 32 && bitsPerSample % 8 === 0) {\n    return false;\n  } else if (format === 3 && (bitsPerSample === 16 || bitsPerSample === 32 || bitsPerSample === 64)) {\n    return false;\n  }\n  return true;\n}\n\nfunction normalizeArray(inBuffer, format, planarConfiguration, samplesPerPixel, bitsPerSample, tileWidth, tileHeight) {\n  // const inByteArray = new Uint8Array(inBuffer);\n  const view = new DataView(inBuffer);\n  const outSize = planarConfiguration === 2\n    ? tileHeight * tileWidth\n    : tileHeight * tileWidth * samplesPerPixel;\n  const samplesToTransfer = planarConfiguration === 2\n    ? 1 : samplesPerPixel;\n  const outArray = arrayForType(format, bitsPerSample, outSize);\n  // let pixel = 0;\n\n  const bitMask = parseInt('1'.repeat(bitsPerSample), 2);\n\n  if (format === 1) { // unsigned integer\n    // translation of https://github.com/OSGeo/gdal/blob/master/gdal/frmts/gtiff/geotiff.cpp#L7337\n    let pixelBitSkip;\n    // let sampleBitOffset = 0;\n    if (planarConfiguration === 1) {\n      pixelBitSkip = samplesPerPixel * bitsPerSample;\n      // sampleBitOffset = (samplesPerPixel - 1) * bitsPerSample;\n    } else {\n      pixelBitSkip = bitsPerSample;\n    }\n\n    // Bits per line rounds up to next byte boundary.\n    let bitsPerLine = tileWidth * pixelBitSkip;\n    if ((bitsPerLine & 7) !== 0) {\n      bitsPerLine = (bitsPerLine + 7) & (~7);\n    }\n\n    for (let y = 0; y < tileHeight; ++y) {\n      const lineBitOffset = y * bitsPerLine;\n      for (let x = 0; x < tileWidth; ++x) {\n        const pixelBitOffset = lineBitOffset + (x * samplesToTransfer * bitsPerSample);\n        for (let i = 0; i < samplesToTransfer; ++i) {\n          const bitOffset = pixelBitOffset + (i * bitsPerSample);\n          const outIndex = (((y * tileWidth) + x) * samplesToTransfer) + i;\n\n          const byteOffset = Math.floor(bitOffset / 8);\n          const innerBitOffset = bitOffset % 8;\n          if (innerBitOffset + bitsPerSample <= 8) {\n            outArray[outIndex] = (view.getUint8(byteOffset) >> (8 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 16) {\n            outArray[outIndex] = (view.getUint16(byteOffset) >> (16 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 24) {\n            const raw = (view.getUint16(byteOffset) << 8) | (view.getUint8(byteOffset + 2));\n            outArray[outIndex] = (raw >> (24 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else {\n            outArray[outIndex] = (view.getUint32(byteOffset) >> (32 - bitsPerSample) - innerBitOffset) & bitMask;\n          }\n\n          // let outWord = 0;\n          // for (let bit = 0; bit < bitsPerSample; ++bit) {\n          //   if (inByteArray[bitOffset >> 3]\n          //     & (0x80 >> (bitOffset & 7))) {\n          //     outWord |= (1 << (bitsPerSample - 1 - bit));\n          //   }\n          //   ++bitOffset;\n          // }\n\n          // outArray[outIndex] = outWord;\n          // outArray[pixel] = outWord;\n          // pixel += 1;\n        }\n        // bitOffset = bitOffset + pixelBitSkip - bitsPerSample;\n      }\n    }\n  } else if (format === 3) { // floating point\n    // Float16 is handled elsewhere\n    // normalize 16/24 bit floats to 32 bit floats in the array\n    // console.time();\n    // if (bitsPerSample === 16) {\n    //   for (let byte = 0, outIndex = 0; byte < inBuffer.byteLength; byte += 2, ++outIndex) {\n    //     outArray[outIndex] = getFloat16(view, byte);\n    //   }\n    // }\n    // console.timeEnd()\n  }\n\n  return outArray.buffer;\n}\n\n/**\n * GeoTIFF sub-file image.\n */\nclass GeoTIFFImage {\n  /**\n   * @constructor\n   * @param {Object} fileDirectory The parsed file directory\n   * @param {Object} geoKeys The parsed geo-keys\n   * @param {DataView} dataView The DataView for the underlying file.\n   * @param {Boolean} littleEndian Whether the file is encoded in little or big endian\n   * @param {Boolean} cache Whether or not decoded tiles shall be cached\n   * @param {import('./source/basesource').BaseSource} source The datasource to read from\n   */\n  constructor(fileDirectory, geoKeys, dataView, littleEndian, cache, source) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeys = geoKeys;\n    this.dataView = dataView;\n    this.littleEndian = littleEndian;\n    this.tiles = cache ? {} : null;\n    this.isTiled = !fileDirectory.StripOffsets;\n    const planarConfiguration = fileDirectory.PlanarConfiguration;\n    this.planarConfiguration = (typeof planarConfiguration === 'undefined') ? 1 : planarConfiguration;\n    if (this.planarConfiguration !== 1 && this.planarConfiguration !== 2) {\n      throw new Error('Invalid planar configuration.');\n    }\n\n    this.source = source;\n  }\n\n  /**\n   * Returns the associated parsed file directory.\n   * @returns {Object} the parsed file directory\n   */\n  getFileDirectory() {\n    return this.fileDirectory;\n  }\n\n  /**\n   * Returns the associated parsed geo keys.\n   * @returns {Object} the parsed geo keys\n   */\n  getGeoKeys() {\n    return this.geoKeys;\n  }\n\n  /**\n   * Returns the width of the image.\n   * @returns {Number} the width of the image\n   */\n  getWidth() {\n    return this.fileDirectory.ImageWidth;\n  }\n\n  /**\n   * Returns the height of the image.\n   * @returns {Number} the height of the image\n   */\n  getHeight() {\n    return this.fileDirectory.ImageLength;\n  }\n\n  /**\n   * Returns the number of samples per pixel.\n   * @returns {Number} the number of samples per pixel\n   */\n  getSamplesPerPixel() {\n    return typeof this.fileDirectory.SamplesPerPixel !== 'undefined'\n      ? this.fileDirectory.SamplesPerPixel : 1;\n  }\n\n  /**\n   * Returns the width of each tile.\n   * @returns {Number} the width of each tile\n   */\n  getTileWidth() {\n    return this.isTiled ? this.fileDirectory.TileWidth : this.getWidth();\n  }\n\n  /**\n   * Returns the height of each tile.\n   * @returns {Number} the height of each tile\n   */\n  getTileHeight() {\n    if (this.isTiled) {\n      return this.fileDirectory.TileLength;\n    }\n    if (typeof this.fileDirectory.RowsPerStrip !== 'undefined') {\n      return Math.min(this.fileDirectory.RowsPerStrip, this.getHeight());\n    }\n    return this.getHeight();\n  }\n\n  getBlockWidth() {\n    return this.getTileWidth();\n  }\n\n  getBlockHeight(y) {\n    if (this.isTiled || (y + 1) * this.getTileHeight() <= this.getHeight()) {\n      return this.getTileHeight();\n    } else {\n      return this.getHeight() - (y * this.getTileHeight());\n    }\n  }\n\n  /**\n   * Calculates the number of bytes for each pixel across all samples. Only full\n   * bytes are supported, an exception is thrown when this is not the case.\n   * @returns {Number} the bytes per pixel\n   */\n  getBytesPerPixel() {\n    let bytes = 0;\n    for (let i = 0; i < this.fileDirectory.BitsPerSample.length; ++i) {\n      bytes += this.getSampleByteSize(i);\n    }\n    return bytes;\n  }\n\n  getSampleByteSize(i) {\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      throw new RangeError(`Sample index ${i} is out of range.`);\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n  }\n\n  getReaderForSample(sampleIndex) {\n    const format = this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n    const bitsPerSample = this.fileDirectory.BitsPerSample[sampleIndex];\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n  }\n\n  getSampleFormat(sampleIndex = 0) {\n    return this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n  }\n\n  getBitsPerSample(sampleIndex = 0) {\n    return this.fileDirectory.BitsPerSample[sampleIndex];\n  }\n\n  getArrayForSample(sampleIndex, size) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    return arrayForType(format, bitsPerSample, size);\n  }\n\n  /**\n   * Returns the decoded strip or tile.\n   * @param {Number} x the strip or tile x-offset\n   * @param {Number} y the tile y-offset (0 for stripped images)\n   * @param {Number} sample the sample to get for separated samples\n   * @param {import(\"./geotiff\").Pool|import(\"./geotiff\").BaseDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise.<ArrayBuffer>}\n   */\n  async getTileOrStrip(x, y, sample, poolOrDecoder, signal) {\n    const numTilesPerRow = Math.ceil(this.getWidth() / this.getTileWidth());\n    const numTilesPerCol = Math.ceil(this.getHeight() / this.getTileHeight());\n    let index;\n    const { tiles } = this;\n    if (this.planarConfiguration === 1) {\n      index = (y * numTilesPerRow) + x;\n    } else if (this.planarConfiguration === 2) {\n      index = (sample * numTilesPerRow * numTilesPerCol) + (y * numTilesPerRow) + x;\n    }\n\n    let offset;\n    let byteCount;\n    if (this.isTiled) {\n      offset = this.fileDirectory.TileOffsets[index];\n      byteCount = this.fileDirectory.TileByteCounts[index];\n    } else {\n      offset = this.fileDirectory.StripOffsets[index];\n      byteCount = this.fileDirectory.StripByteCounts[index];\n    }\n    const slice = (await this.source.fetch([{ offset, length: byteCount }], signal))[0];\n\n    let request;\n    if (tiles === null || !tiles[index]) {\n    // resolve each request by potentially applying array normalization\n      request = (async () => {\n        let data = await poolOrDecoder.decode(this.fileDirectory, slice);\n        const sampleFormat = this.getSampleFormat();\n        const bitsPerSample = this.getBitsPerSample();\n        if (needsNormalization(sampleFormat, bitsPerSample)) {\n          data = normalizeArray(\n            data,\n            sampleFormat,\n            this.planarConfiguration,\n            this.getSamplesPerPixel(),\n            bitsPerSample,\n            this.getTileWidth(),\n            this.getBlockHeight(y),\n          );\n        }\n        return data;\n      })();\n\n      // set the cache\n      if (tiles !== null) {\n        tiles[index] = request;\n      }\n    } else {\n      // get from the cache\n      request = tiles[index];\n    }\n\n    // cache the tile request\n    return { x, y, sample, data: await request };\n  }\n\n  /**\n   * Internal read function.\n   * @private\n   * @param {Array} imageWindow The image window in pixel coordinates\n   * @param {Array} samples The selected samples (0-based indices)\n   * @param {TypedArray|TypedArray[]} valueArrays The array(s) to write into\n   * @param {Boolean} interleave Whether or not to write in an interleaved manner\n   * @param {import(\"./geotiff\").Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {number} width the width of window to be read into\n   * @param {number} height the height of window to be read into\n   * @param {number} resampleMethod the resampling method to be used when interpolating\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise<ReadRasterResult>}\n   */\n  async _readRaster(imageWindow, samples, valueArrays, interleave, poolOrDecoder, width,\n    height, resampleMethod, signal) {\n    const tileWidth = this.getTileWidth();\n    const tileHeight = this.getTileHeight();\n    const imageWidth = this.getWidth();\n    const imageHeight = this.getHeight();\n\n    const minXTile = Math.max(Math.floor(imageWindow[0] / tileWidth), 0);\n    const maxXTile = Math.min(\n      Math.ceil(imageWindow[2] / tileWidth),\n      Math.ceil(imageWidth / tileWidth),\n    );\n    const minYTile = Math.max(Math.floor(imageWindow[1] / tileHeight), 0);\n    const maxYTile = Math.min(\n      Math.ceil(imageWindow[3] / tileHeight),\n      Math.ceil(imageHeight / tileHeight),\n    );\n    const windowWidth = imageWindow[2] - imageWindow[0];\n\n    let bytesPerPixel = this.getBytesPerPixel();\n\n    const srcSampleOffsets = [];\n    const sampleReaders = [];\n    for (let i = 0; i < samples.length; ++i) {\n      if (this.planarConfiguration === 1) {\n        srcSampleOffsets.push(sum(this.fileDirectory.BitsPerSample, 0, samples[i]) / 8);\n      } else {\n        srcSampleOffsets.push(0);\n      }\n      sampleReaders.push(this.getReaderForSample(samples[i]));\n    }\n\n    const promises = [];\n    const { littleEndian } = this;\n\n    for (let yTile = minYTile; yTile < maxYTile; ++yTile) {\n      for (let xTile = minXTile; xTile < maxXTile; ++xTile) {\n        let getPromise;\n        if (this.planarConfiguration === 1) {\n          getPromise = this.getTileOrStrip(xTile, yTile, 0, poolOrDecoder, signal);\n        }\n        for (let sampleIndex = 0; sampleIndex < samples.length; ++sampleIndex) {\n          const si = sampleIndex;\n          const sample = samples[sampleIndex];\n          if (this.planarConfiguration === 2) {\n            bytesPerPixel = this.getSampleByteSize(sample);\n            getPromise = this.getTileOrStrip(xTile, yTile, sample, poolOrDecoder, signal);\n          }\n          const promise = getPromise.then((tile) => {\n            const buffer = tile.data;\n            const dataView = new DataView(buffer);\n            const blockHeight = this.getBlockHeight(tile.y);\n            const firstLine = tile.y * tileHeight;\n            const firstCol = tile.x * tileWidth;\n            const lastLine = firstLine + blockHeight;\n            const lastCol = (tile.x + 1) * tileWidth;\n            const reader = sampleReaders[si];\n\n            const ymax = Math.min(blockHeight, blockHeight - (lastLine - imageWindow[3]), imageHeight - firstLine);\n            const xmax = Math.min(tileWidth, tileWidth - (lastCol - imageWindow[2]), imageWidth - firstCol);\n\n            for (let y = Math.max(0, imageWindow[1] - firstLine); y < ymax; ++y) {\n              for (let x = Math.max(0, imageWindow[0] - firstCol); x < xmax; ++x) {\n                const pixelOffset = ((y * tileWidth) + x) * bytesPerPixel;\n                const value = reader.call(\n                  dataView, pixelOffset + srcSampleOffsets[si], littleEndian,\n                );\n                let windowCoordinate;\n                if (interleave) {\n                  windowCoordinate = ((y + firstLine - imageWindow[1]) * windowWidth * samples.length)\n                    + ((x + firstCol - imageWindow[0]) * samples.length)\n                    + si;\n                  valueArrays[windowCoordinate] = value;\n                } else {\n                  windowCoordinate = (\n                    (y + firstLine - imageWindow[1]) * windowWidth\n                  ) + x + firstCol - imageWindow[0];\n                  valueArrays[si][windowCoordinate] = value;\n                }\n              }\n            }\n          });\n          promises.push(promise);\n        }\n      }\n    }\n    await Promise.all(promises);\n\n    if ((width && (imageWindow[2] - imageWindow[0]) !== width)\n        || (height && (imageWindow[3] - imageWindow[1]) !== height)) {\n      let resampled;\n      if (interleave) {\n        resampled = resampleInterleaved(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          samples.length,\n          resampleMethod,\n        );\n      } else {\n        resampled = resample(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          resampleMethod,\n        );\n      }\n      resampled.width = width;\n      resampled.height = height;\n      return resampled;\n    }\n\n    valueArrays.width = width || imageWindow[2] - imageWindow[0];\n    valueArrays.height = height || imageWindow[3] - imageWindow[1];\n\n    return valueArrays;\n  }\n\n  /**\n   * Reads raster data from the image. This function reads all selected samples\n   * into separate arrays of the correct type for that sample or into a single\n   * combined array when `interleave` is set. When provided, only a subset\n   * of the raster is read for each sample.\n   *\n   * @param {ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<ReadRasterResult>} the decoded arrays as a promise\n   */\n  async readRasters({\n    window: wnd, samples = [], interleave, pool = null,\n    width, height, resampleMethod, fillValue, signal,\n  } = {}) {\n    const imageWindow = wnd || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const imageWindowWidth = imageWindow[2] - imageWindow[0];\n    const imageWindowHeight = imageWindow[3] - imageWindow[1];\n    const numPixels = imageWindowWidth * imageWindowHeight;\n    const samplesPerPixel = this.getSamplesPerPixel();\n\n    if (!samples || !samples.length) {\n      for (let i = 0; i < samplesPerPixel; ++i) {\n        samples.push(i);\n      }\n    } else {\n      for (let i = 0; i < samples.length; ++i) {\n        if (samples[i] >= samplesPerPixel) {\n          return Promise.reject(new RangeError(`Invalid sample index '${samples[i]}'.`));\n        }\n      }\n    }\n    let valueArrays;\n    if (interleave) {\n      const format = this.fileDirectory.SampleFormat\n        ? Math.max.apply(null, this.fileDirectory.SampleFormat) : 1;\n      const bitsPerSample = Math.max.apply(null, this.fileDirectory.BitsPerSample);\n      valueArrays = arrayForType(format, bitsPerSample, numPixels * samples.length);\n      if (fillValue) {\n        valueArrays.fill(fillValue);\n      }\n    } else {\n      valueArrays = [];\n      for (let i = 0; i < samples.length; ++i) {\n        const valueArray = this.getArrayForSample(samples[i], numPixels);\n        if (Array.isArray(fillValue) && i < fillValue.length) {\n          valueArray.fill(fillValue[i]);\n        } else if (fillValue && !Array.isArray(fillValue)) {\n          valueArray.fill(fillValue);\n        }\n        valueArrays.push(valueArray);\n      }\n    }\n\n    const poolOrDecoder = pool || await getDecoder(this.fileDirectory);\n\n    const result = await this._readRaster(\n      imageWindow, samples, valueArrays, interleave, poolOrDecoder, width, height, resampleMethod, signal,\n    );\n    return result;\n  }\n\n  /**\n   * Reads raster data from the image as RGB. The result is always an\n   * interleaved typed array.\n   * Colorspaces other than RGB will be transformed to RGB, color maps expanded.\n   * When no other method is applicable, the first sample is used to produce a\n   * grayscale image.\n   * When provided, only a subset of the raster is read for each sample.\n   *\n   * @param {Object} [options] optional parameters\n   * @param {Array<number>} [options.window] the subset to read data from in pixels.\n   * @param {boolean} [options.interleave=true] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {import(\"./geotiff\").Pool} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is no the\n   *                                 same as the images, resampling will be performed.\n   * @param {number} [options.height] The desired height of the output. When the width is no the\n   *                                  same as the images, resampling will be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {boolean} [options.enableAlpha=false] Enable reading alpha channel if present.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise<ReadRasterResult>} the RGB array as a Promise\n   */\n  async readRGB({ window, interleave = true, pool = null, width, height,\n    resampleMethod, enableAlpha = false, signal } = {}) {\n    const imageWindow = window || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const pi = this.fileDirectory.PhotometricInterpretation;\n\n    if (pi === photometricInterpretations.RGB) {\n      let s = [0, 1, 2];\n      if ((!(this.fileDirectory.ExtraSamples === ExtraSamplesValues.Unspecified)) && enableAlpha) {\n        s = [];\n        for (let i = 0; i < this.fileDirectory.BitsPerSample.length; i += 1) {\n          s.push(i);\n        }\n      }\n      return this.readRasters({\n        window,\n        interleave,\n        samples: s,\n        pool,\n        width,\n        height,\n        resampleMethod,\n        signal,\n      });\n    }\n\n    let samples;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n      case photometricInterpretations.BlackIsZero:\n      case photometricInterpretations.Palette:\n        samples = [0];\n        break;\n      case photometricInterpretations.CMYK:\n        samples = [0, 1, 2, 3];\n        break;\n      case photometricInterpretations.YCbCr:\n      case photometricInterpretations.CIELab:\n        samples = [0, 1, 2];\n        break;\n      default:\n        throw new Error('Invalid or unsupported photometric interpretation.');\n    }\n\n    const subOptions = {\n      window: imageWindow,\n      interleave: true,\n      samples,\n      pool,\n      width,\n      height,\n      resampleMethod,\n      signal,\n    };\n    const { fileDirectory } = this;\n    const raster = await this.readRasters(subOptions);\n\n    const max = 2 ** this.fileDirectory.BitsPerSample[0];\n    let data;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n        data = fromWhiteIsZero(raster, max);\n        break;\n      case photometricInterpretations.BlackIsZero:\n        data = fromBlackIsZero(raster, max);\n        break;\n      case photometricInterpretations.Palette:\n        data = fromPalette(raster, fileDirectory.ColorMap);\n        break;\n      case photometricInterpretations.CMYK:\n        data = fromCMYK(raster);\n        break;\n      case photometricInterpretations.YCbCr:\n        data = fromYCbCr(raster);\n        break;\n      case photometricInterpretations.CIELab:\n        data = fromCIELab(raster);\n        break;\n      default:\n        throw new Error('Unsupported photometric interpretation.');\n    }\n\n    // if non-interleaved data is requested, we must split the channels\n    // into their respective arrays\n    if (!interleave) {\n      const red = new Uint8Array(data.length / 3);\n      const green = new Uint8Array(data.length / 3);\n      const blue = new Uint8Array(data.length / 3);\n      for (let i = 0, j = 0; i < data.length; i += 3, ++j) {\n        red[j] = data[i];\n        green[j] = data[i + 1];\n        blue[j] = data[i + 2];\n      }\n      data = [red, green, blue];\n    }\n\n    data.width = raster.width;\n    data.height = raster.height;\n    return data;\n  }\n\n  /**\n   * Returns an array of tiepoints.\n   * @returns {Object[]}\n   */\n  getTiePoints() {\n    if (!this.fileDirectory.ModelTiepoint) {\n      return [];\n    }\n\n    const tiePoints = [];\n    for (let i = 0; i < this.fileDirectory.ModelTiepoint.length; i += 6) {\n      tiePoints.push({\n        i: this.fileDirectory.ModelTiepoint[i],\n        j: this.fileDirectory.ModelTiepoint[i + 1],\n        k: this.fileDirectory.ModelTiepoint[i + 2],\n        x: this.fileDirectory.ModelTiepoint[i + 3],\n        y: this.fileDirectory.ModelTiepoint[i + 4],\n        z: this.fileDirectory.ModelTiepoint[i + 5],\n      });\n    }\n    return tiePoints;\n  }\n\n  /**\n   * Returns the parsed GDAL metadata items.\n   *\n   * If sample is passed to null, dataset-level metadata will be returned.\n   * Otherwise only metadata specific to the provided sample will be returned.\n   *\n   * @param {number} [sample=null] The sample index.\n   * @returns {Object}\n   */\n  getGDALMetadata(sample = null) {\n    const metadata = {};\n    if (!this.fileDirectory.GDAL_METADATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_METADATA;\n\n    let items = findTagsByName(string, 'Item');\n\n    if (sample === null) {\n      items = items.filter((item) => getAttribute(item, 'sample') === undefined);\n    } else {\n      items = items.filter((item) => Number(getAttribute(item, 'sample')) === sample);\n    }\n\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      metadata[getAttribute(item, 'name')] = item.inner;\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the GDAL nodata value\n   * @returns {number|null}\n   */\n  getGDALNoData() {\n    if (!this.fileDirectory.GDAL_NODATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_NODATA;\n    return Number(string.substring(0, string.length - 1));\n  }\n\n  /**\n   * Returns the image origin as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @returns {Array<number>} The origin as a vector\n   */\n  getOrigin() {\n    const tiePoints = this.fileDirectory.ModelTiepoint;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n    if (tiePoints && tiePoints.length === 6) {\n      return [\n        tiePoints[3],\n        tiePoints[4],\n        tiePoints[5],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[3],\n        modelTransformation[7],\n        modelTransformation[11],\n      ];\n    }\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns the image resolution as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @param {GeoTIFFImage} [referenceImage=null] A reference image to calculate the resolution from\n   *                                             in cases when the current image does not have the\n   *                                             required tags on its own.\n   * @returns {Array<number>} The resolution as a vector\n   */\n  getResolution(referenceImage = null) {\n    const modelPixelScale = this.fileDirectory.ModelPixelScale;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n\n    if (modelPixelScale) {\n      return [\n        modelPixelScale[0],\n        -modelPixelScale[1],\n        modelPixelScale[2],\n      ];\n    }\n    if (modelTransformation) {\n      if (modelTransformation[1] === 0 && modelTransformation[4] === 0) {\n        return [\n          modelTransformation[0],\n          -modelTransformation[5],\n          modelTransformation[10],\n        ];\n      }\n      return [\n        Math.sqrt((modelTransformation[0] * modelTransformation[0])\n          + (modelTransformation[4] * modelTransformation[4])),\n        -Math.sqrt((modelTransformation[1] * modelTransformation[1])\n          + (modelTransformation[5] * modelTransformation[5])),\n        modelTransformation[10]];\n    }\n\n    if (referenceImage) {\n      const [refResX, refResY, refResZ] = referenceImage.getResolution();\n      return [\n        refResX * referenceImage.getWidth() / this.getWidth(),\n        refResY * referenceImage.getHeight() / this.getHeight(),\n        refResZ * referenceImage.getWidth() / this.getWidth(),\n      ];\n    }\n\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns whether or not the pixels of the image depict an area (or point).\n   * @returns {Boolean} Whether the pixels are a point\n   */\n  pixelIsArea() {\n    return this.geoKeys.GTRasterTypeGeoKey === 1;\n  }\n\n  /**\n   * Returns the image bounding box as an array of 4 values: min-x, min-y,\n   * max-x and max-y. When the image has no affine transformation, then an\n   * exception is thrown.\n   * @param {boolean} [tilegrid=false] If true return extent for a tilegrid\n   *                                   without adjustment for ModelTransformation.\n   * @returns {Array<number>} The bounding box\n   */\n  getBoundingBox(tilegrid = false) {\n    const height = this.getHeight();\n    const width = this.getWidth();\n\n    if (this.fileDirectory.ModelTransformation && !tilegrid) {\n      // eslint-disable-next-line no-unused-vars\n      const [a, b, c, d, e, f, g, h] = this.fileDirectory.ModelTransformation;\n\n      const corners = [\n        [0, 0],\n        [0, height],\n        [width, 0],\n        [width, height],\n      ];\n\n      const projected = corners.map(([I, J]) => [\n        d + (a * I) + (b * J),\n        h + (e * I) + (f * J),\n      ]);\n\n      const xs = projected.map((pt) => pt[0]);\n      const ys = projected.map((pt) => pt[1]);\n\n      return [\n        Math.min(...xs),\n        Math.min(...ys),\n        Math.max(...xs),\n        Math.max(...ys),\n      ];\n    } else {\n      const origin = this.getOrigin();\n      const resolution = this.getResolution();\n\n      const x1 = origin[0];\n      const y1 = origin[1];\n\n      const x2 = x1 + (resolution[0] * width);\n      const y2 = y1 + (resolution[1] * height);\n\n      return [\n        Math.min(x1, x2),\n        Math.min(y1, y2),\n        Math.max(x1, x2),\n        Math.max(y1, y2),\n      ];\n    }\n  }\n}\n\nexport default GeoTIFFImage;\n", "export function fromWhiteIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = 256 - (raster[i] / max * 256);\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromBlackIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = raster[i] / max * 256;\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromPalette(raster, colorMap) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  const greenOffset = colorMap.length / 3;\n  const blueOffset = colorMap.length / 3 * 2;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    const mapIndex = raster[i];\n    rgbRaster[j] = colorMap[mapIndex] / 65536 * 256;\n    rgbRaster[j + 1] = colorMap[mapIndex + greenOffset] / 65536 * 256;\n    rgbRaster[j + 2] = colorMap[mapIndex + blueOffset] / 65536 * 256;\n  }\n  return rgbRaster;\n}\n\nexport function fromCMYK(cmykRaster) {\n  const { width, height } = cmykRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  for (let i = 0, j = 0; i < cmykRaster.length; i += 4, j += 3) {\n    const c = cmykRaster[i];\n    const m = cmykRaster[i + 1];\n    const y = cmykRaster[i + 2];\n    const k = cmykRaster[i + 3];\n\n    rgbRaster[j] = 255 * ((255 - c) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 1] = 255 * ((255 - m) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 2] = 255 * ((255 - y) / 256) * ((255 - k) / 256);\n  }\n  return rgbRaster;\n}\n\nexport function fromYCbCr(yCbCrRaster) {\n  const { width, height } = yCbCrRaster;\n  const rgbRaster = new Uint8ClampedArray(width * height * 3);\n  for (let i = 0, j = 0; i < yCbCrRaster.length; i += 3, j += 3) {\n    const y = yCbCrRaster[i];\n    const cb = yCbCrRaster[i + 1];\n    const cr = yCbCrRaster[i + 2];\n\n    rgbRaster[j] = (y + (1.40200 * (cr - 0x80)));\n    rgbRaster[j + 1] = (y - (0.34414 * (cb - 0x80)) - (0.71414 * (cr - 0x80)));\n    rgbRaster[j + 2] = (y + (1.77200 * (cb - 0x80)));\n  }\n  return rgbRaster;\n}\n\nconst Xn = 0.95047;\nconst Yn = 1.00000;\nconst Zn = 1.08883;\n\n// from https://github.com/antimatter15/rgb-lab/blob/master/color.js\n\nexport function fromCIELab(cieLabRaster) {\n  const { width, height } = cieLabRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n\n  for (let i = 0, j = 0; i < cieLabRaster.length; i += 3, j += 3) {\n    const L = cieLabRaster[i + 0];\n    const a_ = cieLabRaster[i + 1] << 24 >> 24; // conversion from uint8 to int8\n    const b_ = cieLabRaster[i + 2] << 24 >> 24; // same\n\n    let y = (L + 16) / 116;\n    let x = (a_ / 500) + y;\n    let z = y - (b_ / 200);\n    let r;\n    let g;\n    let b;\n\n    x = Xn * ((x * x * x > 0.008856) ? x * x * x : (x - (16 / 116)) / 7.787);\n    y = Yn * ((y * y * y > 0.008856) ? y * y * y : (y - (16 / 116)) / 7.787);\n    z = Zn * ((z * z * z > 0.008856) ? z * z * z : (z - (16 / 116)) / 7.787);\n\n    r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n    g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n    b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n    r = (r > 0.0031308) ? ((1.055 * (r ** (1 / 2.4))) - 0.055) : 12.92 * r;\n    g = (g > 0.0031308) ? ((1.055 * (g ** (1 / 2.4))) - 0.055) : 12.92 * g;\n    b = (b > 0.0031308) ? ((1.055 * (b ** (1 / 2.4))) - 0.055) : 12.92 * b;\n\n    rgbRaster[j] = Math.max(0, Math.min(1, r)) * 255;\n    rgbRaster[j + 1] = Math.max(0, Math.min(1, g)) * 255;\n    rgbRaster[j + 2] = Math.max(0, Math.min(1, b)) * 255;\n  }\n  return rgbRaster;\n}\n", "const registry = new Map();\n\nexport function addDecoder(cases, importFn) {\n  if (!Array.isArray(cases)) {\n    cases = [cases]; // eslint-disable-line no-param-reassign\n  }\n  cases.forEach((c) => registry.set(c, importFn));\n}\n\nexport async function getDecoder(fileDirectory) {\n  const importFn = registry.get(fileDirectory.Compression);\n  if (!importFn) {\n    throw new Error(`Unknown compression method identifier: ${fileDirectory.Compression}`);\n  }\n  const Decoder = await importFn();\n  return new Decoder(fileDirectory);\n}\n\n// Add default decoders to registry (end-user may override with other implementations)\naddDecoder([undefined, 1], () => import('./raw.js').then((m) => m.default));\naddDecoder(5, () => import('./lzw.js').then((m) => m.default));\naddDecoder(6, () => {\n  throw new Error('old style JPEG compression is not supported.');\n});\naddDecoder(7, () => import('./jpeg.js').then((m) => m.default));\naddDecoder([8, 32946], () => import('./deflate.js').then((m) => m.default));\naddDecoder(32773, () => import('./packbits.js').then((m) => m.default));\naddDecoder(34887, () => import('./lerc.js')\n  .then(async (m) => {\n    await m.zstd.init();\n    return m;\n  })\n  .then((m) => m.default),\n);\naddDecoder(50001, () => import('./webimage.js').then((m) => m.default));\n", "/**\n * @module resample\n */\n\nfunction copyNewSize(array, width, height, samplesPerPixel = 1) {\n  return new (Object.getPrototypeOf(array).constructor)(width * height * samplesPerPixel);\n}\n\n/**\n * Resample the input arrays using nearest neighbor value selection.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const cy = Math.min(Math.round(relY * y), inHeight - 1);\n      for (let x = 0; x < outWidth; ++x) {\n        const cx = Math.min(Math.round(relX * x), inWidth - 1);\n        const value = array[(cy * inWidth) + cx];\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n// simple linear interpolation, code from:\n// https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\nfunction lerp(v0, v1, t) {\n  return ((1 - t) * v0) + (t * v1);\n}\n\n/**\n * Resample the input arrays using bilinear interpolation.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const rawY = relY * y;\n\n      const yl = Math.floor(rawY);\n      const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n      for (let x = 0; x < outWidth; ++x) {\n        const rawX = relX * x;\n        const tx = rawX % 1;\n\n        const xl = Math.floor(rawX);\n        const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n        const ll = array[(yl * inWidth) + xl];\n        const hl = array[(yl * inWidth) + xh];\n        const lh = array[(yh * inWidth) + xl];\n        const hh = array[(yh * inWidth) + xh];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n/**\n * Resample the input arrays using the selected resampling method.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resample(valueArrays, inWidth, inHeight, outWidth, outHeight, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n\n/**\n * Resample the pixel interleaved input array using nearest neighbor value selection.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleNearestInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const cy = Math.min(Math.round(relY * y), inHeight - 1);\n    for (let x = 0; x < outWidth; ++x) {\n      const cx = Math.min(Math.round(relX * x), inWidth - 1);\n      for (let i = 0; i < samples; ++i) {\n        const value = valueArray[(cy * inWidth * samples) + (cx * samples) + i];\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using bilinear interpolation.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleBilinearInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const rawY = relY * y;\n\n    const yl = Math.floor(rawY);\n    const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n    for (let x = 0; x < outWidth; ++x) {\n      const rawX = relX * x;\n      const tx = rawX % 1;\n\n      const xl = Math.floor(rawX);\n      const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n      for (let i = 0; i < samples; ++i) {\n        const ll = valueArray[(yl * inWidth * samples) + (xl * samples) + i];\n        const hl = valueArray[(yl * inWidth * samples) + (xh * samples) + i];\n        const lh = valueArray[(yh * inWidth * samples) + (xl * samples) + i];\n        const hh = valueArray[(yh * inWidth * samples) + (xh * samples) + i];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using the selected resampling method.\n * @param {TypedArray} valueArray The input array to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                                 interleaved data\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray} The resampled rasters\n */\nexport function resampleInterleaved(valueArray, inWidth, inHeight, outWidth, outHeight, samples, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearestInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinearInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n", "import { getFloat16 } from '@petamoriken/float16';\n\nexport default class DataView64 {\n  constructor(arrayBuffer) {\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  getUint64(offset, littleEndian) {\n    const left = this.getUint32(offset, littleEndian);\n    const right = this.getUint32(offset + 4, littleEndian);\n    let combined;\n    if (littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  getInt64(offset, littleEndian) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  getUint8(offset, littleEndian) {\n    return this._dataView.getUint8(offset, littleEndian);\n  }\n\n  getInt8(offset, littleEndian) {\n    return this._dataView.getInt8(offset, littleEndian);\n  }\n\n  getUint16(offset, littleEndian) {\n    return this._dataView.getUint16(offset, littleEndian);\n  }\n\n  getInt16(offset, littleEndian) {\n    return this._dataView.getInt16(offset, littleEndian);\n  }\n\n  getUint32(offset, littleEndian) {\n    return this._dataView.getUint32(offset, littleEndian);\n  }\n\n  getInt32(offset, littleEndian) {\n    return this._dataView.getInt32(offset, littleEndian);\n  }\n\n  getFloat16(offset, littleEndian) {\n    return getFloat16(this._dataView, offset, littleEndian);\n  }\n\n  getFloat32(offset, littleEndian) {\n    return this._dataView.getFloat32(offset, littleEndian);\n  }\n\n  getFloat64(offset, littleEndian) {\n    return this._dataView.getFloat64(offset, littleEndian);\n  }\n}\n", "export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n", "import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n", "const CRLFCRLF = '\\r\\n\\r\\n';\n\n/*\n * Shim for 'Object.fromEntries'\n */\nfunction itemsToObject(items) {\n  if (typeof Object.fromEntries !== 'undefined') {\n    return Object.fromEntries(items);\n  }\n  const obj = {};\n  for (const [key, value] of items) {\n    obj[key.toLowerCase()] = value;\n  }\n  return obj;\n}\n\n/**\n * Parse HTTP headers from a given string.\n * @param {String} text the text to parse the headers from\n * @returns {Object} the parsed headers with lowercase keys\n */\nfunction parseHeaders(text) {\n  const items = text\n    .split('\\r\\n')\n    .map((line) => {\n      const kv = line.split(':').map((str) => str.trim());\n      kv[0] = kv[0].toLowerCase();\n      return kv;\n    });\n\n  return itemsToObject(items);\n}\n\n/**\n * Parse a 'Content-Type' header value to the content-type and parameters\n * @param {String} rawContentType the raw string to parse from\n * @returns {Object} the parsed content type with the fields: type and params\n */\nexport function parseContentType(rawContentType) {\n  const [type, ...rawParams] = rawContentType.split(';').map((s) => s.trim());\n  const paramsItems = rawParams.map((param) => param.split('='));\n  return { type, params: itemsToObject(paramsItems) };\n}\n\n/**\n * Parse a 'Content-Range' header value to its start, end, and total parts\n * @param {String} rawContentRange the raw string to parse from\n * @returns {Object} the parsed parts\n */\nexport function parseContentRange(rawContentRange) {\n  let start;\n  let end;\n  let total;\n\n  if (rawContentRange) {\n    [, start, end, total] = rawContentRange.match(/bytes (\\d+)-(\\d+)\\/(\\d+)/);\n    start = parseInt(start, 10);\n    end = parseInt(end, 10);\n    total = parseInt(total, 10);\n  }\n\n  return { start, end, total };\n}\n\n/**\n * Parses a list of byteranges from the given 'multipart/byteranges' HTTP response.\n * Each item in the list has the following properties:\n * - headers: the HTTP headers\n * - data: the sliced ArrayBuffer for that specific part\n * - offset: the offset of the byterange within its originating file\n * - length: the length of the byterange\n * @param {ArrayBuffer} responseArrayBuffer the response to be parsed and split\n * @param {String} boundary the boundary string used to split the sections\n * @returns {Object[]} the parsed byteranges\n */\nexport function parseByteRanges(responseArrayBuffer, boundary) {\n  let offset = null;\n  const decoder = new TextDecoder('ascii');\n  const out = [];\n\n  const startBoundary = `--${boundary}`;\n  const endBoundary = `${startBoundary}--`;\n\n  // search for the initial boundary, may be offset by some bytes\n  // TODO: more efficient to check for `--` in bytes directly\n  for (let i = 0; i < 10; ++i) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, i, startBoundary.length),\n    );\n    if (text === startBoundary) {\n      offset = i;\n    }\n  }\n\n  if (offset === null) {\n    throw new Error('Could not find initial boundary');\n  }\n\n  while (offset < responseArrayBuffer.byteLength) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, offset,\n        Math.min(startBoundary.length + 1024, responseArrayBuffer.byteLength - offset),\n      ),\n    );\n\n    // break if we arrived at the end\n    if (text.length === 0 || text.startsWith(endBoundary)) {\n      break;\n    }\n\n    // assert that we are actually dealing with a byterange and are at the correct offset\n    if (!text.startsWith(startBoundary)) {\n      throw new Error('Part does not start with boundary');\n    }\n\n    // get a substring from where we read the headers\n    const innerText = text.substr(startBoundary.length + 2);\n\n    if (innerText.length === 0) {\n      break;\n    }\n\n    // find the double linebreak that denotes the end of the headers\n    const endOfHeaders = innerText.indexOf(CRLFCRLF);\n\n    // parse the headers to get the content range size\n    const headers = parseHeaders(innerText.substr(0, endOfHeaders));\n    const { start, end, total } = parseContentRange(headers['content-range']);\n\n    // calculate the length of the slice and the next offset\n    const startOfData = offset + startBoundary.length + endOfHeaders + CRLFCRLF.length;\n    const length = parseInt(end, 10) + 1 - parseInt(start, 10);\n    out.push({\n      headers,\n      data: responseArrayBuffer.slice(startOfData, startOfData + length),\n      offset: start,\n      length,\n      fileSize: total,\n    });\n\n    offset = startOfData + length + 4;\n  }\n\n  return out;\n}\n", "/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n", "export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n", "export function assign(target, source) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nexport function chunk(iterable, length) {\n  const results = [];\n  const lengthOfIterable = iterable.length;\n  for (let i = 0; i < lengthOfIterable; i += length) {\n    const chunked = [];\n    for (let ci = i; ci < i + length; ci++) {\n      chunked.push(iterable[ci]);\n    }\n    results.push(chunked);\n  }\n  return results;\n}\n\nexport function endsWith(string, expectedEnding) {\n  if (string.length < expectedEnding.length) {\n    return false;\n  }\n  const actualEnding = string.substr(string.length - expectedEnding.length);\n  return actualEnding === expectedEnding;\n}\n\nexport function forEach(iterable, func) {\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    func(iterable[i], i);\n  }\n}\n\nexport function invert(oldObj) {\n  const newObj = {};\n  for (const key in oldObj) {\n    if (oldObj.hasOwnProperty(key)) {\n      const value = oldObj[key];\n      newObj[value] = key;\n    }\n  }\n  return newObj;\n}\n\nexport function range(n) {\n  const results = [];\n  for (let i = 0; i < n; i++) {\n    results.push(i);\n  }\n  return results;\n}\n\nexport function times(numTimes, func) {\n  const results = [];\n  for (let i = 0; i < numTimes; i++) {\n    results.push(func(i));\n  }\n  return results;\n}\n\nexport function toArray(iterable) {\n  const results = [];\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    results.push(iterable[i]);\n  }\n  return results;\n}\n\nexport function toArrayRecursively(input) {\n  if (input.length) {\n    return toArray(input).map(toArrayRecursively);\n  }\n  return input;\n}\n\n// copied from https://github.com/academia-de-codigo/parse-content-range-header/blob/master/index.js\nexport function parseContentRange(headerValue) {\n  if (!headerValue) {\n    return null;\n  }\n\n  if (typeof headerValue !== 'string') {\n    throw new Error('invalid argument');\n  }\n\n  const parseInt = (number) => Number.parseInt(number, 10);\n\n  // Check for presence of unit\n  let matches = headerValue.match(/^(\\w*) /);\n  const unit = matches && matches[1];\n\n  // check for start-end/size header format\n  matches = headerValue.match(/(\\d+)-(\\d+)\\/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: parseInt(matches[1]),\n      last: parseInt(matches[2]),\n      length: matches[3] === '*' ? null : parseInt(matches[3]),\n    };\n  }\n\n  // check for size header format\n  matches = headerValue.match(/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: null,\n      last: null,\n      length: matches[1] === '*' ? null : parseInt(matches[1]),\n    };\n  }\n\n  return null;\n}\n\n/*\n * Promisified wrapper around 'setTimeout' to allow 'await'\n */\nexport async function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function zip(a, b) {\n  const A = Array.isArray(a) ? a : Array.from(a);\n  const B = Array.isArray(b) ? b : Array.from(b);\n  return A.map((k, i) => [k, B[i]]);\n}\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class AbortError extends Error {\n  constructor(params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AbortError);\n    }\n\n    this.name = 'AbortError';\n  }\n}\n\nexport class CustomAggregateError extends Error {\n  constructor(errors, message) {\n    super(message);\n    this.errors = errors;\n    this.message = message;\n    this.name = 'AggregateError';\n  }\n}\n\nexport const AggregateError = CustomAggregateError;\n", "import QuickLRU from 'quick-lru';\nimport { BaseSource } from './basesource.js';\nimport { AbortError, AggregateError, wait, zip } from '../utils.js';\n\nclass Block {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {ArrayBuffer} [data]\n   */\n  constructor(offset, length, data = null) {\n    this.offset = offset;\n    this.length = length;\n    this.data = data;\n  }\n\n  /**\n   * @returns {number} the top byte border\n   */\n  get top() {\n    return this.offset + this.length;\n  }\n}\n\nclass BlockGroup {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {number[]} blockIds\n   */\n  constructor(offset, length, blockIds) {\n    this.offset = offset;\n    this.length = length;\n    this.blockIds = blockIds;\n  }\n}\n\nexport class BlockedSource extends BaseSource {\n  /**\n   *\n   * @param {BaseSource} source The underlying source that shall be blocked and cached\n   * @param {object} options\n   * @param {number} [options.blockSize]\n   * @param {number} [options.cacheSize]\n   */\n  constructor(source, { blockSize = 65536, cacheSize = 100 } = {}) {\n    super();\n    this.source = source;\n    this.blockSize = blockSize;\n\n    this.blockCache = new QuickLRU({\n      maxSize: cacheSize,\n      onEviction: (blockId, block) => {\n        this.evictedBlocks.set(blockId, block);\n      },\n    });\n\n    /** @type {Map<number, Block>} */\n    this.evictedBlocks = new Map();\n\n    // mapping blockId -> Block instance\n    this.blockRequests = new Map();\n\n    // set of blockIds missing for the current requests\n    this.blockIdsToFetch = new Set();\n\n    this.abortedBlockIds = new Set();\n  }\n\n  get fileSize() {\n    return this.source.fileSize;\n  }\n\n  /**\n   *\n   * @param {import(\"./basesource\").Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    const blockRequests = [];\n    const missingBlockIds = [];\n    const allBlockIds = [];\n    this.evictedBlocks.clear();\n\n    for (const { offset, length } of slices) {\n      let top = offset + length;\n\n      const { fileSize } = this;\n      if (fileSize !== null) {\n        top = Math.min(top, fileSize);\n      }\n\n      const firstBlockOffset = Math.floor(offset / this.blockSize) * this.blockSize;\n\n      for (let current = firstBlockOffset; current < top; current += this.blockSize) {\n        const blockId = Math.floor(current / this.blockSize);\n        if (!this.blockCache.has(blockId) && !this.blockRequests.has(blockId)) {\n          this.blockIdsToFetch.add(blockId);\n          missingBlockIds.push(blockId);\n        }\n        if (this.blockRequests.has(blockId)) {\n          blockRequests.push(this.blockRequests.get(blockId));\n        }\n        allBlockIds.push(blockId);\n      }\n    }\n\n    // allow additional block requests to accumulate\n    await wait();\n    this.fetchBlocks(signal);\n\n    // Gather all of the new requests that this fetch call is contributing to `fetch`.\n    const missingRequests = [];\n    for (const blockId of missingBlockIds) {\n      // The requested missing block could already be in the cache\n      // instead of having its request still be outstanding.\n      if (this.blockRequests.has(blockId)) {\n        missingRequests.push(this.blockRequests.get(blockId));\n      }\n    }\n\n    // Actually await all pending requests that are needed for this `fetch`.\n    await Promise.allSettled(blockRequests);\n    await Promise.allSettled(missingRequests);\n\n    // Perform retries if a block was interrupted by a previous signal\n    const abortedBlockRequests = [];\n    const abortedBlockIds = allBlockIds\n      .filter((id) => this.abortedBlockIds.has(id) || !this.blockCache.has(id));\n    abortedBlockIds.forEach((id) => this.blockIdsToFetch.add(id));\n    // start the retry of some blocks if required\n    if (abortedBlockIds.length > 0 && signal && !signal.aborted) {\n      this.fetchBlocks(null);\n      for (const blockId of abortedBlockIds) {\n        const block = this.blockRequests.get(blockId);\n        if (!block) {\n          throw new Error(`Block ${blockId} is not in the block requests`);\n        }\n        abortedBlockRequests.push(block);\n      }\n      await Promise.allSettled(abortedBlockRequests);\n    }\n\n    // throw an  abort error\n    if (signal && signal.aborted) {\n      throw new AbortError('Request was aborted');\n    }\n\n    const blocks = allBlockIds.map((id) => this.blockCache.get(id) || this.evictedBlocks.get(id));\n    const failedBlocks = blocks.filter((i) => !i);\n    if (failedBlocks.length) {\n      throw new AggregateError(failedBlocks, 'Request failed');\n    }\n\n    // create a final Map, with all required blocks for this request to satisfy\n    const requiredBlocks = new Map(zip(allBlockIds, blocks));\n\n    // TODO: satisfy each slice\n    return this.readSliceData(slices, requiredBlocks);\n  }\n\n  /**\n   *\n   * @param {AbortSignal} signal\n   */\n  fetchBlocks(signal) {\n    // check if we still need to\n    if (this.blockIdsToFetch.size > 0) {\n      const groups = this.groupBlocks(this.blockIdsToFetch);\n\n      // start requesting slices of data\n      const groupRequests = this.source.fetch(groups, signal);\n\n      for (let groupIndex = 0; groupIndex < groups.length; ++groupIndex) {\n        const group = groups[groupIndex];\n\n        for (const blockId of group.blockIds) {\n          // make an async IIFE for each block\n          this.blockRequests.set(blockId, (async () => {\n            try {\n              const response = (await groupRequests)[groupIndex];\n              const blockOffset = blockId * this.blockSize;\n              const o = blockOffset - response.offset;\n              const t = Math.min(o + this.blockSize, response.data.byteLength);\n              const data = response.data.slice(o, t);\n              const block = new Block(\n                blockOffset,\n                data.byteLength,\n                data,\n                blockId,\n              );\n              this.blockCache.set(blockId, block);\n              this.abortedBlockIds.delete(blockId);\n            } catch (err) {\n              if (err.name === 'AbortError') {\n                // store the signal here, we need it to determine later if an\n                // error was caused by this signal\n                err.signal = signal;\n                this.blockCache.delete(blockId);\n                this.abortedBlockIds.add(blockId);\n              } else {\n                throw err;\n              }\n            } finally {\n              this.blockRequests.delete(blockId);\n            }\n          })());\n        }\n      }\n      this.blockIdsToFetch.clear();\n    }\n  }\n\n  /**\n   *\n   * @param {Set} blockIds\n   * @returns {BlockGroup[]}\n   */\n  groupBlocks(blockIds) {\n    const sortedBlockIds = Array.from(blockIds).sort((a, b) => a - b);\n    if (sortedBlockIds.length === 0) {\n      return [];\n    }\n    let current = [];\n    let lastBlockId = null;\n    const groups = [];\n\n    for (const blockId of sortedBlockIds) {\n      if (lastBlockId === null || lastBlockId + 1 === blockId) {\n        current.push(blockId);\n        lastBlockId = blockId;\n      } else {\n        groups.push(new BlockGroup(\n          current[0] * this.blockSize,\n          current.length * this.blockSize,\n          current,\n        ));\n        current = [blockId];\n        lastBlockId = blockId;\n      }\n    }\n\n    groups.push(new BlockGroup(\n      current[0] * this.blockSize,\n      current.length * this.blockSize,\n      current,\n    ));\n\n    return groups;\n  }\n\n  /**\n   *\n   * @param {import(\"./basesource\").Slice[]} slices\n   * @param {Map} blocks\n   */\n  readSliceData(slices, blocks) {\n    return slices.map((slice) => {\n      let top = slice.offset + slice.length;\n      if (this.fileSize !== null) {\n        top = Math.min(this.fileSize, top);\n      }\n      const blockIdLow = Math.floor(slice.offset / this.blockSize);\n      const blockIdHigh = Math.floor(top / this.blockSize);\n      const sliceData = new ArrayBuffer(slice.length);\n      const sliceView = new Uint8Array(sliceData);\n\n      for (let blockId = blockIdLow; blockId <= blockIdHigh; ++blockId) {\n        const block = blocks.get(blockId);\n        const delta = block.offset - slice.offset;\n        const topDelta = block.top - top;\n        let blockInnerOffset = 0;\n        let rangeInnerOffset = 0;\n        let usedBlockLength;\n\n        if (delta < 0) {\n          blockInnerOffset = -delta;\n        } else if (delta > 0) {\n          rangeInnerOffset = delta;\n        }\n\n        if (topDelta < 0) {\n          usedBlockLength = block.length - blockInnerOffset;\n        } else {\n          usedBlockLength = top - block.offset - blockInnerOffset;\n        }\n\n        const blockView = new Uint8Array(block.data, blockInnerOffset, usedBlockLength);\n        sliceView.set(blockView, rangeInnerOffset);\n      }\n\n      return sliceData;\n    });\n  }\n}\n", "export class BaseResponse {\n  /**\n   * Returns whether the response has an ok'ish status code\n   */\n  get ok() {\n    return this.status >= 200 && this.status <= 299;\n  }\n\n  /**\n   * Returns the status code of the response\n   */\n  get status() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Returns the value of the specified header\n   * @param {string} headerName the header name\n   * @returns {string} the header value\n   */\n  getHeader(headerName) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @returns {ArrayBuffer} the response data of the request\n   */\n  async getData() {\n    throw new Error('not implemented');\n  }\n}\n\nexport class BaseClient {\n  constructor(url) {\n    this.url = url;\n  }\n\n  /**\n   * Send a request with the options\n   * @param {{headers: HeadersInit, signal: AbortSignal}} [options={}]\n   * @returns {Promise<BaseResponse>}\n   */\n  async request({ headers, signal } = {}) { // eslint-disable-line no-unused-vars\n    throw new Error('request is not implemented');\n  }\n}\n", "import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  /**\n   * @param {{headers: HeadersInit, signal: AbortSignal}} [options={}]\n   * @returns {Promise<FetchResponse>}\n   */\n  async request({ headers, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials: this.credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n", "import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n", "import http from 'http';\nimport https from 'https';\nimport urlMod from 'url';\n\nimport { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass HttpResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for node HTTP/HTTPS API Response\n   * @param {http.ServerResponse} response\n   */\n  constructor(response, dataPromise) {\n    super();\n    this.response = response;\n    this.dataPromise = dataPromise;\n  }\n\n  get status() {\n    return this.response.statusCode;\n  }\n\n  getHeader(name) {\n    return this.response.headers[name];\n  }\n\n  async getData() {\n    const data = await this.dataPromise;\n    return data;\n  }\n}\n\nexport class HttpClient extends BaseClient {\n  constructor(url) {\n    super(url);\n    this.parsedUrl = urlMod.parse(this.url);\n    this.httpApi = (this.parsedUrl.protocol === 'http:' ? http : https);\n  }\n\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const request = this.httpApi.get(\n        {\n          ...this.parsedUrl,\n          headers,\n        },\n        (response) => {\n          const dataPromise = new Promise((resolveData) => {\n            const chunks = [];\n\n            // collect chunks\n            response.on('data', (chunk) => {\n              chunks.push(chunk);\n            });\n\n            // concatenate all chunks and resolve the promise with the resulting buffer\n            response.on('end', () => {\n              const data = Buffer.concat(chunks).buffer;\n              resolveData(data);\n            });\n            response.on('error', reject);\n          });\n          resolve(new HttpResponse(response, dataPromise));\n        },\n      );\n      request.on('error', reject);\n\n      if (signal) {\n        if (signal.aborted) {\n          request.destroy(new AbortError('Request aborted'));\n        }\n        signal.addEventListener('abort', () => request.destroy(new AbortError('Request aborted')));\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n", "import { parseByteRanges, parseContentRange, parseContentType } from './httputils.js';\nimport { BaseSource } from './basesource.js';\nimport { BlockedSource } from './blockedsource.js';\n\nimport { FetchClient } from './client/fetch.js';\nimport { XHRClient } from './client/xhr.js';\nimport { HttpClient } from './client/http.js';\n\nclass RemoteSource extends BaseSource {\n  /**\n   *\n   * @param {BaseClient} client\n   * @param {object} headers\n   * @param {numbers} maxRanges\n   * @param {boolean} allowFullFile\n   */\n  constructor(client, headers, maxRanges, allowFullFile) {\n    super();\n    this.client = client;\n    this.headers = headers;\n    this.maxRanges = maxRanges;\n    this.allowFullFile = allowFullFile;\n    this._fileSize = null;\n  }\n\n  /**\n   *\n   * @param {Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    // if we allow multi-ranges, split the incoming request into that many sub-requests\n    // and join them afterwards\n    if (this.maxRanges >= slices.length) {\n      return this.fetchSlices(slices, signal);\n    } else if (this.maxRanges > 0 && slices.length > 1) {\n      // TODO: split into multiple multi-range requests\n\n      // const subSlicesRequests = [];\n      // for (let i = 0; i < slices.length; i += this.maxRanges) {\n      //   subSlicesRequests.push(\n      //     this.fetchSlices(slices.slice(i, i + this.maxRanges), signal),\n      //   );\n      // }\n      // return (await Promise.all(subSlicesRequests)).flat();\n    }\n\n    // otherwise make a single request for each slice\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  async fetchSlices(slices, signal) {\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${slices\n          .map(({ offset, length }) => `${offset}-${offset + length}`)\n          .join(',')\n        }`,\n      },\n      signal,\n    });\n\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const { type, params } = parseContentType(response.getHeader('content-type'));\n      if (type === 'multipart/byteranges') {\n        const byteRanges = parseByteRanges(await response.getData(), params.boundary);\n        this._fileSize = byteRanges[0].fileSize || null;\n        return byteRanges;\n      }\n\n      const data = await response.getData();\n\n      const { start, end, total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      const first = [{\n        data,\n        offset: start,\n        length: end - start,\n      }];\n\n      if (slices.length > 1) {\n        // we requested more than one slice, but got only the first\n        // unfortunately, some HTTP Servers don't support multi-ranges\n        // and return only the first\n\n        // get the rest of the slices and fetch them iteratively\n        const others = await Promise.all(slices.slice(1).map((slice) => this.fetchSlice(slice, signal)));\n        return first.concat(others);\n      }\n      return first;\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n      const data = await response.getData();\n      this._fileSize = data.byteLength;\n      return [{\n        data,\n        offset: 0,\n        length: data.byteLength,\n      }];\n    }\n  }\n\n  async fetchSlice(slice, signal) {\n    const { offset, length } = slice;\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${offset}-${offset + length}`,\n      },\n      signal,\n    });\n\n    // check the response was okay and if the server actually understands range requests\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const data = await response.getData();\n\n      const { total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      return {\n        data,\n        offset,\n        length,\n      };\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n\n      const data = await response.getData();\n\n      this._fileSize = data.byteLength;\n      return {\n        data,\n        offset: 0,\n        length: data.byteLength,\n      };\n    }\n  }\n\n  get fileSize() {\n    return this._fileSize;\n  }\n}\n\nfunction maybeWrapInBlockedSource(source, { blockSize, cacheSize }) {\n  if (blockSize === null) {\n    return source;\n  }\n  return new BlockedSource(source, { blockSize, cacheSize });\n}\n\nexport function makeFetchSource(url, { headers = {}, credentials, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new FetchClient(url, credentials);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeXHRSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new XHRClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeHttpSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new HttpClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeCustomSource(client, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\n/**\n *\n * @param {string} url\n * @param {object} options\n */\nexport function makeRemoteSource(url, { forceXHR = false, ...clientOptions } = {}) {\n  if (typeof fetch === 'function' && !forceXHR) {\n    return makeFetchSource(url, clientOptions);\n  }\n  if (typeof XMLHttpRequest !== 'undefined') {\n    return makeXHRSource(url, clientOptions);\n  }\n  return makeHttpSource(url, clientOptions);\n}\n", "import { BaseSource } from './basesource.js';\n\nclass FileReaderSource extends BaseSource {\n  constructor(file) {\n    super();\n    this.file = file;\n  }\n\n  async fetchSlice(slice, signal) {\n    return new Promise((resolve, reject) => {\n      const blob = this.file.slice(slice.offset, slice.offset + slice.length);\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = reject;\n      reader.onabort = reject;\n      reader.readAsArrayBuffer(blob);\n\n      if (signal) {\n        signal.addEventListener('abort', () => reader.abort());\n      }\n    });\n  }\n}\n\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}\n", "import fs from 'fs';\nimport { BaseSource } from './basesource.js';\n\nfunction closeAsync(fd) {\n  return new Promise((resolve, reject) => {\n    fs.close(fd, (err) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction openAsync(path, flags, mode = undefined) {\n  return new Promise((resolve, reject) => {\n    fs.open(path, flags, mode, (err, fd) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\n\nfunction readAsync(...args) {\n  return new Promise((resolve, reject) => {\n    fs.read(...args, (err, bytesRead, buffer) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({ bytesRead, buffer });\n      }\n    });\n  });\n}\n\nclass FileSource extends BaseSource {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.openRequest = openAsync(path, 'r');\n  }\n\n  async fetchSlice(slice) {\n    // TODO: use `signal`\n    const fd = await this.openRequest;\n    const { buffer } = await readAsync(\n      fd,\n      Buffer.alloc(slice.length),\n      0,\n      slice.length,\n      slice.offset,\n    );\n    return buffer.buffer;\n  }\n\n  async close() {\n    const fd = await this.openRequest;\n    await closeAsync(fd);\n  }\n}\n\nexport function makeFileSource(path) {\n  return new FileSource(path);\n}\n", "/*\n  Some parts of this file are based on UTIF.js,\n  which was released under the MIT License.\n  You can view that here:\n  https://github.com/photopea/UTIF.js/blob/master/LICENSE\n*/\nimport { fieldTagNames, fieldTagTypes, fieldTypeNames, geoKeyNames } from './globals.js';\nimport { assign, endsWith, forEach, invert, times } from './utils.js';\n\nconst tagName2Code = invert(fieldTagNames);\nconst geoKeyName2Code = invert(geoKeyNames);\nconst name2code = {};\nassign(name2code, tagName2Code);\nassign(name2code, geoKeyName2Code);\nconst typeName2byte = invert(fieldTypeNames);\n\n// config variables\nconst numBytesInIfd = 1000;\n\nconst _binBE = {\n  nextZero: (data, o) => {\n    let oincr = o;\n    while (data[oincr] !== 0) {\n      oincr++;\n    }\n    return oincr;\n  },\n  readUshort: (buff, p) => {\n    return (buff[p] << 8) | buff[p + 1];\n  },\n  readShort: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 1];\n    a[1] = buff[p + 0];\n    return _binBE.i16[0];\n  },\n  readInt: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.i32[0];\n  },\n  readUint: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.ui32[0];\n  },\n  readASCII: (buff, p, l) => {\n    return l.map((i) => String.fromCharCode(buff[p + i])).join('');\n  },\n  readFloat: (buff, p) => {\n    const a = _binBE.ui8;\n    times(4, (i) => {\n      a[i] = buff[p + 3 - i];\n    });\n    return _binBE.fl32[0];\n  },\n  readDouble: (buff, p) => {\n    const a = _binBE.ui8;\n    times(8, (i) => {\n      a[i] = buff[p + 7 - i];\n    });\n    return _binBE.fl64[0];\n  },\n  writeUshort: (buff, p, n) => {\n    buff[p] = (n >> 8) & 255;\n    buff[p + 1] = n & 255;\n  },\n  writeUint: (buff, p, n) => {\n    buff[p] = (n >> 24) & 255;\n    buff[p + 1] = (n >> 16) & 255;\n    buff[p + 2] = (n >> 8) & 255;\n    buff[p + 3] = (n >> 0) & 255;\n  },\n  writeASCII: (buff, p, s) => {\n    times(s.length, (i) => {\n      buff[p + i] = s.charCodeAt(i);\n    });\n  },\n  ui8: new Uint8Array(8),\n};\n\n_binBE.fl64 = new Float64Array(_binBE.ui8.buffer);\n\n_binBE.writeDouble = (buff, p, n) => {\n  _binBE.fl64[0] = n;\n  times(8, (i) => {\n    buff[p + i] = _binBE.ui8[7 - i];\n  });\n};\n\nconst _writeIFD = (bin, data, _offset, ifd) => {\n  let offset = _offset;\n\n  const keys = Object.keys(ifd).filter((key) => {\n    return key !== undefined && key !== null && key !== 'undefined';\n  });\n\n  bin.writeUshort(data, offset, keys.length);\n  offset += 2;\n\n  let eoff = offset + (12 * keys.length) + 4;\n\n  for (const key of keys) {\n    let tag = null;\n    if (typeof key === 'number') {\n      tag = key;\n    } else if (typeof key === 'string') {\n      tag = parseInt(key, 10);\n    }\n\n    const typeName = fieldTagTypes[tag];\n    const typeNum = typeName2byte[typeName];\n\n    if (typeName == null || typeName === undefined || typeof typeName === 'undefined') {\n      throw new Error(`unknown type of tag: ${tag}`);\n    }\n\n    let val = ifd[key];\n\n    if (val === undefined) {\n      throw new Error(`failed to get value for key ${key}`);\n    }\n\n    // ASCIIZ format with trailing 0 character\n    // http://www.fileformat.info/format/tiff/corion.htm\n    // https://stackoverflow.com/questions/7783044/whats-the-difference-between-asciiz-vs-ascii\n    if (typeName === 'ASCII' && typeof val === 'string' && endsWith(val, '\\u0000') === false) {\n      val += '\\u0000';\n    }\n\n    const num = val.length;\n\n    bin.writeUshort(data, offset, tag);\n    offset += 2;\n\n    bin.writeUshort(data, offset, typeNum);\n    offset += 2;\n\n    bin.writeUint(data, offset, num);\n    offset += 4;\n\n    let dlen = [-1, 1, 1, 2, 4, 8, 0, 0, 0, 0, 0, 0, 8][typeNum] * num;\n    let toff = offset;\n\n    if (dlen > 4) {\n      bin.writeUint(data, offset, eoff);\n      toff = eoff;\n    }\n\n    if (typeName === 'ASCII') {\n      bin.writeASCII(data, toff, val);\n    } else if (typeName === 'SHORT') {\n      times(num, (i) => {\n        bin.writeUshort(data, toff + (2 * i), val[i]);\n      });\n    } else if (typeName === 'LONG') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (4 * i), val[i]);\n      });\n    } else if (typeName === 'RATIONAL') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (8 * i), Math.round(val[i] * 10000));\n        bin.writeUint(data, toff + (8 * i) + 4, 10000);\n      });\n    } else if (typeName === 'DOUBLE') {\n      times(num, (i) => {\n        bin.writeDouble(data, toff + (8 * i), val[i]);\n      });\n    }\n\n    if (dlen > 4) {\n      dlen += (dlen & 1);\n      eoff += dlen;\n    }\n\n    offset += 4;\n  }\n\n  return [offset, eoff];\n};\n\nconst encodeIfds = (ifds) => {\n  const data = new Uint8Array(numBytesInIfd);\n  let offset = 4;\n  const bin = _binBE;\n\n  // set big-endian byte-order\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[0] = 77;\n  data[1] = 77;\n\n  // set format-version number\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[3] = 42;\n\n  let ifdo = 8;\n\n  bin.writeUint(data, offset, ifdo);\n\n  offset += 4;\n\n  ifds.forEach((ifd, i) => {\n    const noffs = _writeIFD(bin, data, ifdo, ifd);\n    ifdo = noffs[1];\n    if (i < ifds.length - 1) {\n      bin.writeUint(data, noffs[0], ifdo);\n    }\n  });\n\n  if (data.slice) {\n    return data.slice(0, ifdo).buffer;\n  }\n\n  // node hasn't implemented slice on Uint8Array yet\n  const result = new Uint8Array(ifdo);\n  for (let i = 0; i < ifdo; i++) {\n    result[i] = data[i];\n  }\n  return result.buffer;\n};\n\nconst encodeImage = (values, width, height, metadata) => {\n  if (height === undefined || height === null) {\n    throw new Error(`you passed into encodeImage a width of type ${height}`);\n  }\n\n  if (width === undefined || width === null) {\n    throw new Error(`you passed into encodeImage a width of type ${width}`);\n  }\n\n  const ifd = {\n    256: [width], // ImageWidth\n    257: [height], // ImageLength\n    273: [numBytesInIfd], // strips offset\n    278: [height], // RowsPerStrip\n    305: 'geotiff.js', // no array for ASCII(Z)\n  };\n\n  if (metadata) {\n    for (const i in metadata) {\n      if (metadata.hasOwnProperty(i)) {\n        ifd[i] = metadata[i];\n      }\n    }\n  }\n\n  const prfx = new Uint8Array(encodeIfds([ifd]));\n\n  const img = new Uint8Array(values);\n\n  const samplesPerPixel = ifd[277];\n\n  const data = new Uint8Array(numBytesInIfd + (width * height * samplesPerPixel));\n  times(prfx.length, (i) => {\n    data[i] = prfx[i];\n  });\n  forEach(img, (value, i) => {\n    data[numBytesInIfd + i] = value;\n  });\n\n  return data.buffer;\n};\n\nconst convertToTids = (input) => {\n  const result = {};\n  for (const key in input) {\n    if (key !== 'StripOffsets') {\n      if (!name2code[key]) {\n        console.error(key, 'not in name2code:', Object.keys(name2code));\n      }\n      result[name2code[key]] = input[key];\n    }\n  }\n  return result;\n};\n\nconst toArray = (input) => {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return [input];\n};\n\nconst metadataDefaults = [\n  ['Compression', 1], // no compression\n  ['PlanarConfiguration', 1],\n  ['ExtraSamples', 0],\n];\n\nexport function writeGeotiff(data, metadata) {\n  const isFlattened = typeof data[0] === 'number';\n\n  let height;\n  let numBands;\n  let width;\n  let flattenedValues;\n\n  if (isFlattened) {\n    height = metadata.height || metadata.ImageLength;\n    width = metadata.width || metadata.ImageWidth;\n    numBands = data.length / (height * width);\n    flattenedValues = data;\n  } else {\n    numBands = data.length;\n    height = data[0].length;\n    width = data[0][0].length;\n    flattenedValues = [];\n    times(height, (rowIndex) => {\n      times(width, (columnIndex) => {\n        times(numBands, (bandIndex) => {\n          flattenedValues.push(data[bandIndex][rowIndex][columnIndex]);\n        });\n      });\n    });\n  }\n\n  metadata.ImageLength = height;\n  delete metadata.height;\n  metadata.ImageWidth = width;\n  delete metadata.width;\n\n  // consult https://www.loc.gov/preservation/digital/formats/content/tiff_tags.shtml\n\n  if (!metadata.BitsPerSample) {\n    metadata.BitsPerSample = times(numBands, () => 8);\n  }\n\n  metadataDefaults.forEach((tag) => {\n    const key = tag[0];\n    if (!metadata[key]) {\n      const value = tag[1];\n      metadata[key] = value;\n    }\n  });\n\n  // The color space of the image data.\n  // 1=black is zero and 2=RGB.\n  if (!metadata.PhotometricInterpretation) {\n    metadata.PhotometricInterpretation = metadata.BitsPerSample.length === 3 ? 2 : 1;\n  }\n\n  // The number of components per pixel.\n  if (!metadata.SamplesPerPixel) {\n    metadata.SamplesPerPixel = [numBands];\n  }\n\n  if (!metadata.StripByteCounts) {\n    // we are only writing one strip\n    metadata.StripByteCounts = [numBands * height * width];\n  }\n\n  if (!metadata.ModelPixelScale) {\n    // assumes raster takes up exactly the whole globe\n    metadata.ModelPixelScale = [360 / width, 180 / height, 0];\n  }\n\n  if (!metadata.SampleFormat) {\n    metadata.SampleFormat = times(numBands, () => 1);\n  }\n\n  // if didn't pass in projection information, assume the popular 4326 \"geographic projection\"\n  if (!metadata.hasOwnProperty('GeographicTypeGeoKey') && !metadata.hasOwnProperty('ProjectedCSTypeGeoKey')) {\n    metadata.GeographicTypeGeoKey = 4326;\n    metadata.ModelTiepoint = [0, 0, 0, -180, 90, 0]; // raster fits whole globe\n    metadata.GeogCitationGeoKey = 'WGS 84';\n    metadata.GTModelTypeGeoKey = 2;\n  }\n\n  const geoKeys = Object.keys(metadata)\n    .filter((key) => endsWith(key, 'GeoKey'))\n    .sort((a, b) => name2code[a] - name2code[b]);\n\n  if (!metadata.GeoAsciiParams) {\n    let geoAsciiParams = '';\n    geoKeys.forEach((name) => {\n      const code = Number(name2code[name]);\n      const tagType = fieldTagTypes[code];\n      if (tagType === 'ASCII') {\n        geoAsciiParams += `${metadata[name].toString()}\\u0000`;\n      }\n    });\n    if (geoAsciiParams.length > 0) {\n      metadata.GeoAsciiParams = geoAsciiParams;\n    }\n  }\n\n  if (!metadata.GeoKeyDirectory) {\n    const NumberOfKeys = geoKeys.length;\n\n    const GeoKeyDirectory = [1, 1, 0, NumberOfKeys];\n    geoKeys.forEach((geoKey) => {\n      const KeyID = Number(name2code[geoKey]);\n      GeoKeyDirectory.push(KeyID);\n\n      let Count;\n      let TIFFTagLocation;\n      let valueOffset;\n      if (fieldTagTypes[KeyID] === 'SHORT') {\n        Count = 1;\n        TIFFTagLocation = 0;\n        valueOffset = metadata[geoKey];\n      } else if (geoKey === 'GeogCitationGeoKey') {\n        Count = metadata.GeoAsciiParams.length;\n        TIFFTagLocation = Number(name2code.GeoAsciiParams);\n        valueOffset = 0;\n      } else {\n        console.log(`[geotiff.js] couldn't get TIFFTagLocation for ${geoKey}`);\n      }\n      GeoKeyDirectory.push(TIFFTagLocation);\n      GeoKeyDirectory.push(Count);\n      GeoKeyDirectory.push(valueOffset);\n    });\n    metadata.GeoKeyDirectory = GeoKeyDirectory;\n  }\n\n  // delete GeoKeys from metadata, because stored in GeoKeyDirectory tag\n  for (const geoKey of geoKeys) {\n    if (metadata.hasOwnProperty(geoKey)) {\n      delete metadata[geoKey];\n    }\n  }\n\n  [\n    'Compression',\n    'ExtraSamples',\n    'GeographicTypeGeoKey',\n    'GTModelTypeGeoKey',\n    'GTRasterTypeGeoKey',\n    'ImageLength', // synonym of ImageHeight\n    'ImageWidth',\n    'Orientation',\n    'PhotometricInterpretation',\n    'ProjectedCSTypeGeoKey',\n    'PlanarConfiguration',\n    'ResolutionUnit',\n    'SamplesPerPixel',\n    'XPosition',\n    'YPosition',\n    'RowsPerStrip',\n  ].forEach((name) => {\n    if (metadata[name]) {\n      metadata[name] = toArray(metadata[name]);\n    }\n  });\n\n  const encodedMetadata = convertToTids(metadata);\n\n  const outputImage = encodeImage(flattenedValues, width, height, encodedMetadata);\n\n  return outputImage;\n}\n", "/**\n * A no-op logger\n */\nclass DummyLogger {\n  log() {}\n\n  debug() {}\n\n  info() {}\n\n  warn() {}\n\n  error() {}\n\n  time() {}\n\n  timeEnd() {}\n}\n\nlet LOGGER = new DummyLogger();\n\n/**\n *\n * @param {object} logger the new logger. e.g `console`\n */\nexport function setLogger(logger = new DummyLogger()) {\n  LOGGER = logger;\n}\n\nexport function debug(...args) {\n  return LOGGER.debug(...args);\n}\n\nexport function log(...args) {\n  return LOGGER.log(...args);\n}\n\nexport function info(...args) {\n  return LOGGER.info(...args);\n}\n\nexport function warn(...args) {\n  return LOGGER.warn(...args);\n}\n\nexport function error(...args) {\n  return LOGGER.error(...args);\n}\n\nexport function time(...args) {\n  return LOGGER.time(...args);\n}\n\nexport function timeEnd(...args) {\n  return LOGGER.timeEnd(...args);\n}\n", "/** @module geotiff */\nimport GeoTIFFImage from './geotiffimage.js';\nimport DataView64 from './dataview64.js';\nimport DataSlice from './dataslice.js';\nimport Pool from './pool.js';\n\nimport { makeRemoteSource, makeCustomSource } from './source/remote.js';\nimport { makeBufferSource } from './source/arraybuffer.js';\nimport { makeFileReaderSource } from './source/filereader.js';\nimport { makeFileSource } from './source/file.js';\nimport { BaseClient, BaseResponse } from './source/client/base.js';\n\nimport { fieldTypes, fieldTagNames, arrayFields, geoKeyNames } from './globals.js';\nimport { writeGeotiff } from './geotiffwriter.js';\nimport * as globals from './globals.js';\nimport * as rgb from './rgb.js';\nimport { getDecoder, addDecoder } from './compression/index.js';\nimport { setLogger } from './logging.js';\n\nexport { globals };\nexport { rgb };\nexport { default as BaseDecoder } from './compression/basedecoder.js';\nexport { getDecoder, addDecoder };\nexport { setLogger };\n\n/**\n * @typedef {Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array}\n * TypedArray\n */\n\n/**\n * @typedef {{ height:number, width: number }} Dimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray & { height: number; width: number}`\n * @typedef {TypedArray & Dimensions} TypedArrayWithDimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray[] & { height: number; width: number}`\n * @typedef {TypedArray[] & Dimensions} TypedArrayArrayWithDimensions\n */\n\n/**\n *  The autogenerated docs are a little confusing here. The effective type is:\n *\n * `(TypedArray | TypedArray[]) & { height: number; width: number}`\n * @typedef {TypedArrayWithDimensions | TypedArrayArrayWithDimensions} ReadRasterResult\n */\n\nfunction getFieldTypeLength(fieldType) {\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.SBYTE: case fieldTypes.UNDEFINED:\n      return 1;\n    case fieldTypes.SHORT: case fieldTypes.SSHORT:\n      return 2;\n    case fieldTypes.LONG: case fieldTypes.SLONG: case fieldTypes.FLOAT: case fieldTypes.IFD:\n      return 4;\n    case fieldTypes.RATIONAL: case fieldTypes.SRATIONAL: case fieldTypes.DOUBLE:\n    case fieldTypes.LONG8: case fieldTypes.SLONG8: case fieldTypes.IFD8:\n      return 8;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n}\n\nfunction parseGeoKeyDirectory(fileDirectory) {\n  const rawGeoKeyDirectory = fileDirectory.GeoKeyDirectory;\n  if (!rawGeoKeyDirectory) {\n    return null;\n  }\n\n  const geoKeyDirectory = {};\n  for (let i = 4; i <= rawGeoKeyDirectory[3] * 4; i += 4) {\n    const key = geoKeyNames[rawGeoKeyDirectory[i]];\n    const location = (rawGeoKeyDirectory[i + 1])\n      ? (fieldTagNames[rawGeoKeyDirectory[i + 1]]) : null;\n    const count = rawGeoKeyDirectory[i + 2];\n    const offset = rawGeoKeyDirectory[i + 3];\n\n    let value = null;\n    if (!location) {\n      value = offset;\n    } else {\n      value = fileDirectory[location];\n      if (typeof value === 'undefined' || value === null) {\n        throw new Error(`Could not get value of geoKey '${key}'.`);\n      } else if (typeof value === 'string') {\n        value = value.substring(offset, offset + count - 1);\n      } else if (value.subarray) {\n        value = value.subarray(offset, offset + count);\n        if (count === 1) {\n          value = value[0];\n        }\n      }\n    }\n    geoKeyDirectory[key] = value;\n  }\n  return geoKeyDirectory;\n}\n\nfunction getValues(dataSlice, fieldType, count, offset) {\n  let values = null;\n  let readMethod = null;\n  const fieldTypeLength = getFieldTypeLength(fieldType);\n\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.UNDEFINED:\n      values = new Uint8Array(count); readMethod = dataSlice.readUint8;\n      break;\n    case fieldTypes.SBYTE:\n      values = new Int8Array(count); readMethod = dataSlice.readInt8;\n      break;\n    case fieldTypes.SHORT:\n      values = new Uint16Array(count); readMethod = dataSlice.readUint16;\n      break;\n    case fieldTypes.SSHORT:\n      values = new Int16Array(count); readMethod = dataSlice.readInt16;\n      break;\n    case fieldTypes.LONG: case fieldTypes.IFD:\n      values = new Uint32Array(count); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SLONG:\n      values = new Int32Array(count); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.LONG8: case fieldTypes.IFD8:\n      values = new Array(count); readMethod = dataSlice.readUint64;\n      break;\n    case fieldTypes.SLONG8:\n      values = new Array(count); readMethod = dataSlice.readInt64;\n      break;\n    case fieldTypes.RATIONAL:\n      values = new Uint32Array(count * 2); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SRATIONAL:\n      values = new Int32Array(count * 2); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.FLOAT:\n      values = new Float32Array(count); readMethod = dataSlice.readFloat32;\n      break;\n    case fieldTypes.DOUBLE:\n      values = new Float64Array(count); readMethod = dataSlice.readFloat64;\n      break;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n\n  // normal fields\n  if (!(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n    for (let i = 0; i < count; ++i) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n    }\n  } else { // RATIONAL or SRATIONAL\n    for (let i = 0; i < count; i += 2) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n      values[i + 1] = readMethod.call(\n        dataSlice, offset + ((i * fieldTypeLength) + 4),\n      );\n    }\n  }\n\n  if (fieldType === fieldTypes.ASCII) {\n    return new TextDecoder('utf-8').decode(values);\n  }\n  return values;\n}\n\n/**\n * Data class to store the parsed file directory, geo key directory and\n * offset to the next IFD\n */\nclass ImageFileDirectory {\n  constructor(fileDirectory, geoKeyDirectory, nextIFDByteOffset) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeyDirectory = geoKeyDirectory;\n    this.nextIFDByteOffset = nextIFDByteOffset;\n  }\n}\n\n/**\n * Error class for cases when an IFD index was requested, that does not exist\n * in the file.\n */\nclass GeoTIFFImageIndexError extends Error {\n  constructor(index) {\n    super(`No image at index ${index}`);\n    this.index = index;\n  }\n}\n\nclass GeoTIFFBase {\n  /**\n   * (experimental) Reads raster data from the best fitting image. This function uses\n   * the image with the lowest resolution that is still a higher resolution than the\n   * requested resolution.\n   * When specified, the `bbox` option is translated to the `window` option and the\n   * `resX` and `resY` to `width` and `height` respectively.\n   * Then, the [readRasters]{@link GeoTIFFImage#readRasters} method of the selected\n   * image is called and the result returned.\n   * @see GeoTIFFImage.readRasters\n   * @param {import('./geotiffimage').ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<ReadRasterResult>} the decoded array(s), with `height` and `width`, as a promise\n   */\n  async readRasters(options = {}) {\n    const { window: imageWindow, width, height } = options;\n    let { resX, resY, bbox } = options;\n\n    const firstImage = await this.getImage();\n    let usedImage = firstImage;\n    const imageCount = await this.getImageCount();\n    const imgBBox = firstImage.getBoundingBox();\n\n    if (imageWindow && bbox) {\n      throw new Error('Both \"bbox\" and \"window\" passed.');\n    }\n\n    // if width/height is passed, transform it to resolution\n    if (width || height) {\n      // if we have an image window (pixel coordinates), transform it to a BBox\n      // using the origin/resolution of the first image.\n      if (imageWindow) {\n        const [oX, oY] = firstImage.getOrigin();\n        const [rX, rY] = firstImage.getResolution();\n\n        bbox = [\n          oX + (imageWindow[0] * rX),\n          oY + (imageWindow[1] * rY),\n          oX + (imageWindow[2] * rX),\n          oY + (imageWindow[3] * rY),\n        ];\n      }\n\n      // if we have a bbox (or calculated one)\n\n      const usedBBox = bbox || imgBBox;\n\n      if (width) {\n        if (resX) {\n          throw new Error('Both width and resX passed');\n        }\n        resX = (usedBBox[2] - usedBBox[0]) / width;\n      }\n      if (height) {\n        if (resY) {\n          throw new Error('Both width and resY passed');\n        }\n        resY = (usedBBox[3] - usedBBox[1]) / height;\n      }\n    }\n\n    // if resolution is set or calculated, try to get the image with the worst acceptable resolution\n    if (resX || resY) {\n      const allImages = [];\n      for (let i = 0; i < imageCount; ++i) {\n        const image = await this.getImage(i);\n        const { SubfileType: subfileType, NewSubfileType: newSubfileType } = image.fileDirectory;\n        if (i === 0 || subfileType === 2 || newSubfileType & 1) {\n          allImages.push(image);\n        }\n      }\n\n      allImages.sort((a, b) => a.getWidth() - b.getWidth());\n      for (let i = 0; i < allImages.length; ++i) {\n        const image = allImages[i];\n        const imgResX = (imgBBox[2] - imgBBox[0]) / image.getWidth();\n        const imgResY = (imgBBox[3] - imgBBox[1]) / image.getHeight();\n\n        usedImage = image;\n        if ((resX && resX > imgResX) || (resY && resY > imgResY)) {\n          break;\n        }\n      }\n    }\n\n    let wnd = imageWindow;\n    if (bbox) {\n      const [oX, oY] = firstImage.getOrigin();\n      const [imageResX, imageResY] = usedImage.getResolution(firstImage);\n\n      wnd = [\n        Math.round((bbox[0] - oX) / imageResX),\n        Math.round((bbox[1] - oY) / imageResY),\n        Math.round((bbox[2] - oX) / imageResX),\n        Math.round((bbox[3] - oY) / imageResY),\n      ];\n      wnd = [\n        Math.min(wnd[0], wnd[2]),\n        Math.min(wnd[1], wnd[3]),\n        Math.max(wnd[0], wnd[2]),\n        Math.max(wnd[1], wnd[3]),\n      ];\n    }\n\n    return usedImage.readRasters({ ...options, window: wnd });\n  }\n}\n\n/**\n * @typedef {Object} GeoTIFFOptions\n * @property {boolean} [cache=false] whether or not decoded tiles shall be cached.\n */\n\n/**\n * The abstraction for a whole GeoTIFF file.\n * @augments GeoTIFFBase\n */\nclass GeoTIFF extends GeoTIFFBase {\n  /**\n   * @constructor\n   * @param {*} source The datasource to read from.\n   * @param {boolean} littleEndian Whether the image uses little endian.\n   * @param {boolean} bigTiff Whether the image uses bigTIFF conventions.\n   * @param {number} firstIFDOffset The numeric byte-offset from the start of the image\n   *                                to the first IFD.\n   * @param {GeoTIFFOptions} [options] further options.\n   */\n  constructor(source, littleEndian, bigTiff, firstIFDOffset, options = {}) {\n    super();\n    this.source = source;\n    this.littleEndian = littleEndian;\n    this.bigTiff = bigTiff;\n    this.firstIFDOffset = firstIFDOffset;\n    this.cache = options.cache || false;\n    this.ifdRequests = [];\n    this.ghostValues = null;\n  }\n\n  async getSlice(offset, size) {\n    const fallbackSize = this.bigTiff ? 4048 : 1024;\n    return new DataSlice(\n      (await this.source.fetch([{\n        offset,\n        length: typeof size !== 'undefined' ? size : fallbackSize,\n      }]))[0],\n      offset,\n      this.littleEndian,\n      this.bigTiff,\n    );\n  }\n\n  /**\n   * Instructs to parse an image file directory at the given file offset.\n   * As there is no way to ensure that a location is indeed the start of an IFD,\n   * this function must be called with caution (e.g only using the IFD offsets from\n   * the headers or other IFDs).\n   * @param {number} offset the offset to parse the IFD at\n   * @returns {Promise<ImageFileDirectory>} the parsed IFD\n   */\n  async parseFileDirectoryAt(offset) {\n    const entrySize = this.bigTiff ? 20 : 12;\n    const offsetSize = this.bigTiff ? 8 : 2;\n\n    let dataSlice = await this.getSlice(offset);\n    const numDirEntries = this.bigTiff\n      ? dataSlice.readUint64(offset)\n      : dataSlice.readUint16(offset);\n\n    // if the slice does not cover the whole IFD, request a bigger slice, where the\n    // whole IFD fits: num of entries + n x tag length + offset to next IFD\n    const byteSize = (numDirEntries * entrySize) + (this.bigTiff ? 16 : 6);\n    if (!dataSlice.covers(offset, byteSize)) {\n      dataSlice = await this.getSlice(offset, byteSize);\n    }\n\n    const fileDirectory = {};\n\n    // loop over the IFD and create a file directory object\n    let i = offset + (this.bigTiff ? 8 : 2);\n    for (let entryCount = 0; entryCount < numDirEntries; i += entrySize, ++entryCount) {\n      const fieldTag = dataSlice.readUint16(i);\n      const fieldType = dataSlice.readUint16(i + 2);\n      const typeCount = this.bigTiff\n        ? dataSlice.readUint64(i + 4)\n        : dataSlice.readUint32(i + 4);\n\n      let fieldValues;\n      let value;\n      const fieldTypeLength = getFieldTypeLength(fieldType);\n      const valueOffset = i + (this.bigTiff ? 12 : 8);\n\n      // check whether the value is directly encoded in the tag or refers to a\n      // different external byte range\n      if (fieldTypeLength * typeCount <= (this.bigTiff ? 8 : 4)) {\n        fieldValues = getValues(dataSlice, fieldType, typeCount, valueOffset);\n      } else {\n        // resolve the reference to the actual byte range\n        const actualOffset = dataSlice.readOffset(valueOffset);\n        const length = getFieldTypeLength(fieldType) * typeCount;\n\n        // check, whether we actually cover the referenced byte range; if not,\n        // request a new slice of bytes to read from it\n        if (dataSlice.covers(actualOffset, length)) {\n          fieldValues = getValues(dataSlice, fieldType, typeCount, actualOffset);\n        } else {\n          const fieldDataSlice = await this.getSlice(actualOffset, length);\n          fieldValues = getValues(fieldDataSlice, fieldType, typeCount, actualOffset);\n        }\n      }\n\n      // unpack single values from the array\n      if (typeCount === 1 && arrayFields.indexOf(fieldTag) === -1\n        && !(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n        value = fieldValues[0];\n      } else {\n        value = fieldValues;\n      }\n\n      // write the tags value to the file directly\n      fileDirectory[fieldTagNames[fieldTag]] = value;\n    }\n    const geoKeyDirectory = parseGeoKeyDirectory(fileDirectory);\n    const nextIFDByteOffset = dataSlice.readOffset(\n      offset + offsetSize + (entrySize * numDirEntries),\n    );\n\n    return new ImageFileDirectory(\n      fileDirectory,\n      geoKeyDirectory,\n      nextIFDByteOffset,\n    );\n  }\n\n  async requestIFD(index) {\n    // see if we already have that IFD index requested.\n    if (this.ifdRequests[index]) {\n      // attach to an already requested IFD\n      return this.ifdRequests[index];\n    } else if (index === 0) {\n      // special case for index 0\n      this.ifdRequests[index] = this.parseFileDirectoryAt(this.firstIFDOffset);\n      return this.ifdRequests[index];\n    } else if (!this.ifdRequests[index - 1]) {\n      // if the previous IFD was not yet loaded, load that one first\n      // this is the recursive call.\n      try {\n        this.ifdRequests[index - 1] = this.requestIFD(index - 1);\n      } catch (e) {\n        // if the previous one already was an index error, rethrow\n        // with the current index\n        if (e instanceof GeoTIFFImageIndexError) {\n          throw new GeoTIFFImageIndexError(index);\n        }\n        // rethrow anything else\n        throw e;\n      }\n    }\n    // if the previous IFD was loaded, we can finally fetch the one we are interested in.\n    // we need to wrap this in an IIFE, otherwise this.ifdRequests[index] would be delayed\n    this.ifdRequests[index] = (async () => {\n      const previousIfd = await this.ifdRequests[index - 1];\n      if (previousIfd.nextIFDByteOffset === 0) {\n        throw new GeoTIFFImageIndexError(index);\n      }\n      return this.parseFileDirectoryAt(previousIfd.nextIFDByteOffset);\n    })();\n    return this.ifdRequests[index];\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    const ifd = await this.requestIFD(index);\n    return new GeoTIFFImage(\n      ifd.fileDirectory, ifd.geoKeyDirectory,\n      this.dataView, this.littleEndian, this.cache, this.source,\n    );\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    let index = 0;\n    // loop until we run out of IFDs\n    let hasNext = true;\n    while (hasNext) {\n      try {\n        await this.requestIFD(index);\n        ++index;\n      } catch (e) {\n        if (e instanceof GeoTIFFImageIndexError) {\n          hasNext = false;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Get the values of the COG ghost area as a parsed map.\n   * See https://gdal.org/drivers/raster/cog.html#header-ghost-area for reference\n   * @returns {Promise<Object>} the parsed ghost area or null, if no such area was found\n   */\n  async getGhostValues() {\n    const offset = this.bigTiff ? 16 : 8;\n    if (this.ghostValues) {\n      return this.ghostValues;\n    }\n    const detectionString = 'GDAL_STRUCTURAL_METADATA_SIZE=';\n    const heuristicAreaSize = detectionString.length + 100;\n    let slice = await this.getSlice(offset, heuristicAreaSize);\n    if (detectionString === getValues(slice, fieldTypes.ASCII, detectionString.length, offset)) {\n      const valuesString = getValues(slice, fieldTypes.ASCII, heuristicAreaSize, offset);\n      const firstLine = valuesString.split('\\n')[0];\n      const metadataSize = Number(firstLine.split('=')[1].split(' ')[0]) + firstLine.length;\n      if (metadataSize > heuristicAreaSize) {\n        slice = await this.getSlice(offset, metadataSize);\n      }\n      const fullString = getValues(slice, fieldTypes.ASCII, metadataSize, offset);\n      this.ghostValues = {};\n      fullString\n        .split('\\n')\n        .filter((line) => line.length > 0)\n        .map((line) => line.split('='))\n        .forEach(([key, value]) => {\n          this.ghostValues[key] = value;\n        });\n    }\n    return this.ghostValues;\n  }\n\n  /**\n   * Parse a (Geo)TIFF file from the given source.\n   *\n   * @param {*} source The source of data to parse from.\n   * @param {GeoTIFFOptions} [options] Additional options.\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   */\n  static async fromSource(source, options, signal) {\n    const headerData = (await source.fetch([{ offset: 0, length: 1024 }], signal))[0];\n    const dataView = new DataView64(headerData);\n\n    const BOM = dataView.getUint16(0, 0);\n    let littleEndian;\n    if (BOM === 0x4949) {\n      littleEndian = true;\n    } else if (BOM === 0x4D4D) {\n      littleEndian = false;\n    } else {\n      throw new TypeError('Invalid byte order value.');\n    }\n\n    const magicNumber = dataView.getUint16(2, littleEndian);\n    let bigTiff;\n    if (magicNumber === 42) {\n      bigTiff = false;\n    } else if (magicNumber === 43) {\n      bigTiff = true;\n      const offsetByteSize = dataView.getUint16(4, littleEndian);\n      if (offsetByteSize !== 8) {\n        throw new Error('Unsupported offset byte-size.');\n      }\n    } else {\n      throw new TypeError('Invalid magic number.');\n    }\n\n    const firstIFDOffset = bigTiff\n      ? dataView.getUint64(8, littleEndian)\n      : dataView.getUint32(4, littleEndian);\n    return new GeoTIFF(source, littleEndian, bigTiff, firstIFDOffset, options);\n  }\n\n  /**\n   * Closes the underlying file buffer\n   * N.B. After the GeoTIFF has been completely processed it needs\n   * to be closed but only if it has been constructed from a file.\n   */\n  close() {\n    if (typeof this.source.close === 'function') {\n      return this.source.close();\n    }\n    return false;\n  }\n}\n\nexport { GeoTIFF };\nexport default GeoTIFF;\n\n/**\n * Wrapper for GeoTIFF files that have external overviews.\n * @augments GeoTIFFBase\n */\nclass MultiGeoTIFF extends GeoTIFFBase {\n  /**\n   * Construct a new MultiGeoTIFF from a main and several overview files.\n   * @param {GeoTIFF} mainFile The main GeoTIFF file.\n   * @param {GeoTIFF[]} overviewFiles An array of overview files.\n   */\n  constructor(mainFile, overviewFiles) {\n    super();\n    this.mainFile = mainFile;\n    this.overviewFiles = overviewFiles;\n    this.imageFiles = [mainFile].concat(overviewFiles);\n\n    this.fileDirectoriesPerFile = null;\n    this.fileDirectoriesPerFileParsing = null;\n    this.imageCount = null;\n  }\n\n  async parseFileDirectoriesPerFile() {\n    const requests = [this.mainFile.parseFileDirectoryAt(this.mainFile.firstIFDOffset)]\n      .concat(this.overviewFiles.map((file) => file.parseFileDirectoryAt(file.firstIFDOffset)));\n\n    this.fileDirectoriesPerFile = await Promise.all(requests);\n    return this.fileDirectoriesPerFile;\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    await this.getImageCount();\n    await this.parseFileDirectoriesPerFile();\n    let visited = 0;\n    let relativeIndex = 0;\n    for (let i = 0; i < this.imageFiles.length; i++) {\n      const imageFile = this.imageFiles[i];\n      for (let ii = 0; ii < this.imageCounts[i]; ii++) {\n        if (index === visited) {\n          const ifd = await imageFile.requestIFD(relativeIndex);\n          return new GeoTIFFImage(\n            ifd.fileDirectory, ifd.geoKeyDirectory,\n            imageFile.dataView, imageFile.littleEndian, imageFile.cache, imageFile.source,\n          );\n        }\n        visited++;\n        relativeIndex++;\n      }\n      relativeIndex = 0;\n    }\n\n    throw new RangeError('Invalid image index');\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    if (this.imageCount !== null) {\n      return this.imageCount;\n    }\n    const requests = [this.mainFile.getImageCount()]\n      .concat(this.overviewFiles.map((file) => file.getImageCount()));\n    this.imageCounts = await Promise.all(requests);\n    this.imageCount = this.imageCounts.reduce((count, ifds) => count + ifds, 0);\n    return this.imageCount;\n  }\n}\n\nexport { MultiGeoTIFF };\n\n/**\n * Creates a new GeoTIFF from a remote URL.\n * @param {string} url The URL to access the image from\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromUrl(url, options = {}, signal) {\n  return GeoTIFF.fromSource(makeRemoteSource(url, options), signal);\n}\n\n/**\n * Creates a new GeoTIFF from a custom {@link BaseClient}.\n * @param {BaseClient} client The client.\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromCustomClient(client, options = {}, signal) {\n  return GeoTIFF.fromSource(makeCustomSource(client, options), signal);\n}\n\n/**\n * Construct a new GeoTIFF from an\n * [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}.\n * @param {ArrayBuffer} arrayBuffer The data to read the file from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromArrayBuffer(arrayBuffer, signal) {\n  return GeoTIFF.fromSource(makeBufferSource(arrayBuffer), signal);\n}\n\n/**\n * Construct a GeoTIFF from a local file path. This uses the node\n * [filesystem API]{@link https://nodejs.org/api/fs.html} and is\n * not available on browsers.\n *\n * N.B. After the GeoTIFF has been completely processed it needs\n * to be closed but only if it has been constructed from a file.\n * @param {string} path The file path to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromFile(path, signal) {\n  return GeoTIFF.fromSource(makeFileSource(path), signal);\n}\n\n/**\n * Construct a GeoTIFF from an HTML\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob} or\n * [File]{@link https://developer.mozilla.org/en-US/docs/Web/API/File}\n * object.\n * @param {Blob|File} blob The Blob or File object to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromBlob(blob, signal) {\n  return GeoTIFF.fromSource(makeFileReaderSource(blob), signal);\n}\n\n/**\n * Construct a MultiGeoTIFF from the given URLs.\n * @param {string} mainUrl The URL for the main file.\n * @param {string[]} overviewUrls An array of URLs for the overview images.\n * @param {Object} [options] Additional options to pass to the source.\n *                           See [makeRemoteSource]{@link module:source.makeRemoteSource}\n *                           for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<MultiGeoTIFF>} The resulting MultiGeoTIFF file.\n */\nexport async function fromUrls(mainUrl, overviewUrls = [], options = {}, signal) {\n  const mainFile = await GeoTIFF.fromSource(makeRemoteSource(mainUrl, options), signal);\n  const overviewFiles = await Promise.all(\n    overviewUrls.map((url) => GeoTIFF.fromSource(makeRemoteSource(url, options))),\n  );\n\n  return new MultiGeoTIFF(mainFile, overviewFiles);\n}\n\n/**\n * Main creating function for GeoTIFF files.\n * @param {(Array)} array of pixel values\n * @returns {metadata} metadata\n */\nexport function writeArrayBuffer(values, metadata) {\n  return writeGeotiff(values, metadata);\n}\n\nexport { Pool };\nexport { GeoTIFFImage };\nexport { BaseClient, BaseResponse };\n", "/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  Pool,\n  globals as geotiffGlobals,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n} from 'geotiff';\nimport {\n  Projection,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {clamp} from '../math.js';\nimport {getCenter, getIntersection} from '../extent.js';\nimport {error as logError} from '../console.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\nconst defaultTileSize = 256;\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox();\n  } catch (_) {\n    return [0, 0, image.getWidth(), image.getHeight()];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch (_) {\n    return [0, image.getHeight()];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch (_) {\n    return [\n      referenceImage.getWidth() / image.getWidth(),\n      referenceImage.getHeight() / image.getHeight(),\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (\n    geoKeys.ProjectedCSTypeGeoKey &&\n    geoKeys.ProjectedCSTypeGeoKey !== 32767\n  ) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey && geoKeys.GeographicTypeGeoKey !== 32767) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: null,\n      opaque: options.opaque,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        logError(error);\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Determine the projection of the images in this GeoTIFF.\n   * The default implementation looks at the ProjectedCSTypeGeoKey and the GeographicTypeGeoKey\n   * of each image in turn.\n   * You can override this method in a subclass to support more projections.\n   *\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   */\n  determineProjection(sources) {\n    const firstSource = sources[0];\n    for (let i = firstSource.length - 1; i >= 0; --i) {\n      const image = firstSource[i];\n      const projection = getProjection(image);\n      if (projection) {\n        this.projection = projection;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n\n        // request larger blocks for untiled layouts\n        if (\n          sourceTileSize[0] !== sourceTileSize[1] &&\n          sourceTileSize[1] < defaultTileSize\n        ) {\n          sourceTileSize[0] = defaultTileSize;\n          sourceTileSize[1] = defaultTileSize;\n        }\n\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor)\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      this.determineProjection(sources);\n    }\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    const zoom = 1;\n    if (resolutions.length === 2) {\n      resolutions = [resolutions[0], resolutions[1], resolutions[1] / 2];\n    } else if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0], resolutions[0] / 2];\n    }\n\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(extent), this.projection),\n      extent: toUserExtent(extent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        logError(error);\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n", "/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 =\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 =\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 =\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n        : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return ['jpg', 'png', 'gif'].includes(format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && formats.includes(format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions|undefined} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return undefined;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(false, 61);\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string|undefined} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return undefined;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures|undefined} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return undefined;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options|undefined} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return undefined;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return undefined;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        imageOptions.formats.includes(options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n          ? imageOptions.preferredFormat\n          : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && imageOptions.qualities.includes(options.quality)\n          ? options.quality\n          : imageOptions.qualities.includes('native')\n          ? 'native'\n          : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n", "/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n", "/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction,\n      createCanvasContext2D(1, 1)\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n", "/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n", "/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const marginWidth = ceil(((this.ratio_ - 1) * viewWidth) / 2, DECIMALS);\n    const requestWidth = viewWidth + 2 * marginWidth;\n    const marginHeight = ceil(((this.ratio_ - 1) * viewHeight) / 2, DECIMALS);\n    const requestHeight = viewHeight + 2 * marginHeight;\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_,\n      this.context_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n", "/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n", "/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n", "/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n", "/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n", "/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {Layer} from 'ol/layer';\nimport {Source} from 'ol/source';\nimport LayerRenderer from 'ol/renderer/Layer';\nimport {TileSourceEvent} from 'ol/source/Tile';\n\nimport {default as RLayer, RLayerProps} from './RLayer';\n\n/**\n * @propsfor RLayerRaster\n */\nexport interface RLayerRasterProps extends RLayerProps {\n    /** Triggered when all currently visible tiles have finished loading */\n    onTileLoadEnd?: (this: RLayerRaster<RLayerRasterProps>, e: TileSourceEvent) => void;\n    /** Called when a tile starts loading */\n    onTileLoadStart?: (this: RLayerRaster<RLayerRasterProps>, e: TileSourceEvent) => void;\n    /** Called when tile loading results in an error */\n    onTileLoadError?: (this: RLayerRaster<RLayerRasterProps>, e: TileSourceEvent) => void;\n}\n\n/** The common base of all tiled layers, not meant to be used directly */\nexport default class RLayerRaster<P extends RLayerRasterProps> extends RLayer<P> {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ol: Layer<Source, LayerRenderer<any>>;\n    source: Source;\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {Tile as LayerTile} from 'ol/layer';\nimport {XYZ} from 'ol/source';\nimport TileGrid from 'ol/tilegrid/TileGrid';\n\nimport {RContextType} from '../context';\nimport {default as RLayerRaster, RLayerRasterProps} from './RLayerRaster';\n\n/**\n * @propsfor RLayerTile\n */\nexport interface RLayerTileProps extends RLayerRasterProps {\n    /** An URL for loading the tiles with the usual {x}{y}{z} semantics */\n    url?: string;\n    /**\n     * Custom OpenLayers TileGrid for sources that do not cover the world\n     * or use non-standard zoom levels\n     * Take care to pass a constant object, because otherwise\n     * the layer must be recreated at every render\n     * (ie pass a constant variable, not an anonymous {})\n     */\n    tileGrid?: TileGrid;\n    /**\n     * By default, OpenLayers uses interpolation to smooth images when zooming.\n     * Setting this value to true will override that.\n     */\n    noIterpolation?: boolean;\n    /**\n     * The `crossOrigin` attribute for loaded images.  Note that\n     * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n     * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n     */\n    crossOrigin?: string | null;\n}\n\n/**\n * A layer with XYZ raster tiles\n *\n * Requires an `RMap` context\n */\nexport default class RLayerTile extends RLayerRaster<RLayerTileProps> {\n    ol: LayerTile<XYZ>;\n    source: XYZ;\n\n    constructor(props: Readonly<RLayerTileProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.createSource();\n        this.ol = new LayerTile({source: this.source});\n        this.eventSources = [this.ol, this.source];\n    }\n\n    createSource(): void {\n        this.source = new XYZ({\n            url: this.props.url,\n            interpolate: !this.props.noIterpolation,\n            projection: this.props.projection,\n            tileGrid: this.props.tileGrid,\n            crossOrigin: this.props.crossOrigin\n        });\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerTileProps): void {\n        super.refresh(prevProps);\n        if (prevProps?.tileGrid !== this.props.tileGrid || prevProps?.url !== this.props.url) {\n            this.createSource();\n            this.ol.setSource(this.source);\n            this.attachOldEventHandlers(this.source);\n        }\n    }\n}\n", "import React from 'react';\nimport {Feature, MapBrowserEvent} from 'ol';\nimport {LoadingStrategy, VectorSourceEvent} from 'ol/source/Vector';\nimport RenderEvent from 'ol/render/Event';\nimport BaseVector from 'ol/layer/BaseVector';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport CanvasVectorTileLayerRenderer from 'ol/renderer/canvas/VectorTileLayer';\nimport CanvasVectorImageLayerRenderer from 'ol/renderer/canvas/VectorImageLayer';\nimport WebGLPointsLayerRenderer from 'ol/renderer/webgl/PointsLayer';\nimport {Vector as SourceVector} from 'ol/source';\nimport FeatureFormat from 'ol/format/Feature';\nimport {FeatureLoader, FeatureUrlFunction} from 'ol/featureloader';\nimport Geometry from 'ol/geom/Geometry';\nimport BaseObject from 'ol/Object';\n\nimport {RContext, RContextType} from '../context';\nimport {default as RLayer, RLayerProps} from './RLayer';\nimport {default as RFeature, RFeatureUIEvent} from '../RFeature';\nimport {default as RStyle, RStyleLike} from '../style/RStyle';\n\nimport debug from '../debug';\n/**\n * @propsfor RLayerBaseVector\n */\nexport interface RLayerBaseVectorProps extends RLayerProps {\n    /** URL for loading features can be a function of type `FeatureUrlFunction`, requires `format` */\n    url?: string | FeatureUrlFunction;\n    /**\n     * Width of the frame around the viewport that shall be rendered too\n     * so that the symbols, whose center is outside of the viewport,\n     * but are partially inside, can be rendered\n     *\n     * this property currently does not support dynamic updates\n     */\n    renderBuffer?: number;\n    /** OpenLayers features that will be loaded\n     *\n     * this property currently does not support dynamic updates\n     */\n    features?: Feature<Geometry>[];\n    /** Format of the features when `url` is used\n     *\n     * this property currently does not support dynamic updates\n     */\n    format?: FeatureFormat;\n    /** Use a custom loader instead of XHR */\n    loader?: FeatureLoader;\n    /** OpenLayers default style for features without `style` */\n    style?: RStyleLike;\n    /**  OpenLayers option to specify LoadingStrategy default is `all` strategy */\n    strategy?: LoadingStrategy;\n    /**\n     * Wrap features around the antimeridian. Cannot be dynamically updated once the layer is created.\n     * @default false\n     */\n    wrapX?: boolean;\n    /** Default onClick handler for loaded features */\n    onClick?: (this: RLayerBaseVector<RLayerBaseVectorProps>, e: RFeatureUIEvent) => boolean | void;\n    /** Called when a feature is added, not called for features\n     * already present at creation, ie loaded via `features` or `url`\n     *\n     * use onFeaturesLoadEnd for features loaded via `url`\n     */\n    onAddFeature?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: VectorSourceEvent<Geometry>\n    ) => boolean | void;\n    /**\n     * Called upon initiating the request for new features\n     */\n    onFeaturesLoadStart?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: VectorSourceEvent<Geometry>\n    ) => boolean | void;\n    /**\n     * Called when the external features have been loaded from `url`\n     *\n     * e.features will contain the new features\n     *\n     * This callback is invoked before the features are loaded\n     */\n    onFeaturesLoadEnd?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: VectorSourceEvent<Geometry>\n    ) => boolean | void;\n    /**\n     * Called on failure while loading features\n     */\n    onFeaturesLoadError?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: VectorSourceEvent<Geometry>\n    ) => boolean | void;\n    /** Default onPointerMove handler for loaded features */\n    onPointerMove?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: RFeatureUIEvent\n    ) => boolean | void;\n    /** Default onPointerEnter handler for loaded features */\n    onPointerEnter?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: RFeatureUIEvent\n    ) => boolean | void;\n    /** Default onPointerLeave handler for loaded features */\n    onPointerLeave?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: RFeatureUIEvent\n    ) => boolean | void;\n    onPostRender?: (\n        this: RLayerBaseVector<RLayerBaseVectorProps>,\n        e: RenderEvent\n    ) => boolean | void;\n    onPreRender?: (this: RLayerBaseVector<RLayerBaseVectorProps>, e: RenderEvent) => boolean | void;\n}\n\n/**\n * An abstract class used for grouping code common to all Vector layers\n *\n * Meant to be extended\n */\nexport default class RLayerBaseVector<P extends RLayerBaseVectorProps> extends RLayer<P> {\n    ol: BaseVector<\n        SourceVector<Geometry>,\n        | CanvasVectorLayerRenderer\n        | CanvasVectorTileLayerRenderer\n        | CanvasVectorImageLayerRenderer\n        | WebGLPointsLayerRenderer\n    >;\n    source: SourceVector<Geometry>;\n    static relayedEvents = {\n        click: 'Click',\n        pointermove: 'PointerMove',\n        pointerenter: 'PointerEnter',\n        pointerleave: 'PointerLeave'\n    };\n\n    constructor(props: Readonly<P>, context?: React.Context<RContextType>) {\n        super(props, context);\n        RFeature.initEventRelay(this.context.map);\n        this.eventSources = this.createSource(props);\n        this.source.on('featuresloadend', this.newFeature);\n        this.source.on('addfeature', this.newFeature);\n        this.attachEventHandlers();\n    }\n\n    createSource(props: Readonly<P>): BaseObject[] {\n        throw new Error('RLayerBaseVector is an abstract class');\n    }\n\n    newFeature = (e: VectorSourceEvent<Geometry>): void => {\n        if (e.feature) this.attachFeatureHandlers([e.feature]);\n        if (e.features) this.attachFeatureHandlers(e.features);\n    };\n\n    attachFeatureHandlers(features: Feature<Geometry>[], prevProps?: P): void {\n        for (const ev of Object.values(RLayerBaseVector.relayedEvents))\n            if (this.props['on' + ev] !== (prevProps && prevProps['on' + ev]))\n                for (const f of features) f.on(ev.toLowerCase() as 'change', this.eventRelay);\n    }\n\n    eventRelay = (e: MapBrowserEvent<UIEvent>): boolean => {\n        if (this.props['on' + RLayerBaseVector.relayedEvents[e.type]])\n            return (\n                this.props['on' + RLayerBaseVector.relayedEvents[e.type]].call(this, e) !== false\n            );\n        return true;\n    };\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        for (const ev of Object.values(RLayerBaseVector.relayedEvents))\n            this.source.forEachFeature((f) => {\n                f.un(ev.toLowerCase() as 'change', this.eventRelay);\n                return false;\n            });\n    }\n\n    refresh(prevProps?: P): void {\n        super.refresh(prevProps);\n        this.attachFeatureHandlers(this.source.getFeatures(), prevProps);\n        if (prevProps?.style !== this.props.style)\n            this.ol.setStyle(RStyle.getStyle(this.props.style));\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='_rlayers_RLayerVector'>\n                <RContext.Provider\n                    value={\n                        {\n                            ...this.context,\n                            layer: this.ol,\n                            source: this.source,\n                            vectorlayer: this.ol,\n                            vectorsource: this.source\n                        } as RContextType\n                    }\n                >\n                    {this.props.children}\n                </RContext.Provider>\n            </div>\n        );\n    }\n}\n", "import React, {PropsWithChildren} from 'react';\nimport {Map as Map, MapBrowserEvent} from 'ol';\nimport {Feature} from 'ol';\nimport BaseVectorLayer from 'ol/layer/BaseVector';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport SourceVector from 'ol/source/Vector';\nimport Geometry from 'ol/geom/Geometry';\nimport BaseEvent from 'ol/events/Event';\nimport {getCenter} from 'ol/extent';\n\nimport {RContext, RContextType} from './context';\nimport {RlayersBase} from './REvent';\nimport RStyle, {RStyleLike} from './style/RStyle';\nimport debug from './debug';\n\nexport class RFeatureUIEvent extends MapBrowserEvent<UIEvent> {\n    target: Feature<Geometry>;\n}\n\nexport class RFeatureBaseEvent extends BaseEvent {\n    target: Feature<Geometry>;\n}\n\n/**\n * @propsfor RFeature\n */\nexport interface RFeatureProps extends PropsWithChildren<unknown> {\n    /** OpenLayers geometry, mutually exclusive with feature */\n    geometry?: Geometry;\n    /** OpenLayers style */\n    style?: RStyleLike;\n    /** A set of properties that can be accessed later by .get()/.getProperties() */\n    properties?: Record<string, unknown>;\n    /**\n     * Bind the RFeature to an OpenLayers Feature, mutually exclusive with geometry\n     *\n     * When bound, the RFeature will automatically update its state when the Feature\n     * changes\n     *\n     * geometry is usually a better choice for a dynamic feature\n     */\n    feature?: Feature<Geometry>;\n    /** Called immediately on click */\n    onClick?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called on single click when the double click timer has expired */\n    onSingleClick?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called on double click */\n    onDblClick?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called on every pointer move when dragging, `e.preventDefault()`\n     * can be used to stop OpenLayers from also panning the map */\n    onPointerDrag?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called when the object is released */\n    onPointerDragEnd?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called on every pointer movement over the RFeature, use sparingly */\n    onPointerMove?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called once when the pointer moves over the RFeature */\n    onPointerEnter?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called once when the pointer moves out of the RFeature */\n    onPointerLeave?: (this: RFeature, e: RFeatureUIEvent) => boolean | void;\n    /** Called on every change */\n    onChange?: (this: RFeature, e: RFeatureBaseEvent) => void;\n}\n\ntype FeatureRef = {\n    feature: Feature<Geometry>;\n    layer: BaseVectorLayer<SourceVector<Geometry>, CanvasVectorLayerRenderer>;\n};\n\n/**\n * Component for a single vector feature\n *\n * Vector features can be either\n *\n * * implicit, when loaded from a file as props of a `RLayerVector`\n * * explicit, when declared as JSX with this component\n *\n * Requires a vector layer context\n *\n * Provides a location context\n *\n * [Example for explicit RFeatures](https://mmomtchev.github.io/rlayers/#/overlays)\n *\n * [Example for implicit RFeatures](https://mmomtchev.github.io/rlayers/#/RFeatures)\n *\n */\nexport default class RFeature extends RlayersBase<RFeatureProps, Record<string, never>> {\n    static pointerEvents: ('click' | 'pointerdrag' | 'pointermove' | 'singleclick' | 'dblclick')[] =\n        ['click', 'pointerdrag', 'pointermove', 'singleclick', 'dblclick'];\n    static lastFeaturesEntered: FeatureRef[] = [];\n    static lastFeaturesDragged: FeatureRef[] = [];\n    static hitTolerance = 3;\n    ol: Feature<Geometry>;\n    onchange: () => boolean | void;\n\n    constructor(props: Readonly<RFeatureProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        if (!this?.context?.vectorlayer)\n            throw new Error('An RFeature must be part of a vector layer');\n        if (props.feature) this.ol = props.feature;\n        else\n            this.ol = new Feature({\n                ...(props.properties ?? {}),\n                geometry: props.geometry,\n                style: RStyle.getStyle(props.style)\n            });\n        RFeature.initEventRelay(this.context.map);\n        this.onchange = () => this.forceUpdate();\n    }\n\n    static initEventRelay(map: Map): void {\n        // These are reinstalled at every new feature\n        // but since eventRelay is static this doesn't grow the listeners array\n        for (const ev of RFeature.pointerEvents) map.on(ev, RFeature.eventRelay);\n    }\n\n    static dispatchEvent(fr: FeatureRef, event: RFeatureUIEvent): boolean {\n        if (!fr.feature) return true;\n        if (fr.feature.dispatchEvent) return fr.feature.dispatchEvent(event);\n        if (!event.target) event.target = fr.feature;\n        if (fr.layer?.get('_on' + event.type)) return fr.layer.get('_on' + event.type)(event);\n        return true;\n    }\n\n    static eventRelay(e: RFeatureUIEvent): boolean {\n        const triggered: FeatureRef[] = [];\n        e.map.forEachFeatureAtPixel(\n            e.pixel,\n            (\n                f: Feature<Geometry>,\n                l: BaseVectorLayer<SourceVector<Geometry>, CanvasVectorLayerRenderer>\n            ) => triggered.push({feature: f, layer: l}) && false,\n            {\n                hitTolerance: RFeature.hitTolerance\n            }\n        );\n\n        if (e.dragging) {\n            if (!RFeature.lastFeaturesDragged.length) RFeature.lastFeaturesDragged = [...triggered];\n            for (const fr of RFeature.lastFeaturesDragged)\n                if (!triggered.find((f) => f.feature === fr.feature)) triggered.push(fr);\n        } else {\n            for (const fr of RFeature.lastFeaturesDragged)\n                RFeature.dispatchEvent(\n                    fr,\n                    new RFeatureUIEvent('pointerdragend', e.map, e.originalEvent)\n                );\n            RFeature.lastFeaturesDragged = [];\n        }\n\n        if (e.type === 'pointermove') {\n            // For all features previously entered, check if the pointer is still over them\n            // Send pointerleave and then remove those that are not under the pointer anymore\n            for (const fr of RFeature.lastFeaturesEntered)\n                if (!triggered.find((f) => f.feature === fr.feature)) {\n                    RFeature.dispatchEvent(\n                        fr,\n                        new RFeatureUIEvent('pointerleave', e.map, e.originalEvent)\n                    );\n                    fr.feature = null;\n                    fr.layer = null;\n                }\n            RFeature.lastFeaturesEntered = RFeature.lastFeaturesEntered.filter((fr) => fr.feature);\n\n            // For all features triggered on this cycle, check if they were previous entered\n            // Send pointerenter and then register all the new feature\n            for (const fr of triggered) {\n                if (!RFeature.lastFeaturesEntered.find((f) => f.feature === fr.feature)) {\n                    RFeature.dispatchEvent(\n                        fr,\n                        new RFeatureUIEvent('pointerenter', e.map, e.originalEvent)\n                    );\n                    RFeature.lastFeaturesEntered.push(fr);\n                }\n            }\n        }\n\n        // Normal re-dispatch for everything else\n        // Stop on false\n        for (const fr of triggered)\n            if (\n                RFeature.dispatchEvent(fr, new RFeatureUIEvent(e.type, e.map, e.originalEvent)) ===\n                false\n            )\n                return false;\n        return true;\n    }\n\n    refresh(prevProps?: RFeatureProps): void {\n        super.refresh(prevProps);\n        if (this.props.feature !== undefined && this.props.feature !== this.ol) {\n            debug('replacing bound feature', this.ol);\n            this.componentWillUnmount();\n            this.ol = this.props.feature;\n            this.componentDidMount();\n        }\n        if (this.props.properties !== prevProps?.properties)\n            this.ol.setProperties(this.props.properties);\n        if (this.props.geometry !== prevProps?.geometry) this.ol.setGeometry(this.props.geometry);\n        if (this.props.style !== prevProps?.style)\n            this.ol.setStyle(RStyle.getStyle(this.props.style));\n    }\n\n    componentDidMount(): void {\n        debug('didMount', this.ol);\n        super.componentDidMount();\n        this.ol.on('change', this.onchange);\n        this.context.vectorsource.addFeature(this.ol);\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.ol.un('change', this.onchange);\n        this.context.vectorsource.removeFeature(this.ol);\n    }\n\n    render(): JSX.Element {\n        const extent = this.ol?.getGeometry()?.getExtent();\n        const center = extent && getCenter(extent);\n        return (\n            <div className='_rlayers_RFeature'>\n                <RContext.Provider\n                    value={\n                        {\n                            map: this.context.map,\n                            layer: this.context.vectorlayer,\n                            source: this.context.vectorsource,\n                            feature: this.ol,\n                            location: center\n                        } as RContextType\n                    }\n                >\n                    {this.props.children}\n                </RContext.Provider>\n            </div>\n        );\n    }\n}\n", "import React from 'react';\nimport {Map as Map} from 'ol';\nimport {Vector as LayerVector} from 'ol/layer';\nimport {Vector as SourceVector} from 'ol/source';\nimport Geometry from 'ol/geom/Geometry';\n\nimport {RContextType} from '../context';\nimport {default as RLayerBaseVector, RLayerBaseVectorProps} from './RLayerBaseVector';\nimport {default as RStyle} from '../style/RStyle';\nimport BaseObject from 'ol/Object';\nimport debug from '../debug';\n\n/**\n * A vector layer\n *\n * Supports loading of features from external sources\n *\n * Requires an `RMap` context\n *\n * Provides a vector layer context for JSX-declared `RFeature`s\n */\nexport default class RLayerVector extends RLayerBaseVector<RLayerBaseVectorProps> {\n    ol: LayerVector<SourceVector<Geometry>>;\n    source: SourceVector<Geometry>;\n\n    createSource(props: Readonly<RLayerBaseVectorProps>): BaseObject[] {\n        this.source = new SourceVector({\n            features: this.props.features,\n            url: this.props.url,\n            format: this.props.format,\n            loader: this.props.loader,\n            wrapX: this.props.wrapX,\n            strategy: this.props.strategy\n        });\n        this.ol = new LayerVector({\n            ...props,\n            style: RStyle.getStyle(this.props.style),\n            source: this.source\n        });\n        return [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerBaseVectorProps): void {\n        super.refresh(prevProps);\n        if (prevProps?.url !== this.props.url) {\n            this.source.setUrl(this.props.url);\n            this.source.refresh();\n        }\n    }\n}\n", "import React from 'react';\nimport {Map as Map} from 'ol';\nimport {VectorImage as LayerVectorImage} from 'ol/layer';\nimport {Vector as SourceVector} from 'ol/source';\nimport Geometry from 'ol/geom/Geometry';\n\nimport {RContextType} from '../context';\nimport {default as RLayerBaseVector, RLayerBaseVectorProps} from './RLayerBaseVector';\nimport {default as RStyle} from '../style/RStyle';\nimport BaseObject from 'ol/Object';\nimport debug from '../debug';\n\n/**\n * A vector layer\n *\n * Supports loading of features from external sources\n *\n * Requires an `RMap` context\n *\n * Provides a vector layer context for JSX-declared `RFeature`s\n */\nexport default class RLayerVectorImage extends RLayerBaseVector<RLayerBaseVectorProps> {\n    ol: LayerVectorImage<SourceVector<Geometry>>;\n    source: SourceVector<Geometry>;\n\n    createSource(props: Readonly<RLayerBaseVectorProps>): BaseObject[] {\n        this.source = new SourceVector({\n            features: this.props.features,\n            url: this.props.url,\n            format: this.props.format,\n            loader: this.props.loader,\n            wrapX: this.props.wrapX,\n            strategy: this.props.strategy\n        });\n        this.ol = new LayerVectorImage({\n            ...props,\n            style: RStyle.getStyle(this.props.style),\n            source: this.source\n        });\n        return [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerBaseVectorProps): void {\n        super.refresh(prevProps);\n        if (prevProps?.url !== this.props.url) {\n            this.source.setUrl(this.props.url);\n            this.source.refresh();\n        }\n    }\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {Tile as LayerTile} from 'ol/layer';\nimport {OSM} from 'ol/source';\n\nimport {RContextType} from '../context';\nimport {default as LayerRaster, RLayerRasterProps} from './RLayerRaster';\n\n/**\n * @propsfor ROSM\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ROSMProps extends RLayerRasterProps {}\n\n/**\n * An OpenStreetMap layer\n *\n * Requires an `RMap` context\n */\nexport default class ROSM extends LayerRaster<ROSMProps> {\n    source: OSM;\n\n    constructor(props: Readonly<ROSMProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.source = new OSM();\n        this.ol = new LayerTile({source: this.source});\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: ROSMProps): void {\n        super.refresh(prevProps);\n        this.ol.setProperties({label: 'OpenStreetMap'});\n    }\n}\n", "/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n", "/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n", "/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n", "/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n", "/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n", "/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {Tile as LayerTile} from 'ol/layer';\nimport {default as SourceWMTS, optionsFromCapabilities, Options} from 'ol/source/WMTS';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport BaseEvent from 'ol/events/Event';\n\nimport {RContextType} from '../context';\nimport {default as RLayerRaster, RLayerRasterProps} from './RLayerRaster';\nimport debug from '../debug';\n\n/**\n * @propsfor RLayerWMTS\n */\nexport interface RLayerWMTSProps extends RLayerRasterProps {\n    /** URL for the WMTS getCapabilites request */\n    url: string;\n    /** Layer name */\n    layer: string;\n    /** Called by OpenLayers when the layer is ready to start rendering */\n    onSourceReady?: (this: RLayerWMTS, e: BaseEvent) => void;\n    /** Called each time the component is rerendered if/after the WMTS capabilities have been acquired */\n    onCapabilities?: (this: RLayerWMTS, opt: Options) => void;\n}\n\n/**\n * A layer for WMTS-compatible raster tile servers\n *\n * Requires an `RMap` context\n */\nexport default class RLayerWMTS extends RLayerRaster<RLayerWMTSProps> {\n    ol: LayerTile<SourceWMTS>;\n    source: SourceWMTS;\n    parser: WMTSCapabilities;\n    options: Options;\n\n    constructor(props: Readonly<RLayerWMTSProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new LayerTile({source: this.source});\n        this.parser = new WMTSCapabilities();\n        this.createSource();\n    }\n\n    createSource(): Promise<SourceWMTS> {\n        debug('createSource', this);\n        return fetch(this.props.url)\n            .then((r) => r.text())\n            .then((text) => {\n                const caps = this.parser.read(text);\n                this.options = optionsFromCapabilities(caps, {\n                    layer: this.props.layer\n                });\n                if (this.props.attributions) this.options.attributions = this.props.attributions;\n                this.options.crossOrigin = '';\n                if (this.props.projection) this.options.projection = this.props.projection;\n                this.options.wrapX = false;\n                this.source = new SourceWMTS(this.options);\n                this.ol.setSource(this.source);\n                this.eventSources = [this.ol, this.source];\n                if (this.props.onCapabilities) this.props.onCapabilities.call(this, this.options);\n                return this.source;\n            })\n            .catch((e) => {\n                // eslint-disable-next-line no-console\n                console.error('failed loading WMTS', this.props.url, this.props.layer, e);\n                this.source = undefined;\n                return null;\n            });\n    }\n\n    refresh(prevProps?: RLayerWMTSProps): void {\n        super.refresh();\n        if (prevProps?.url !== this.props.url || prevProps?.layer !== this.props.layer) {\n            this.createSource().then(() => {\n                this.ol.setSource(this.source);\n                this.attachOldEventHandlers(this.source);\n            });\n        } else {\n            if (this.props.onCapabilities) this.props.onCapabilities.call(this, this.options);\n        }\n    }\n}\n", "import ImageLayer from 'ol/layer/Image';\nimport ImageWMS from 'ol/source/ImageWMS';\n\nimport React from 'react';\nimport {RContextType} from '../context';\nimport {default as RLayerRaster, RLayerRasterProps} from './RLayerRaster';\n\n/**\n * @propsfor RLayerWMS\n */\nexport interface RLayerWMSProps extends RLayerRasterProps {\n    params?: Record<string, unknown>;\n    url: string;\n}\n\n/**\n * A layer that renders WMS maps as a single image\n */\nexport default class RLayerWMS extends RLayerRaster<RLayerWMSProps> {\n    ol: ImageLayer<ImageWMS>;\n    source: ImageWMS;\n\n    constructor(props: Readonly<RLayerWMSProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.createSource();\n        this.ol = new ImageLayer({source: this.source});\n        this.eventSources = [this.ol, this.source];\n    }\n\n    createSource(): void {\n        const {params, url} = this.props;\n        const options = {params, url};\n\n        this.source = new ImageWMS(options);\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerWMSProps): void {\n        super.refresh(prevProps);\n        this.createSource();\n        this.ol.setSource(this.source);\n        this.attachOldEventHandlers(this.source);\n    }\n}\n", "import LayerImage from 'ol/layer/Image';\nimport SourceImage from 'ol/source/ImageStatic';\nimport {ProjectionLike} from 'ol/proj';\nimport {Extent} from 'ol/extent';\nimport {Size} from 'ol/size';\n\nimport React from 'react';\nimport {RContextType} from '../context';\nimport {default as RLayer, RLayerProps} from './RLayer';\n\n/**\n * @propsfor RLayerImage\n */\nexport interface RLayerImageProps extends RLayerProps {\n    /** url of the image */\n    url: string;\n    /** Extent of the map, cannot be dynamically modified */\n    extent: Extent;\n    /**\n     * Projection for the returned coordinates\n     * @default viewProjection\n     */\n    projection?: ProjectionLike;\n    /** image size if the auto-detection fails */\n    size?: Size;\n}\n\n/**\n * A layer that renders a static image\n */\nexport default class RLayerImage extends RLayer<RLayerImageProps> {\n    ol: LayerImage<SourceImage>;\n    source: SourceImage;\n\n    constructor(props: Readonly<RLayerImageProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.createSource();\n        this.ol = new LayerImage({source: this.source});\n        this.eventSources = [this.ol, this.source];\n    }\n\n    createSource(): void {\n        const options = {\n            url: this.props.url,\n            projection: this.props.projection,\n            imageExtent: this.props.extent,\n            imageSize: this.props.size\n        };\n\n        this.source = new SourceImage(options);\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerImageProps): void {\n        super.refresh(prevProps);\n        if (this.props.url && prevProps?.url !== this.props.url) {\n            this.createSource();\n            this.ol.setSource(this.source);\n            this.eventSources = [this.ol, this.source];\n            this.attachOldEventHandlers(this.source);\n        }\n    }\n}\n", "import LayerGraticule from 'ol/layer/Graticule';\nimport {Extent} from 'ol/extent';\n\nimport React from 'react';\nimport {RContextType} from '../context';\nimport {default as RLayer, RLayerProps} from './RLayer';\nimport {RStyle, RStyleLike} from 'rlayers/style';\nimport debug from 'rlayers/debug';\n\nexport type Formatter = (value: number) => string;\n\n/**\n * @propsfor RLayerGraticule\n */\nexport interface RLayerGraticuleProps extends RLayerProps {\n    /** CSS class */\n    className?: string;\n    /** Extent of the map, cannot be dynamically modified */\n    extent?: Extent;\n    /**\n     * Maximum number of meridians / parallels\n     * @default 100\n     */\n    maxLines?: number;\n    /**\n     * Target size of the graticule cells\n     * @default 100\n     */\n    targetSize?: number;\n    /**\n     * Stroke style for the lines\n     */\n    strokeStyle?: RStyleLike;\n    /**\n     * Show labels\n     * @default false\n     */\n    showLabels?: boolean;\n    /**\n     * Formatter for the longitude labels\n     */\n    lonLabelFormatter?: Formatter;\n    /**\n     * Formatter for the latitude labels\n     */\n    latLabelFormatter?: Formatter;\n    /**\n     * Longitude labels style\n     */\n    lonLabelStyle?: RStyleLike;\n    /**\n     * Latitude labels style\n     */\n    latLabelStyle?: RStyleLike;\n    /**\n     * Intervals (in degrees) for the graticule\n     * @default [90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]\n     */\n    intervals?: number[];\n    /**\n     * Wrap around the antimeridian\n     * @default true\n     */\n    wrap?: boolean;\n}\n\n/**\n * A layer that renders a static image\n */\nexport default class RLayerGraticule extends RLayer<RLayerGraticuleProps> {\n    ol: LayerGraticule;\n\n    constructor(props: Readonly<RLayerGraticuleProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.createSource();\n    }\n\n    createSource(): void {\n        const stroke = RStyle.getStyleStatic(this.props.strokeStyle)?.getStroke?.();\n        const lonText = RStyle.getStyleStatic(this.props.lonLabelStyle)?.getText?.();\n        const latText = RStyle.getStyleStatic(this.props.latLabelStyle)?.getText?.();\n        this.ol = new LayerGraticule({\n            ...this.props,\n            strokeStyle: stroke,\n            lonLabelStyle: lonText,\n            latLabelStyle: latText\n        });\n        this.eventSources = [this.ol];\n        return;\n    }\n\n    refresh(prevProps?: RLayerGraticuleProps): void {\n        super.refresh(prevProps);\n        const old = this.context.map.removeLayer(this.ol);\n        this.createSource();\n        this.attachOldEventHandlers(this.ol);\n        if (old) this.context.map.addLayer(this.ol);\n    }\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {Tile as LayerTile} from 'ol/layer';\nimport {TileJSON} from 'ol/source';\nimport TileGrid from 'ol/tilegrid/TileGrid';\n\nimport {RContextType} from '../context';\nimport {default as RLayerRaster, RLayerRasterProps} from './RLayerRaster';\n\n/**\n * @propsfor RLayerTileJSON\n */\nexport interface RLayerTileJSONProps extends RLayerRasterProps {\n    /** An URL for loading the tiles with the usual {x}{y}{z} semantics */\n    url?: string;\n    projection?: never;\n}\n\n/**\n * A layer with data from TileJSON tiles\n *\n * Requires an `RMap` context\n */\nexport default class RLayerTileJSON extends RLayerRaster<RLayerTileJSONProps> {\n    ol: LayerTile<TileJSON>;\n    source: TileJSON;\n\n    constructor(props: Readonly<RLayerTileJSONProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.source = new TileJSON({\n            url: this.props.url\n        });\n        this.ol = new LayerTile({source: this.source});\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerTileJSONProps): void {\n        super.refresh(prevProps);\n        if (this.props.url && prevProps?.url !== this.props.url) {\n            this.source.setUrl(this.props.url);\n            this.source.refresh();\n        }\n    }\n}\n", "import TileLayer from 'ol/layer/Tile';\nimport TileWMS from 'ol/source/TileWMS';\n\nimport React from 'react';\nimport {RContextType} from '../context';\nimport {default as RLayerRaster, RLayerRasterProps} from './RLayerRaster';\n\n// TileWMS options from https://openlayers.org/en/latest/apidoc/module-ol_source_TileWMS-TileWMS.html\n/**\n * @propsfor RLayerTileWMS\n */\nexport interface RLayerTileWMSProps extends RLayerRasterProps {\n    params?: Record<string, unknown>;\n    url: string;\n}\n\n/**\n * Tiled layer using WMS\n */\nexport default class RLayerTileWMS extends RLayerRaster<RLayerTileWMSProps> {\n    ol: TileLayer<TileWMS>;\n    source: TileWMS;\n\n    constructor(props: Readonly<RLayerTileWMSProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.createSource();\n        this.ol = new TileLayer({source: this.source});\n        this.eventSources = [this.ol, this.source];\n    }\n\n    createSource(): void {\n        const {params, url, projection} = this.props;\n        const options = {params, url, projection};\n\n        this.source = new TileWMS(options);\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerTileWMSProps): void {\n        super.refresh(prevProps);\n        this.createSource();\n        this.ol.setSource(this.source);\n        this.attachOldEventHandlers(this.source);\n    }\n}\n", "import React from 'react';\nimport {Map as Map} from 'ol';\nimport {Tile as LayerTile} from 'ol/layer';\nimport {Stamen} from 'ol/source';\n\nimport {RContextType} from '../context';\nimport {default as RLayerRaster, RLayerRasterProps} from './RLayerRaster';\n\n/**\n * @propsfor RLayerStamen\n */\nexport interface RLayerStamenProps extends RLayerRasterProps {\n    /** Stamen layer name */\n    layer?: string;\n}\n\n/**\n * A ready to use interface for Stamen's map service\n *\n * Requires an `RMap` context\n */\nexport default class RLayerStamen extends RLayerRaster<RLayerStamenProps> {\n    ol: LayerTile<Stamen>;\n    source: Stamen;\n\n    constructor(props: Readonly<RLayerStamenProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.source = new Stamen({layer: this.props.layer});\n        this.ol = new LayerTile({source: this.source});\n        this.eventSources = [this.ol, this.source];\n    }\n}\n", "import React from 'react';\nimport {Feature} from 'ol';\nimport {Heatmap as LayerHeatmap} from 'ol/layer';\nimport {Vector as SourceVector} from 'ol/source';\nimport BaseObject from 'ol/Object';\nimport {Point} from 'ol/geom';\n\nimport {default as RLayerBaseVector, RLayerBaseVectorProps} from './RLayerBaseVector';\n\n/**\n * @propsfor RLayerHeatmap\n */\nexport interface RLayerHeatmapProps extends RLayerBaseVectorProps {\n    /** Blurring */\n    blur?: number;\n    /** Radius */\n    radius?: number;\n    /** Weight function for each RFeature, weight goes from 0 to 1 */\n    weight?: (f: Feature<Point>) => number;\n    /**\n     * OpenLayers features that will be loaded\n     *\n     * this property currently does not support dynamic updates\n     */\n    features?: Feature<Point>[];\n}\n\n/** A vector layer that renders its RFeatures as a heatmap\n *\n * Compatible with RLayerVector\n *\n * Requires an `RMap` context\n *\n * Provides a vector layer for JSX-declared RFeatures\n */\nexport default class RLayerHeatmap extends RLayerBaseVector<RLayerHeatmapProps> {\n    ol: LayerHeatmap;\n    source: SourceVector<Point>;\n\n    createSource(props: Readonly<RLayerHeatmapProps>): BaseObject[] {\n        this.source = new SourceVector({\n            features: this.props.features,\n            url: this.props.url,\n            format: this.props.format,\n            loader: this.props.loader,\n            wrapX: this.props.wrapX,\n            strategy: this.props.strategy\n        });\n        this.ol = new LayerHeatmap({...props, source: this.source});\n        return [this.ol, this.source];\n    }\n\n    refresh(prev?: RLayerHeatmapProps): void {\n        super.refresh(prev);\n        if (prev?.blur !== this.props.blur) this.ol.setBlur(this.props.blur);\n        if (prev?.radius !== this.props.radius) this.ol.setRadius(this.props.radius);\n    }\n}\n", "import React from 'react';\nimport {Map, Feature} from 'ol';\nimport {Vector as LayerVector} from 'ol/layer';\nimport {Vector as SourceVector, Cluster as SourceCluster} from 'ol/source';\nimport Geometry from 'ol/geom/Geometry';\nimport BaseObject from 'ol/Object';\n\nimport {RContext, RContextType} from '../context';\nimport {default as RLayerBaseVector, RLayerBaseVectorProps} from './RLayerBaseVector';\nimport {default as RStyle} from '../style/RStyle';\n\n/**\n * @propsfor RLayerCluster\n */\nexport interface RLayerClusterProps extends RLayerBaseVectorProps {\n    /** Clustering distance */\n    distance?: number;\n}\n\n/** A vector layer that clusters its RFeatures\n *\n * Compatible with RLayerVector\n *\n * Requires an `RMap` context\n *\n * Not compatible with a vector layer context for JSX-declared RFeatures\n */\nexport default class RLayerCluster extends RLayerBaseVector<RLayerClusterProps> {\n    ol: LayerVector<SourceCluster>;\n    source: SourceCluster;\n    cluster: SourceVector<Geometry>;\n\n    createSource(props: Readonly<RLayerClusterProps>): BaseObject[] {\n        this.cluster = new SourceVector({\n            features: this.props.features,\n            url: this.props.url,\n            format: this.props.format,\n            loader: this.props.loader,\n            wrapX: this.props.wrapX,\n            strategy: this.props.strategy\n        });\n        this.source = new SourceCluster({source: this.cluster, distance: this.props.distance});\n        this.ol = new LayerVector({\n            ...props,\n            source: this.source,\n            style: RStyle.getStyle(props.style)\n        });\n        return [this.ol, this.source, this.cluster];\n    }\n\n    refresh(prev?: RLayerClusterProps): void {\n        super.refresh(prev);\n        if (prev?.distance !== this.props.distance) this.source.setDistance(this.props.distance);\n        if (prev?.url !== this.props.url) {\n            this.cluster.setUrl(this.props.url);\n            this.cluster.refresh();\n        }\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='_rlayers_RLayerCluster'>\n                <RContext.Provider\n                    value={\n                        {\n                            ...this.context,\n                            layer: this.ol,\n                            source: this.cluster,\n                            vectorlayer: this.ol,\n                            vectorsource: this.cluster\n                        } as RContextType\n                    }\n                >\n                    {this.props.children}\n                </RContext.Provider>\n            </div>\n        );\n    }\n}\n", "import React from 'react';\nimport {VectorTile as LayerVectorTile} from 'ol/layer';\nimport {VectorTile as SourceVectorTile} from 'ol/source';\nimport FeatureFormat from 'ol/format/Feature';\n\nimport {RContext, RContextType} from '../context';\nimport {default as RLayer, RLayerProps} from './RLayer';\nimport {default as RFeature, RFeatureUIEvent} from '../RFeature';\nimport RStyle, {RStyleLike} from '../style/RStyle';\nimport debug from '../debug';\n\n/**\n * @propsfor RLayerVectorTile\n */\nexport interface RLayerVectorTileProps extends RLayerProps {\n    /** URL for the tiles, normal {x}{y}{z} convention applies */\n    url: string;\n    /**\n     * Style to be used for rendering the features\n     * You can use a dynamic style, but the property value must stay the same\n     * ie switching from a static OpenLayers style to a RefObject is not supported\n     */\n    style?: RStyleLike;\n    /** Vector tile format */\n    format: FeatureFormat;\n    /**\n     * Width of the frame around the viewport that shall be rendered too\n     * so that the symbols, whose center is outside of the viewport,\n     * but are partially inside, can be rendered\n     *\n     * this property currently does not support dynamic updates\n     */\n    renderBuffer?: number;\n    /** onClick handler for loaded features */\n    onClick?: (this: RLayerVectorTile, e: RFeatureUIEvent) => boolean | void;\n    /** onPointerMove handler for loaded features */\n    onPointerMove?: (this: RLayerVectorTile, e: RFeatureUIEvent) => boolean | void;\n    /** onPointerEnter handler for loaded features */\n    onPointerEnter?: (this: RLayerVectorTile, e: RFeatureUIEvent) => boolean | void;\n    /** onPointerLeave handler for loaded features */\n    onPointerLeave?: (this: RLayerVectorTile, e: RFeatureUIEvent) => boolean | void;\n}\n\n/**\n * A vector tile layer\n *\n * Supports loading of features from vector tile servers\n *\n * Only the handlers can be dynamically modified\n *\n * Requires an `RMap` context\n *\n * It does not provide a vector layer context for JSX-declared `RFeature`s\n * and it is not compatible with RLayerVector\n */\nexport default class RLayerVectorTile extends RLayer<RLayerVectorTileProps> {\n    ol: LayerVectorTile;\n    source: SourceVectorTile;\n\n    constructor(props: Readonly<RLayerVectorTileProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.source = new SourceVectorTile({\n            url: this.props.url,\n            format: this.props.format,\n            projection: this.props.projection\n        });\n        this.ol = new LayerVectorTile({\n            style: RStyle.getStyle(this.props.style),\n            source: this.source,\n            renderBuffer: this.props.renderBuffer\n        });\n        this.eventSources = [this.ol, this.source];\n        RFeature.initEventRelay(this.context.map);\n    }\n\n    refresh(prevProps?: RLayerVectorTileProps): void {\n        super.refresh(prevProps);\n        const handlers = Object.keys(this.props)\n            .filter((ev) => ev.startsWith('on'))\n            .reduce((ac, x) => ({...ac, ['_' + x.toLowerCase()]: this.props[x]}), {});\n        this.ol.setProperties(handlers);\n        if (prevProps?.style !== this.props.style)\n            this.ol.setStyle(RStyle.getStyle(this.props.style));\n        if (prevProps?.url !== this.props.url) {\n            this.source.setUrl(this.props.url);\n            this.source.refresh();\n        }\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className='_rlayers_RLayerVectorTile'>\n                <RContext.Provider\n                    value={\n                        {\n                            ...this.context,\n                            layer: this.ol,\n                            vectortilelayer: this.ol\n                        } as RContextType\n                    }\n                >\n                    {this.props.children}\n                </RContext.Provider>\n            </div>\n        );\n    }\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {WebGLTile as LayerTileWebGL} from 'ol/layer';\nimport {TileImage as SourceTile} from 'ol/source';\nimport TileGrid from 'ol/tilegrid/TileGrid';\n\nimport {RContextType} from '../context';\nimport {default as RLayerRaster, RLayerRasterProps} from './RLayerRaster';\n\n/**\n * @propsfor RLayerWebGL\n */\nexport interface RLayerWebGLProps extends RLayerRasterProps {\n    /**\n     * The internal texture cache size in Kb.\n     * This needs to be large enough to render two zoom levels worth of tiles.\n     * @default 512\n     * Cannot be modified once set.\n     */\n    cacheSize?: number;\n}\n\n/**\n * An abstract layer serving as base to the WebGL layers\n *\n * Requires an `RMap` context\n */\nexport default class RLayerWebGL<P extends RLayerWebGLProps> extends RLayerRaster<P> {\n    ol: LayerTileWebGL;\n    source: SourceTile;\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {WebGLTile as LayerTileWebGL} from 'ol/layer';\nimport {XYZ} from 'ol/source';\nimport TileGrid from 'ol/tilegrid/TileGrid';\n\nimport {RContextType} from '../context';\nimport {default as RLayerWebGL, RLayerWebGLProps} from './RLayerWebGL';\n\n/**\n * @propsfor RLayerTileWebGL\n */\nexport interface RLayerTileWebGLProps extends RLayerWebGLProps {\n    /** An URL for loading the tiles with the usual {x}{y}{z} semantics */\n    url?: string;\n    /**\n     * Custom OpenLayers TileGrid for sources that do not cover the world\n     * or use non-standard zoom levels\n     * Take care to pass a constant object, because otherwise\n     * the layer must be recreated at every render\n     * (ie pass a constant variable, not an anonymous {})\n     */\n    tileGrid?: TileGrid;\n    /**\n     * By default, OpenLayers uses interpolation to smooth images when zooming.\n     * Setting this value to true will override that.\n     */\n    noIterpolation?: boolean;\n}\n\n/**\n * A layer with XYZ raster tiles rendered by WebGL\n *\n * Requires an `RMap` context\n */\nexport default class RLayerTileWebGL extends RLayerWebGL<RLayerTileWebGLProps> {\n    ol: LayerTileWebGL;\n    source: XYZ;\n\n    constructor(props: Readonly<RLayerTileWebGLProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.createSource();\n        this.ol = new LayerTileWebGL({\n            opacity: 0.9,\n            source: this.source,\n            cacheSize: props.cacheSize\n        });\n        this.eventSources = [this.ol, this.source];\n    }\n\n    createSource(): void {\n        this.source = new XYZ({\n            url: this.props.url,\n            interpolate: !this.props.noIterpolation,\n            projection: this.props.projection,\n            tileGrid: this.props.tileGrid,\n            crossOrigin: 'anonymous'\n        });\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: RLayerTileWebGLProps): void {\n        super.refresh(prevProps);\n        if (prevProps?.tileGrid !== this.props.tileGrid || prevProps?.url !== this.props.url) {\n            this.createSource();\n            this.ol.setSource(this.source);\n            this.attachOldEventHandlers(this.source);\n        }\n    }\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {WebGLTile as LayerTileWebGL} from 'ol/layer';\nimport {OSM} from 'ol/source';\n\nimport {RContextType} from '../context';\nimport {default as RLayerWebGL, RLayerWebGLProps} from './RLayerWebGL';\n\n/**\n * @propsfor ROSMWebGL\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ROSMWebGLProps extends RLayerWebGLProps {}\n\n/**\n * An OpenStreetMap layer rendered by WebGL\n *\n * Requires an `RMap` context\n */\nexport default class ROSMWebGL extends RLayerWebGL<ROSMWebGLProps> {\n    source: OSM;\n\n    constructor(props: Readonly<ROSMWebGLProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.source = new OSM();\n        this.ol = new LayerTileWebGL({source: this.source, cacheSize: props.cacheSize});\n        this.eventSources = [this.ol, this.source];\n    }\n\n    refresh(prevProps?: ROSMWebGLProps): void {\n        super.refresh(prevProps);\n        this.ol.setProperties({label: 'OpenStreetMap'});\n    }\n}\n", "export {default as RScaleLine} from './RScaleLine';\nexport {default as RAttribution} from './RAttribution';\nexport {default as RZoom} from './RZoom';\nexport {default as RZoomSlider} from './RZoomSlider';\nexport {default as RRotate} from './RRotate';\nexport {default as RCustom} from './RCustom';\nexport {default as RLayers} from './RLayers';\nexport {default as ROverviewMap} from './ROverviewMap';\nexport {default as RFullScreen} from './RFullScreen';\nexport {default as RMousePosition} from './RMousePosition';\nexport {default as RZoomToExtent} from './RZoomToExtent';\n", "/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n", "/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n", "/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n", "/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n", "/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n", "/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n", "import React, {PropsWithChildren} from 'react';\nimport {Control as Control} from 'ol/control';\nimport {Options as OLOptions} from 'ol/control/Control';\n\nimport {RContextType} from '../context';\nimport {RlayersBase} from '../REvent';\nimport debug from '../debug';\n\n/**\n * @propsfor RControl\n */\nexport interface RControlProps extends PropsWithChildren<unknown> {\n    /**\n     * Optional CSS class name\n     */\n    className?: string;\n\n    /**\n     * Destination element if the control is to be rendered outside the main map element\n     */\n    target?: React.RefObject<HTMLElement>;\n}\n\nexport interface RControlOptions extends OLOptions {\n    className?: string;\n}\n\n/**\n * An abstract class serving as base for all controls, not meant to be used directly\n */\nexport default class RControlBase<P extends RControlProps, S> extends RlayersBase<P, S> {\n    ol: Control;\n\n    constructor(props: Readonly<P>, context?: React.Context<RContextType>) {\n        super(props, context);\n        if (!this.context?.map) throw new Error('A control must be part of a map');\n    }\n\n    toOLProps(props: P): RControlOptions {\n        return {\n            className: props.className,\n            target: props.target?.current\n        };\n    }\n\n    refresh(prevProps?: P): void {\n        super.refresh(prevProps);\n        this.ol.setProperties(this.toOLProps(this.props));\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.context.map.addControl(this.ol);\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.context.map.removeControl(this.ol);\n    }\n}\n", "import React from 'react';\nimport {ScaleLine} from 'ol/control';\nimport {Options, Units} from 'ol/control/ScaleLine';\n\nimport {RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\n/**\n * @propsfor RScaleLine\n */\nexport interface RScaleLineProps extends RControlProps {\n    /** Minimum width */\n    minWidth?: number;\n    /** Use bars instead of a line */\n    bar?: boolean;\n    /** Label */\n    text?: boolean;\n    /** Units for the scale line: 'degrees', 'imperial', 'nautical', 'metric', 'us'\n     * @default 'metric' */\n    units?: Units;\n}\n\n/**\n * Scaleline control\n *\n * Requires an `RMap` context\n */\nexport default class RScaleLine extends RControlBase<RScaleLineProps, Record<string, never>> {\n    ol: ScaleLine;\n\n    constructor(props: Readonly<RScaleLineProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new ScaleLine(this.toOLProps(props));\n    }\n\n    toOLProps(props: RScaleLineProps): Options {\n        return {\n            ...super.toOLProps(props),\n            minWidth: props.minWidth,\n            bar: props.bar,\n            text: props.text,\n            units: props.units ?? 'metric'\n        };\n    }\n}\n", "import React from 'react';\nimport {Attribution} from 'ol/control';\nimport {Options} from 'ol/control/Attribution';\n\nimport {RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\n/**\n * @propsfor RAttribution\n */\nexport interface RAttributionProps extends RControlProps {\n    /** Is it user-collapsible (some licenses do not allow it) @default true */\n    collapsible?: boolean;\n    /** Initial state @default true */\n    collapsed?: boolean;\n}\n\n/**\n * An attributions control (the small **i** in the bottom right corner)\n *\n * Requires an `RMap` context\n */\nexport default class RAttribution extends RControlBase<RAttributionProps, Record<string, never>> {\n    ol: Attribution;\n\n    constructor(props: Readonly<RAttributionProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new Attribution(this.toOLProps(props));\n    }\n\n    refresh(prevProps?: RAttributionProps): void {\n        super.refresh(prevProps);\n        if (prevProps?.collapsed !== this.props.collapsed)\n            this.ol.setCollapsed(this.props.collapsed);\n    }\n\n    toOLProps(props: RAttributionProps): Options {\n        return {\n            ...super.toOLProps(props),\n            collapsible: props.collapsible ?? true,\n            collapsed: props.collapsed\n        };\n    }\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {Zoom} from 'ol/control';\nimport {Options} from 'ol/control/Zoom';\n\nimport {RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\n/**\n * @propsfor RZoom\n */\nexport interface RZoomProps extends RControlProps {\n    /** Animation duration */\n    duration?: number;\n    /** Zoom in label instead of + */\n    zoomInLabel?: string;\n    /** Zoom out label instead of - */\n    zoomOutLabel?: string;\n    /** Zoom in tip */\n    zoomInTipLabel?: string;\n    /** Zoom out tip */\n    zoomOutTipLabel?: string;\n    /** Amount to zoom at each step */\n    delta?: number;\n}\n\n/**\n * Zoom control\n *\n * Requires an `RMap` context\n */\nexport default class RZoom extends RControlBase<RZoomProps, Record<string, never>> {\n    ol: Zoom;\n\n    constructor(props: Readonly<RZoomProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new Zoom(this.toOLProps(props));\n    }\n\n    toOLProps(props: RZoomProps): Options {\n        return {\n            ...super.toOLProps(props),\n            duration: props.duration,\n            zoomInLabel: props.zoomInLabel,\n            zoomOutLabel: props.zoomOutLabel,\n            zoomInTipLabel: props.zoomInTipLabel,\n            zoomOutTipLabel: props.zoomOutTipLabel,\n            delta: props.delta\n        };\n    }\n}\n", "import React from 'react';\nimport {Map} from 'ol';\nimport {ZoomSlider} from 'ol/control';\nimport {Options} from 'ol/control/ZoomSlider';\n\nimport {RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\n/**\n * @propsfor RZoomSlider\n */\nexport interface RZoomSliderProps extends RControlProps {\n    /** Animation duration\n     * @default 200 */\n    duration?: number;\n}\n\n/**\n * ZoomSlider control\n *\n * Requires an `RMap` context\n */\nexport default class RZoomSlider extends RControlBase<RZoomSliderProps, Record<string, never>> {\n    ol: ZoomSlider;\n\n    constructor(props: Readonly<RZoomSliderProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new ZoomSlider(this.toOLProps(props));\n    }\n\n    toOLProps(props: RZoomSliderProps): Options {\n        return {\n            ...super.toOLProps(props),\n            duration: props.duration\n        };\n    }\n}\n", "import React from 'react';\nimport {Rotate as OLRRotate} from 'ol/control';\nimport {Options} from 'ol/control/Rotate';\n\nimport {RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\n/**\n * @propsfor RRotate\n */\nexport interface RRotateProps extends RControlProps {\n    /** Label */\n    label?: string;\n    /** automatically hide the control when the orientation is straight north */\n    autoHide?: boolean;\n}\n\n/**\n * A rotation control for mobile devices\n *\n * Requires an `RMap` context\n */\nexport default class RRotate extends RControlBase<RRotateProps, Record<string, never>> {\n    ol: OLRRotate;\n\n    constructor(props: Readonly<RRotateProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new OLRRotate(this.toOLProps(props));\n    }\n\n    toOLProps(props: RRotateProps): Options {\n        return {\n            ...super.toOLProps(props),\n            label: props.label,\n            autoHide: props.autoHide\n        };\n    }\n}\n", "import React from 'react';\nimport {Control as Control} from 'ol/control';\n\nimport {RContextType} from '../context';\nimport {default as RControlBase, RControlOptions, RControlProps} from './RControlBase';\n\n/** A custom control that can contain an HTMLElement\n *\n * All provided children will be rendered as an OpenLayers control\n *\n * Requires an `RMap` context\n *\n * [See this for an example](https://mmomtchev.github.io/rlayers/#/controls)\n */\nexport default class RCustom extends RControlBase<RControlProps, Record<string, never>> {\n    ol: Control;\n    targetRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: Readonly<RControlProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.targetRef = React.createRef();\n    }\n\n    componentDidMount(): void {\n        this.ol = new Control(this.toOLProps(this.props));\n        super.componentDidMount();\n    }\n\n    toOLProps(props: RControlProps): RControlOptions {\n        return {\n            ...super.toOLProps(props),\n            element: this.targetRef?.current\n        };\n    }\n\n    render(): JSX.Element {\n        return (\n            <div className={['ol-control', this.props.className].join(' ')} ref={this.targetRef}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n", "import React from 'react';\nimport {Control} from 'ol/control';\n\nimport {RContextType} from '../context';\nimport RControlBase, {RControlOptions, RControlProps} from './RControlBase';\nimport {RLayerProps} from 'rlayers/layer/RLayer';\n\n/**\n * @propsfor RLayer\n */\nexport interface RLayersProps extends RControlProps {\n    /** Custom element for rendering */\n    element?: React.ReactElement;\n}\n\nexport interface RLayersState {\n    collapsed: boolean;\n    visible: boolean[];\n}\n\n/** A custom control allowing to switch between different layers\n *\n * Layers that are to be controlled have to be nested inside the control\n *\n * Every layer should have a `label` property\n *\n * Requires an `RMap` context\n */\nexport default class RLayers extends RControlBase<RLayersProps, RLayersState> {\n    ol: Control;\n    targetRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: Readonly<RLayersProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.targetRef = React.createRef();\n        this.state = {collapsed: true, visible: [true]};\n    }\n\n    onchange = (): void => this.forceUpdate();\n\n    componentDidMount(): void {\n        this.ol = new Control(this.toOLProps(this.props));\n        super.componentDidMount();\n        this.context.map.on('change', this.onchange);\n        this.forceUpdate();\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.context.map.un('change', this.onchange);\n    }\n\n    toOLProps(props: RLayersProps): RControlOptions {\n        return {\n            ...super.toOLProps(props),\n            element: this.targetRef?.current\n        };\n    }\n\n    clickCollapse = (): void => {\n        this.setState({collapsed: !this.state.collapsed});\n    };\n\n    render(): JSX.Element {\n        const visible = React.Children.map(this.props.children, (child, i) => {\n            if (React.isValidElement(child)) {\n                return this.state.visible[i] ?? false;\n            }\n        }) as boolean[];\n        const labels = React.Children.map(this.props.children, (child) => {\n            if (React.isValidElement(child)) {\n                return child.props.properties?.label ?? 'no label';\n            }\n        }) as string[];\n        return (\n            <React.Fragment>\n                <div\n                    className={['ol-control', this.props.className ?? 'ol-layers-control'].join(\n                        ' '\n                    )}\n                    ref={this.targetRef}\n                >\n                    <span onClick={this.clickCollapse}>\n                        {this.props.element ?? <button>=</button>}\n                    </span>\n                    {this.state.collapsed ? null : (\n                        <div>\n                            {labels.map((l, i) => (\n                                <div key={i}>\n                                    <input\n                                        type='radio'\n                                        id={i.toString()}\n                                        name={l}\n                                        value={i.toString()}\n                                        checked={visible[i]}\n                                        onChange={() => {\n                                            for (const v in visible) {\n                                                visible[v] = false;\n                                            }\n                                            visible[i] = true;\n                                            this.setState({visible: [...visible], collapsed: true});\n                                        }}\n                                    />\n                                    <label htmlFor={i.toString()}>{l}</label>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n                {React.Children.map(this.props.children, (child, i) => {\n                    if (React.isValidElement(child)) {\n                        return React.cloneElement<RLayerProps>(child, {visible: visible[i]});\n                    }\n                    return child;\n                })}\n            </React.Fragment>\n        );\n    }\n}\n", "import React from 'react';\nimport {OverviewMap} from 'ol/control';\nimport {Options} from 'ol/control/OverviewMap';\n\nimport {RContext, RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\n/**\n * @propsfor ROverviewMap\n */\nexport interface ROverviewProps extends RControlProps {\n    /** User-collapsible @default true */\n    collapsible?: boolean;\n    /** State @default true */\n    collapsed?: boolean;\n    /** Label when collapsed */\n    collapseLabel?: string;\n    /** Label */\n    label?: string;\n    /** Width if not using CSS */\n    width?: number;\n    /** Height if not using CSS */\n    height?: number;\n}\n\n/**\n * An overview map component\n *\n * Requires an `RMap` context\n *\n * Provides an 'RMap` context - allowing to nest overview layers in it\n */\nexport default class ROverviewMap extends RControlBase<ROverviewProps, Record<string, never>> {\n    ol: OverviewMap;\n\n    constructor(props: Readonly<ROverviewProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new OverviewMap(this.toOLProps(props));\n    }\n\n    toOLProps(props: ROverviewProps): Options {\n        return {\n            ...super.toOLProps(props),\n            collapsible: props.collapsible,\n            collapsed: props.collapsed,\n            label: props.label,\n            collapseLabel: props.collapseLabel\n        };\n    }\n\n    refresh(prevProps?: ROverviewProps): void {\n        super.refresh(prevProps);\n        if (prevProps?.collapsed !== this.props.collapsed)\n            this.ol.setCollapsed(this.props.collapsed);\n    }\n\n    render(): JSX.Element {\n        return (\n            <div\n                className={this.props.className}\n                style={{width: this.props.width, height: this.props.height}}\n            >\n                <RContext.Provider value={{map: this.ol.getOverviewMap()}}>\n                    {this.props.children}\n                </RContext.Provider>\n            </div>\n        );\n    }\n}\n", "import React from 'react';\nimport {FullScreen} from 'ol/control';\nimport {Options} from 'ol/control/FullScreen';\n\nimport {RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\n/**\n * @propsfor RFullScreen\n */\nexport interface RFullScreenProps extends RControlProps {\n    /** A new HTML target for the map after switching to full-screen,\n     * can be used for CSS customization\n     */\n    source?: HTMLElement | string;\n    /** The button label */\n    label?: string;\n    /** The button label when active */\n    labelActive?: string;\n    /** The mouse-over tip */\n    tipLabel?: string;\n}\n\n/**\n * A control for switching to full-screen mode\n *\n * Requires an `RMap` context\n * */\nexport default class RFullScreen extends RControlBase<RFullScreenProps, Record<string, never>> {\n    ol: FullScreen;\n\n    constructor(props: Readonly<RFullScreenProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new FullScreen(this.toOLProps(props));\n    }\n\n    toOLProps(props: RFullScreenProps): Options {\n        return {\n            ...super.toOLProps(props),\n            source: props.source,\n            label: props.label,\n            labelActive: props.labelActive,\n            tipLabel: props.tipLabel\n        };\n    }\n}\n", "import {default as OLMousePosition, Options} from 'ol/control/MousePosition';\nimport {Coordinate} from 'ol/coordinate';\nimport {ProjectionLike} from 'ol/proj';\n\nimport {RContextType} from '../context';\nimport RControlBase, {RControlProps} from './RControlBase';\n\n/**\n * @propsfor RMousePosition\n */\nexport interface RMousePositionProps extends RControlProps {\n    /**\n     * Optional function to change coordinate formatting\n     */\n    coordinateFormat?: (coordinate: Coordinate) => string;\n    /**\n     * View projection\n     * @default Map View's projection\n     */\n    projection?: ProjectionLike;\n    /**\n     * Markup to show when the mouse position is unavailable.\n     * Set to false to retain the last position when the mouse leaves the viewport.\n     * @default &nbsp;\n     */\n    placeholder?: string;\n}\n\nexport default class RMousePosition extends RControlBase<\n    RMousePositionProps,\n    Record<string, never>\n> {\n    ol: OLMousePosition;\n\n    constructor(props: Readonly<RMousePositionProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new OLMousePosition(this.toOLProps(props));\n    }\n\n    toOLProps(props: RMousePositionProps): Options {\n        return {\n            ...super.toOLProps(props),\n            coordinateFormat: props.coordinateFormat,\n            projection: props.projection,\n            placeholder: props.placeholder || '&nbsp'\n        };\n    }\n}\n", "import {default as OLZoomToExtent, Options} from 'ol/control/ZoomToExtent';\nimport {Extent} from 'ol/extent';\n\nimport {RContext, RContextType} from '../context';\nimport {default as RControlBase, RControlProps} from './RControlBase';\n\nexport interface RZoomToExtentProps extends RControlProps {\n    extent?: Extent;\n    label?: string | HTMLElement;\n    tipLabel?: string;\n}\n\nexport default class RZoomToExtent extends RControlBase<RZoomToExtentProps, Record<string, never>> {\n    ol: OLZoomToExtent;\n\n    constructor(props: Readonly<RZoomToExtentProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.ol = new OLZoomToExtent(this.toOLProps(props));\n    }\n\n    toOLProps(props: RZoomToExtentProps): Options {\n        return {\n            ...super.toOLProps(props),\n            extent: props.extent,\n            label: props.label,\n            tipLabel: props.tipLabel\n        };\n    }\n}\n", "export {default as RBaseInteraction} from './RBaseInteraction';\nexport {default as RPointer} from './RPointer';\nexport {default as RDragBox} from './RDragBox';\nexport {default as RTranslate} from './RTranslate';\nexport {default as RDraw} from './RDraw';\nexport {default as RModify} from './RModify';\nexport {default as RDoubleClickZoom} from './RDoubleClickZoom';\nexport {default as RDragPan} from './RDragPan';\nexport {default as RDragRotate} from './RDragRotate';\nexport {default as RDragZoom} from './RDragZoom';\nexport {default as RMouseWheelZoom} from './RMouseWheelZoom';\nexport {default as RPinchRotate} from './RPinchRotate';\nexport {default as RPinchZoom} from './RPinchZoom';\nexport {default as RKeyboardPan} from './RKeyboardPan';\nexport {default as RKeyboardZoom} from './RKeyboardZoom';\n", "import React from 'react';\nimport {Interaction} from 'ol/interaction';\n\nimport {RContextType} from '../context';\nimport {RlayersBase} from '../REvent';\nimport debug from '../debug';\n\n/**\n * A basic Base interaction component\n *\n * It is meant to be be extended by more specific interactions\n */\nexport default class RBaseInteraction<P> extends RlayersBase<P, Record<string, never>> {\n    static classProps: string[] = [];\n    classProps: string[];\n    ol: Interaction;\n\n    constructor(props: P, context?: React.Context<RContextType>) {\n        super(props, context);\n        if (!this.context?.map?.addInteraction)\n            throw new Error('An interaction must be part of a map');\n        this.ol = this.createOL(props);\n    }\n\n    createOL(props: P): Interaction {\n        throw new Error('RBaseInteraction should not be directly instantiated');\n    }\n\n    refresh(prevProps?: P): void {\n        for (const p of this.classProps)\n            if (prevProps && prevProps[p] !== this.props[p]) {\n                debug('Replacing interaction', this, prevProps);\n                this.componentWillUnmount();\n                this.ol = this.createOL(this.props);\n                this.componentDidMount();\n                break;\n            }\n        super.refresh(prevProps);\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.context.map.addInteraction(this.ol);\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.context.map.removeInteraction(this.ol);\n    }\n}\n", "import React from 'react';\nimport {Map, MapBrowserEvent} from 'ol';\nimport Pointer from 'ol/interaction/Pointer';\n\nimport {RContextType} from '../context';\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RPointer\n */\nexport interface RPointerProps {\n    /** Called on down event (click or touch)\n     * if it returns true, a drag sequence is started\n     */\n    handleDownEvent?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Called on every move event while dragging */\n    handleDragEvent?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Called on every event, use with care */\n    handleEvent?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Called on every pointer move, use with care */\n    handleMoveEvent?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Called on up event (end of click or touch) */\n    handleUpEvent?: (e: MapBrowserEvent<UIEvent>) => boolean;\n}\n\n/**\n * A basic pointer interaction component\n *\n * It is meant to be be extended by more specific interactions\n */\nexport default class RPointer<P> extends RBaseInteraction<P> {\n    static classProps = ['handleDownEvent', 'handleDragEvent', 'handleMoveEvent', 'handleUpEvent'];\n    classProps: string[];\n    ol: Pointer;\n}\n", "import React from 'react';\nimport {MapBrowserEvent} from 'ol';\nimport {Pixel} from 'ol/pixel';\nimport {default as DragBox, DragBoxEvent} from 'ol/interaction/DragBox';\n\nimport {default as RPointer} from './RPointer';\nimport debug from '../debug';\n\n/**\n * @propsfor RDragBox\n */\nexport interface RDragBoxProps {\n    /** A CSS class to be used for the box */\n    className?: string;\n    /** An optional OpenLayers condition */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Minimum area that needs to be selected */\n    minArea?: number;\n    /** An optional OpenLayers condition */\n    boxEndCondition?: (\n        this: RDragBox,\n        e: MapBrowserEvent<UIEvent>,\n        p1: Pixel,\n        p2: Pixel\n    ) => boolean;\n    /** Called when the user starts dragging */\n    onBoxStart?: (this: RDragBox, e: DragBoxEvent) => void;\n    /** Called on selection\n     * (note that this is the OpenLayers event, not the constructor property) */\n    onBoxEnd?: (this: RDragBox, e: DragBoxEvent) => void;\n}\n\n/** A dragbox, can be used for selecting features, see `RDragZoom` for zooming */\nexport default class RDragBox extends RPointer<RDragBoxProps> {\n    static classProps = ['className', 'condition', 'minArea', 'boxEndCondition'];\n    ol: DragBox;\n\n    createOL(props: RDragBoxProps): DragBox {\n        this.classProps = RDragBox.classProps;\n        return new DragBox(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n", "import React from 'react';\nimport {Collection, Feature} from 'ol';\nimport {default as Translate, TranslateEvent} from 'ol/interaction/Translate';\nimport Geometry from 'ol/geom/Geometry';\nimport BaseLayer from 'ol/layer/Base';\nimport RenderFeature from 'ol/render/Feature';\n\nimport {default as RPointer} from './RPointer';\nimport debug from '../debug';\n\n/**\n * @propsfor RTranslate\n */\nexport interface RTranslateProps {\n    /** Translatable features\n     * @default all */\n    features?: Collection<Feature<Geometry>> | Feature<Geometry>;\n    /** Translatable layers\n     * @default all */\n    layers?: BaseLayer[] | ((layer: BaseLayer) => boolean);\n    /** Filter translatable features\n     * @default all */\n    filter?: (Feature: Feature<Geometry> | RenderFeature, layer: BaseLayer) => boolean;\n    /** Hit-detection tolerance in pixels\n     * @default 0 */\n    hitTolerance?: number;\n    /** Called when the translation is released */\n    onTranslateEnd?: (this: RTranslate, e: TranslateEvent) => void;\n    /** Called when the translation is started */\n    onTranslateStart?: (this: RTranslate, e: TranslateEvent) => void;\n    /** Called on every pointer move while the translation is active */\n    onTranslating?: (this: RTranslate, e: TranslateEvent) => void;\n}\n\n/**\n * A feature translation interaction\n */\nexport default class RTranslate extends RPointer<RTranslateProps> {\n    static classProps = ['features', 'layers', 'filter', 'hitTolerance'];\n    ol: Translate;\n\n    createOL(props: RTranslateProps): Translate {\n        this.classProps = RTranslate.classProps;\n        return new Translate(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n", "import React from 'react';\nimport {Map, MapBrowserEvent} from 'ol';\nimport {default as Draw, DrawEvent} from 'ol/interaction/Draw';\nimport {StyleLike} from 'ol/style/Style';\n\nimport {default as RPointer} from './RPointer';\nimport debug from '../debug';\n\n/**\n * @propsfor RDraw\n */\nexport interface RDrawProps {\n    /** Type of the geometry */\n    type:\n        | 'Point'\n        | 'LineString'\n        | 'LinearRing'\n        | 'Polygon'\n        | 'MultiPoint'\n        | 'MultiLineString'\n        | 'MultiPolygon'\n        | 'GeometryCollection'\n        | 'Circle';\n    /** An optionnal condition for triggering the interaction\n     * @default noModifierKeys */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** An optional OpenLayers condition to allow the interaction to finish */\n    finishCondition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** An optional OpenLayers condition to activate freehand drawing\n     * @default shiftKeyOnly */\n    freehandCondition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /**\n     * Style for rendering while drawing, supports only Openlayers styles.\n     * Once the interaction is finished, the resulting feature will adopt\n     * the style of its layer.\n     */\n    style?: StyleLike;\n    /** Do not trigger pointer events while the interaction is active */\n    stopClick?: boolean;\n    /** Maximum number of points allowed per feature\n     * @default Infinity */\n    maxPoints?: number;\n    /** Minimum number of points allowed per feature\n     * @default 2-3 */\n    minPoints?: number;\n    /** Snap tolerance in pixels\n     * @default 12 */\n    snapTolerance?: number;\n\n    /** Called on draw start */\n    onDrawStart?: (this: RDraw, e: DrawEvent) => void;\n    /** Called on draw end */\n    onDrawEnd?: (this: RDraw, e: DrawEvent) => void;\n    /** Called on draw cancel */\n    onDrawAbort?: (this: RDraw, e: DrawEvent) => void;\n}\n\n/** Pointer interaction for drawing features */\nexport default class RDraw extends RPointer<RDrawProps> {\n    static classProps = [\n        'condition',\n        'finishCondition',\n        'freehandCondition',\n        'style',\n        'stopClick',\n        'maxPoints',\n        'minPoints',\n        'snapTolerance'\n    ];\n    ol: Draw;\n\n    createOL(props: RDrawProps): Draw {\n        if (!this?.context?.vectorsource)\n            throw new Error('A Draw interaction must be part of a vector layer');\n        this.classProps = RDraw.classProps;\n        return new Draw({\n            type: props.type,\n            source: this.context.vectorsource,\n            ...Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        });\n    }\n}\n", "/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry) {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n", "import React from 'react';\nimport {Map, MapBrowserEvent} from 'ol';\nimport {default as Modify, ModifyEvent} from 'ol/interaction/Modify';\nimport {StyleLike} from 'ol/style/Style';\n\nimport {default as RPointer} from './RPointer';\nimport debug from '../debug';\n\n/**\n * @propsfor RModify\n */\nexport interface RModifyProps {\n    /** An optionnal condition for triggering the interaction\n     * @default primaryAction */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** An optional OpenLayers condition to allow removal of the feature\n     * @default (altKeyOnly+singleClick) */\n    deleteCondition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** An optional OpenLayers condition to allow adding of a vertex\n     * @default true */\n    insertVertexCondition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /**\n     * Style for rendering while drawing, supports only Openlayers styles.\n     * Once the interaction is finished, the resulting feature will adopt\n     * the style of its layer.\n     */\n    style?: StyleLike;\n    /** Snap tolerance in pixels\n     * @default 10 */\n    pixelTolerance?: number;\n    /** True hit detection based on feature shape\n     * @default false */\n    hitDetection?: number;\n    /** Called on modify start */\n    onDrawStart?: (this: RModify, e: ModifyEvent) => void;\n    /** Called on modify end */\n    onDrawEnd?: (this: RModify, e: ModifyEvent) => void;\n}\n\n/** Pointer interaction for modifying existing features */\nexport default class RModify extends RPointer<RModifyProps> {\n    static classProps = [\n        'condition',\n        'deleteCondition',\n        'insertVertexCondition',\n        'style',\n        'pixelTolerance',\n        'hitDetection'\n    ];\n    ol: Modify;\n\n    createOL(props: RModifyProps): Modify {\n        if (!this?.context?.vectorsource)\n            throw new Error('A Modify interaction must be part of a vector layer');\n        this.classProps = RModify.classProps;\n        return new Modify({\n            source: this.context.vectorsource,\n            ...Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        });\n    }\n}\n", "import React from 'react';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as DoubleClickZoom} from 'ol/interaction/DoubleClickZoom';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RDoubleClickZoom\n */\nexport interface RDoubleClickZoomProps {\n    /** Animation duration\n     * @default 250 */\n    duration?: number;\n    /** Zoom delta\n     * @default 1 */\n    delta?: number;\n    /** Called on every change */\n    onChange?: (this: RDoubleClickZoom, e: ObjectEvent) => void;\n}\n\n/** Zooming by double click */\nexport default class RDoubleClickZoom extends RBaseInteraction<RDoubleClickZoomProps> {\n    static classProps = ['duration', 'delta'];\n    ol: DoubleClickZoom;\n\n    createOL(props: RDoubleClickZoomProps): DoubleClickZoom {\n        this.classProps = RDoubleClickZoom.classProps;\n        return new DoubleClickZoom(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {MapBrowserEvent} from 'ol';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as DragPan} from 'ol/interaction/DragPan';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RDragPan\n */\nexport interface RDragPanProps {\n    /** An optional OpenLayers condition */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Kinetic parameters */\n    kinetic?: {\n        decay: number;\n        minVelocity: number;\n        delay: number;\n    };\n    /** Called on every change */\n    onChange?: (this: RDragPan, e: ObjectEvent) => void;\n}\n\n/** Panning by dragging */\nexport default class RDragPan extends RBaseInteraction<RDragPanProps> {\n    static classProps = ['condition', 'kinetic'];\n    ol: DragPan;\n\n    createOL(props: RDragPanProps): DragPan {\n        this.classProps = RDragPan.classProps;\n        return new DragPan(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {MapBrowserEvent} from 'ol';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as DragRotate} from 'ol/interaction/DragRotate';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RDragRotate\n */\nexport interface RDragRotateProps {\n    /** An optional OpenLayers condition */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Animation duration\n     * @default 250 */\n    duration?: number;\n    /** Called on every change */\n    onChange?: (this: RDragRotate, e: ObjectEvent) => void;\n}\n\n/** Rotation by clicking and dragging */\nexport default class RDragRotate extends RBaseInteraction<RDragRotateProps> {\n    static classProps = ['condition', 'duration'];\n    ol: DragRotate;\n\n    createOL(props: RDragRotateProps): DragRotate {\n        this.classProps = RDragRotate.classProps;\n        return new DragRotate(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {MapBrowserEvent} from 'ol';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as DragZoom} from 'ol/interaction/DragZoom';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RDragZoom\n */\nexport interface RDragZoomProps {\n    /** Optionnal CSS class for styling the box\n     * @default ol-dragzoom */\n    className?: string;\n    /** An optional OpenLayers condition */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Animation duration\n     * @default 200 */\n    duration?: number;\n    /** Use interaction for zooming out\n     * @default false */\n    out?: boolean;\n    /** Minimum area that can be selected\n     * @default 64 */\n    minArea?: number;\n    /** Called on every change */\n    onChange?: (this: RDragZoom, e: ObjectEvent) => void;\n}\n\n/** Zoom by dragging a box, see `RDragBox` for selecting features */\nexport default class RDragZoom extends RBaseInteraction<RDragZoomProps> {\n    static classProps = ['className', 'condition', 'duration', 'out', 'minArea'];\n    ol: DragZoom;\n\n    createOL(props: RDragZoomProps): DragZoom {\n        this.classProps = RDragZoom.classProps;\n        return new DragZoom(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {MapBrowserEvent} from 'ol';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as MouseWheelZoom} from 'ol/interaction/MouseWheelZoom';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RMouseWheelZoom\n */\nexport interface RMouseWheelZoomProps {\n    /** An optional OpenLayers condition */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Zoom speed\n     * @default 1 */\n    maxDelta?: number;\n    /** Animation duration in ms\n     * @default 250 */\n    duration?: number;\n    /** Center of zoom is the mouse position\n     * @default true */\n    useAnchor?: boolean;\n    /** Allow only integer zoom levels\n     * @default false */\n    constrainResolution?: boolean;\n    /** Called on every change */\n    onChange?: (this: RMouseWheelZoom, e: ObjectEvent) => void;\n}\n\n/** Mouse wheel zoom */\nexport default class RMouseWheelZoom extends RBaseInteraction<RMouseWheelZoomProps> {\n    static classProps = ['condition', 'maxDelta', 'duration', 'useAnchor', 'constrainResolution'];\n    ol: MouseWheelZoom;\n\n    createOL(props: RMouseWheelZoomProps): MouseWheelZoom {\n        this.classProps = RMouseWheelZoom.classProps;\n        return new MouseWheelZoom(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as PinchRotate} from 'ol/interaction/PinchRotate';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RPinchRotate\n */\nexport interface RPinchRotateProps {\n    /** Minimum angle in radians for rotation\n     * @default 0.3 */\n    threshold?: number;\n    /** Animation duration\n     * @default 250 */\n    duration?: number;\n    /** Called on every change */\n    onChange?: (this: RPinchRotate, e: ObjectEvent) => void;\n}\n\n/** Rotation by pinching */\nexport default class RPinchRotate extends RBaseInteraction<RPinchRotateProps> {\n    static classProps = ['threshold', 'duration'];\n    ol: PinchRotate;\n\n    createOL(props: RPinchRotateProps): PinchRotate {\n        this.classProps = RPinchRotate.classProps;\n        return new PinchRotate(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as PinchZoom} from 'ol/interaction/PinchZoom';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RPinchZoom\n */\nexport interface RPinchZoomProps {\n    /** Animation duration\n     * @default 400 */\n    duration?: number;\n    /** Called on every change */\n    onChange?: (this: RPinchZoom, e: ObjectEvent) => void;\n}\n\n/** Zoom by pinching */\nexport default class RPinchZoom extends RBaseInteraction<RPinchZoomProps> {\n    static classProps = ['duration'];\n    ol: PinchZoom;\n\n    createOL(props: RPinchZoomProps): PinchZoom {\n        this.classProps = RPinchZoom.classProps;\n        return new PinchZoom(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {MapBrowserEvent} from 'ol';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as KeyboardPan} from 'ol/interaction/KeyboardPan';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RKeyboardPan\n */\nexport interface RKeyboardPanProps {\n    /** An optional OpenLayers condition */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Animation duration\n     * @default 100 */\n    duration?: number;\n    /** Pan delta\n     * @default 128 */\n    pixelDelta?: number;\n    /** Called on every change */\n    onChange?: (this: RKeyboardPan, e: ObjectEvent) => void;\n}\n\n/** Pan with the arrow keys on the keyboard */\nexport default class RKeyboardPan extends RBaseInteraction<RKeyboardPanProps> {\n    static classProps = ['condition', 'duration', 'pixelDelta'];\n    ol: KeyboardPan;\n\n    createOL(props: RKeyboardPanProps): KeyboardPan {\n        this.classProps = RKeyboardPan.classProps;\n        return new KeyboardPan(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React from 'react';\nimport {MapBrowserEvent} from 'ol';\nimport {ObjectEvent} from 'ol/Object';\nimport {default as KeyboardZoom} from 'ol/interaction/KeyboardZoom';\n\nimport {default as RBaseInteraction} from './RBaseInteraction';\nimport debug from '../debug';\n\n/**\n * @propsfor RKeyboardZoom\n */\nexport interface RKeyboardZoomProps {\n    /** An optional OpenLayers condition */\n    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;\n    /** Animation duration\n     * @default 100 */\n    duration?: number;\n    /** Zoom delta\n     * @default 1 */\n    delta?: number;\n    /** Called on every change */\n    onChange?: (this: RKeyboardZoom, e: ObjectEvent) => void;\n}\n\n/** Zoom with +/- keys on the keyboard */\nexport default class RKeyboardZoom extends RBaseInteraction<RKeyboardZoomProps> {\n    static classProps = ['condition', 'duration', 'delta'];\n    ol: KeyboardZoom;\n\n    createOL(props: RKeyboardZoomProps): KeyboardZoom {\n        this.classProps = RKeyboardZoom.classProps;\n        return new KeyboardZoom(\n            Object.keys(props)\n                .filter((p) => this.classProps.includes(p))\n                .reduce((ac, p) => ({...ac, [p]: props[p]}), {})\n        );\n    }\n}\n", "import React, {MouseEvent, PropsWithChildren} from 'react';\nimport {Overlay} from 'ol';\n\nimport {RContextType} from './context';\nimport {RlayersBase} from './REvent';\n\n/**\n * @propsfor ROverlay\n */\nexport interface ROverlayProps extends PropsWithChildren<unknown> {\n    /** Content to be displayed */\n    content?: string | HTMLElement | React.ElementType;\n    /** CSS class */\n    className?: string;\n    /** Automatically pan the map when the element is rendered\n     * @default false */\n    autoPan?: boolean;\n    // TODO: support the full options in rlayers 1.5.0 / ol 7.0\n    /** Automatically position the overlay so that it fits in the viewport\n     * @default false */\n    autoPosition?: boolean;\n    /** Called immediately on click */\n    onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * A basic overlay\n *\n * Requires a location context\n *\n * (ie it must be descendant of a `RFeature`)\n *\n * @name ROverlay\n * @constructor\n */\nexport class ROverlayBase<P extends ROverlayProps> extends RlayersBase<P, Record<string, never>> {\n    ol: Overlay;\n    containerRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: Readonly<P>, context?: React.Context<RContextType>) {\n        super(props, context);\n        if (!this.context?.location)\n            throw new Error('An overlay must be part of a location provider (ie RFeature)');\n        this.ol = new Overlay({\n            autoPan: props.autoPan\n        });\n        this.containerRef = React.createRef();\n    }\n\n    setPosition(): void {\n        this.ol.setPosition(this.context.location);\n        if (this.props.autoPosition && this.containerRef?.current) {\n            this.containerRef.current.style.position = 'absolute';\n            const pixel = this.context.map.getPixelFromCoordinate(this.context.location);\n            const size = this.context.map.getSize();\n            if (pixel[0] > size[0] / 2) {\n                this.containerRef.current.style.left = null;\n                this.containerRef.current.style.right = '0px';\n            } else {\n                this.containerRef.current.style.left = '0px';\n                this.containerRef.current.style.right = null;\n            }\n            if (pixel[1] > size[1] / 2) {\n                this.containerRef.current.style.top = null;\n                this.containerRef.current.style.bottom = '0px';\n            } else {\n                this.containerRef.current.style.top = '0px';\n                this.containerRef.current.style.bottom = null;\n            }\n        }\n    }\n\n    refresh(prevProps?: P): void {\n        super.refresh(prevProps);\n        this.ol.setElement(this.containerRef.current);\n        this.setPosition();\n    }\n\n    componentDidMount(): void {\n        super.componentDidMount();\n        this.context.map.addOverlay(this.ol);\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.context.map.removeOverlay(this.ol);\n    }\n\n    render(): JSX.Element {\n        this.setPosition();\n        return (\n            <div className='_rlayers_ROverlay'>\n                <div\n                    ref={this.containerRef}\n                    className={this.props.className}\n                    onClick={this.props.onClick}\n                >\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class ROverlay extends ROverlayBase<ROverlayProps> {}\n", "import React from 'react';\n\nimport {RContextType} from './context';\nimport {ROverlayBase, ROverlayProps} from './ROverlay';\n\n/**\n * @propsfor RPopup\n */\nexport interface RPopupProps extends ROverlayProps {\n    /**\n     * Trigger action, 'click' or 'hover'\n     * @default 'click'\n     */\n    trigger?: 'click' | 'hover';\n    /**\n     * Delay in 'hover' mode\n     * @default {show: 250, hide: 50}\n     */\n    delay?: {\n        show?: number;\n        hide?: number;\n    };\n}\n\n/**\n * Popup component\n *\n * `Popup` extends `Overlay` and implements an automatic popup\n *\n * Requires a location context\n *\n * (ie it must be descendant of a `RFeature`)\n */\nexport default class RPopup extends ROverlayBase<RPopupProps> {\n    visible: boolean;\n    showing: number | undefined;\n    hiding: number | undefined;\n\n    constructor(props: Readonly<RPopupProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        this.visible = false;\n    }\n\n    componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this.unregister();\n    }\n\n    setPosition(): void {\n        this.ol.setPosition(this.visible ? this.context.location : undefined);\n    }\n\n    unregister(): void {\n        this.context.feature.un('click' as 'change', this.toggle);\n        this.context.feature.un('pointerenter' as 'change', this.show);\n        this.context.feature.un('pointerleave' as 'change', this.hide);\n    }\n\n    refresh(): void {\n        this.ol.setElement(this.containerRef.current);\n        this.unregister();\n        switch (this.props.trigger) {\n            default:\n            case 'click':\n                this.context.feature.on('click' as 'change', this.toggle);\n                break;\n            case 'hover':\n                this.context.feature.on('pointerenter' as 'change', this.show);\n                this.context.feature.on('pointerleave' as 'change', this.hide);\n                break;\n        }\n        this.setPosition();\n    }\n\n    /**\n     * Toggle the state\n     */\n    toggle = (): void => {\n        this.visible = !this.visible;\n        this.setPosition();\n    };\n\n    /**\n     * Show the popup\n     */\n    show = (): void => {\n        if (this.showing) return;\n        if (this.hiding) window.clearTimeout(this.hiding);\n        this.showing = window.setTimeout(() => {\n            this.visible = true;\n            this.setPosition();\n            this.hiding = this.showing = undefined;\n        }, this.props.delay?.show ?? 250);\n    };\n\n    /**\n     * Hide the popup\n     */\n    hide = (): void => {\n        if (this.hiding) return;\n        if (this.showing) window.clearTimeout(this.showing);\n        this.hiding = window.setTimeout(() => {\n            this.visible = false;\n            this.setPosition();\n            this.hiding = this.showing = undefined;\n        }, this.props.delay?.hide ?? 50);\n    };\n}\n", "import React from 'react';\nimport {ProjectionLike} from 'ol/proj';\nimport Geolocation from 'ol/Geolocation';\nimport BaseEvent from 'ol/events/Event';\n\nimport {RlayersBase} from './REvent';\nimport {RContextType} from './context';\n\n/**\n * @propsfor RGeolocation\n */\nexport interface RGeolocationProps {\n    /** Continuous tracking\n     * @default false */\n    tracking?: boolean;\n    /** Tracking options (W3C standard) */\n    trackingOptions?: {\n        enableHighAccuracy?: boolean;\n        timeout?: number;\n        maximumAge?: number;\n    };\n    /** Projection for the returned coordinates\n     * @default viewProjection */\n    projection?: ProjectionLike;\n    /** Called on every change */\n    onChange?: (this: RGeolocation, e: BaseEvent) => void;\n    /** Called on error */\n    onError?: (this: RGeolocation, e: BaseEvent) => void;\n}\n\n/**\n * A wrapper around the OpenLayers Geolocation helper\n *\n * Must have an `RMap` parent\n */\nexport default class RGeolocation extends RlayersBase<RGeolocationProps, Record<string, never>> {\n    ol: Geolocation;\n\n    constructor(props: Readonly<RGeolocationProps>, context?: React.Context<RContextType>) {\n        super(props, context);\n        if (!this?.context?.map) throw new Error('A Geolocation must be part of a map');\n        const projection = props.projection ?? this.context.map.getView().getProjection();\n        this.ol = new Geolocation({...props, projection});\n    }\n}\n"],
  "mappings": "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",
  "names": ["earcut", "equals", "removeNode", "next", "intersects", "p1", "p2", "Node", "sum", "buffer", "buffer", "getAttribute", "startIndex", "findTagsByName", "array", "geometry", "properties", "clone", "id", "Property", "error", "geometry", "EventType_default", "properties", "array", "none", "properties", "rotate", "geometry", "isEmpty", "equals", "none", "array", "layerState", "EventType_default", "compare", "bbox", "intersects", "extend", "compare", "color", "createDefaultStyle", "Property", "geometry", "geometry", "fillInstruction", "geometry", "geometryType", "p1", "p2", "p3", "scale", "Layer_default", "context", "Event_default", "Layer_default", "transform", "context", "Event_default", "EventType_default", "scale", "measureAndCacheTextWidth", "interpolate", "rotate", "line", "scale", "text", "context", "p1", "p2", "p3", "p4", "fillInstruction", "strokeInstruction", "transform", "intersects", "geometry", "i", "ii", "context", "transform", "geometry", "i", "result", "distance", "context", "transform", "geometry", "context", "color", "geometry", "i", "geometry", "transform", "imageReplay", "Layer_default", "context", "transform", "render", "EventType_default", "geometry", "wrapX", "extent", "userExtent", "RBush", "values", "bbox", "equals", "self", "xhr", "geometry", "id", "equals", "Vector_default", "transform", "interpolate", "transform", "EventType_default", "Vector_default", "equals", "isEmpty", "clone", "wrapX", "p1", "p2", "id", "geometry", "wrapX", "callback", "Event_default", "EventType_default", "Property", "id", "array", "EventType_default", "EventType_default", "newEvent", "id", "transform", "contains", "Property_default", "Property_default", "all", "all", "centroid", "map", "scale", "rotate", "distance", "geometry", "rotate", "all", "distance", "defaults", "Map", "defaults", "id", "EventType_default", "isEmpty", "equals", "values", "Map_default", "Property", "transform", "values", "createOrUpdate", "createOrUpdate", "canvasPool", "context", "React", "Map_default", "import_react", "context", "React", "context", "array", "buffer", "create", "transform", "context", "releaseCanvas", "create", "options", "buffer", "transform", "location", "Layer_default", "context", "EventType_default", "Event_default", "id", "array", "color", "create", "Layer_default", "create", "equals", "geometry", "color", "Property", "context", "Layer_default", "isEmpty", "scale", "context", "render", "transform", "Image_default", "properties", "id", "transform", "scale", "canvasPool", "interpolate", "context", "extend", "interpolate", "state", "canvasPool", "Tile_default", "Layer_default", "Tile_default", "tmpExtent", "context", "dx", "dy", "i", "equals", "tileSource", "frameState", "render", "equals", "geometry", "executorGroups", "extent", "wrapX", "context", "transform", "VectorTile_default", "tempExtent", "createOrUpdate", "scale", "wrapX", "scale", "wrapX", "Tile_default", "Tile_default", "VectorTile", "geometry", "empty", "VectorTile_default", "interpolate", "isEmpty", "sourceState", "Image_default", "equals", "Image_default", "extent", "resolution", "pixelRatio", "Tile_default", "output", "array", "buffer", "Image_default", "equals", "context", "Tile_default", "id", "Tile_default", "z", "x", "y", "pixelRatio", "render", "transform", "kCSSColorTable", "clamp_css_byte", "i", "Math", "round", "clamp_css_float", "f", "parse_css_int", "str", "length", "parseFloat", "parseInt", "parse_css_float", "css_hue_to_rgb", "m1", "m2", "h", "parseCSSColor", "css_str", "replace", "toLowerCase", "slice", "iv", "substr", "op", "indexOf", "ep", "fname", "params", "split", "alpha", "pop", "s", "l", "exports", "e", "Color", "constructor", "r", "g", "b", "a", "parse", "input", "undefined", "const", "rgba", "toString", "toArray", "toArray01", "toArray01PremultipliedAlpha", "black", "white", "transparent", "red", "blue", "ParsingError", "Error", "constructor", "key", "message", "super", "Scope", "parent", "bindings", "const", "name", "expression", "concat", "get", "has", "NullType", "kind", "NumberType", "StringType", "BooleanType", "ColorType", "ObjectType", "ValueType", "ErrorType", "CollatorType", "FormattedType", "ResolvedImageType", "array", "itemType", "N", "toString", "type", "valueMemberTypes", "checkSubtype", "expected", "t", "memberType", "isValidType", "provided", "allowedTypes", "some", "isValidNativeType", "Array", "isArray", "Collator", "caseSensitive", "diacriticSensitive", "locale", "sensitivity", "collator", "Intl", "usage", "compare", "lhs", "rhs", "resolvedLocale", "resolvedOptions", "FormattedSection", "text", "image", "scale", "fontStack", "textColor", "normalize", "Formatted", "sections", "fromString", "unformatted", "isEmpty", "length", "section", "factory", "map", "join", "serialize", "serialized", "push", "options", "split", "toArray", "ResolvedImage", "available", "validateRGBA", "r", "g", "b", "a", "value", "isValue", "mixed", "Color", "item", "typeOf", "let", "String", "JSON", "stringify", "Literal", "parse", "args", "context", "error", "expectedType", "evaluate", "eachChild", "outputDefined", "RuntimeError", "toJSON", "types", "string", "number", "boolean", "object", "Assertion", "i", "Math", "floor", "parsed", "input", "ctx", "fn", "forEach", "every", "arg", "FormatExpression", "firstArg", "nextTokenMayBeObject", "font", "lastExpression", "content", "evaluateSection", "evaluatedContent", "ImageExpression", "evaluatedImageName", "availableImages", "indexOf", "Coercion", "Boolean", "c", "parseColor", "num", "Number", "isNaN", "valueToString", "child", "geometryTypes", "EvaluationContext", "globals", "feature", "featureState", "formattedSection", "_parseColorCache", "canonical", "featureTileCoord", "featureDistanceData", "id", "undefined", "geometryType", "geometry", "canonicalID", "properties", "distanceFromCenter", "center", "x", "y", "dX", "dY", "bX", "bearing", "bY", "dist", "cached", "CompoundExpression", "_evaluate", "op", "definition", "definitions", "availableOverloads", "overloads", "filter", "ref", "signature", "signatureContext", "params", "ParsingContext", "registry", "path", "scope", "parsedArgs", "argParseFailed", "errors", "signatures", "stringifySignature", "actualTypes", "register", "CollatorExpression", "EXTENT", "updateBBox", "bbox", "coord", "min", "max", "mercatorXfromLng", "lng", "mercatorYfromLat", "lat", "PI", "log", "tan", "boxWithinBox", "bbox1", "bbox2", "getTileCoordinates", "p", "tilesAtZoom", "pow", "z", "round", "onBoundary", "p1", "p2", "x1", "y1", "x2", "y2", "rayIntersect", "pointWithinPolygon", "point", "rings", "inside", "len", "ring", "j", "len2", "pointWithinPolygons", "polygons", "perp", "v1", "v2", "twoSided", "q1", "q2", "x3", "y3", "det1", "det2", "lineIntersectLine", "d", "vectorP", "vectorQ", "lineIntersectPolygon", "polygon", "lineStringWithinPolygon", "line", "lineStringWithinPolygons", "getTilePolygon", "coordinates", "getTilePolygons", "updatePoint", "polyBBox", "worldSize", "halfWorldSize", "shift", "resetBBox", "Infinity", "getTilePoints", "pointBBox", "shifts", "tilePoints", "points", "getTileLines", "lineBBox", "tileLines", "tileLine", "pointsWithinPolygons", "polygonGeometry", "tilePolygon", "tilePolygons", "linesWithinPolygons", "Within", "geojson", "geometries", "features", "isFeatureConstant", "e", "test", "result", "isStateConstant", "isGlobalPropertyConstant", "Var", "boundExpression", "part", "expr", "index", "_parse", "annotate", "typeAnnotation", "Expr", "actual", "isConstant", "ec", "keys", "k", "isTypeAnnotation", "childrenConstant", "findStopLessThanOrEqualTo", "stops", "lastIndex", "lowerIndex", "upperIndex", "currentIndex", "currentValue", "nextValue", "Step", "labels", "outputs", "label", "outputType", "labelKey", "valueKey", "stopCount", "out", "module", "UnitBezier", "p1x", "p1y", "p2x", "p2y", "cx", "bx", "ax", "cy", "by", "ay", "prototype", "sampleCurveX", "sampleCurveY", "sampleCurveDerivativeX", "solveCurveX", "epsilon", "t0", "t1", "t2", "abs", "d2", "solve", "color", "from", "to", "Xn", "Yn", "Zn", "t3", "deg2rad", "rad2deg", "xyz2lab", "lab2xyz", "xyz2rgb", "rgb2xyz", "rgbToLab", "rgbColor", "l", "alpha", "labToRgb", "labColor", "interpolateLab", "interpolateNumber", "rgbToHcl", "h", "atan2", "sqrt", "hclToRgb", "hclColor", "cos", "sin", "interpolateHue", "interpolateHcl", "lab", "forward", "reverse", "interpolate", "hcl", "Interpolate", "operator", "interpolation", "interpolationFactor", "lower", "upper", "exponentialInterpolation", "base", "controlPoints", "ub", "slice", "rest", "outputLower", "outputUpper", "toLowerCase", "lowerValue", "upperValue", "difference", "progress", "Coalesce", "needsAnnotation", "argCount", "firstImage", "Let", "binding", "At", "In", "needle", "haystack", "IndexOf", "fromIndex", "Match", "inputType", "cases", "otherwise", "labelContext", "MAX_SAFE_INTEGER", "output", "sortedLabels", "Object", "sort", "groupedByOutput", "outputLookup", "outputIndex", "coerceLabel", "this", "Case", "branches", "_", "Slice", "beginIndex", "endIndex", "isComparableType", "eq", "neq", "lt", "gt", "lteq", "gteq", "eqCollate", "neqCollate", "ltCollate", "gtCollate", "lteqCollate", "gteqCollate", "makeComparison", "compareBasic", "compareWithCollator", "isOrderComparison", "hasUntypedArgument", "Comparison", "rt", "Equals", "NotEquals", "LessThan", "GreaterThan", "LessThanOrEqual", "GreaterThanOrEqual", "NumberFormat", "currency", "unit", "minFractionDigits", "maxFractionDigits", "style", "minimumFractionDigits", "maximumFractionDigits", "format", "Length", "expressions", "rgba", "obj", "v", "binarySearch", "m", "varargs", "typeToString", "zoom", "pitch", "heatmapDensity", "lineProgress", "skyRadialProgress", "accumulated", "LN2", "E", "n", "LN10", "asin", "acos", "atan", "ceil", "isSupportedScript", "s", "toUpperCase", "isFunction", "value", "Array", "isArray", "StyleExpression", "constructor", "expression", "propertySpec", "_warningHistory", "_evaluator", "EvaluationContext", "_defaultValue", "getDefaultValue", "_enumValues", "type", "values", "evaluateWithoutErrorHandling", "globals", "feature", "featureState", "canonical", "availableImages", "formattedSection", "featureTileCoord", "featureDistanceData", "evaluate", "const", "val", "undefined", "RuntimeError", "Object", "keys", "map", "v", "JSON", "stringify", "join", "e", "message", "console", "warn", "ZoomConstantExpression", "constructor", "kind", "expression", "_styleExpression", "isStateDependent", "isConstant", "evaluateWithoutErrorHandling", "globals", "feature", "featureState", "canonical", "availableImages", "formattedSection", "evaluate", "ZoomDependentExpression", "zoomStops", "interpolationType", "interpolationFactor", "input", "lower", "upper", "Interpolate", "getDefaultValue", "spec", "type", "isFunction", "default", "Array", "isArray", "Color", "parse", "undefined", "fontWeights", "thin", "hairline", "light", "book", "regular", "normal", "plain", "roman", "standard", "medium", "bold", "heavy", "black", "fat", "poster", "sp", "italicRE", "fontCache", "module", "fonts", "size", "lineHeight", "cssData", "Array", "isArray", "weight", "style", "fontFamilies", "haveWeight", "haveStyle", "i", "ii", "length", "font", "parts", "split", "maybeWeight", "toLowerCase", "pop", "test", "replace", "w", "previousPart", "startsWith", "fontFamily", "join", "indexOf", "push", "const", "defaultResolutions", "resolutions", "res", "length", "push", "const", "hairSpacePool", "Array", "join", "isEmpty", "context", "sharedContext", "toArray", "self", "error", "toArray", "buffer", "context", "canvasPool", "imageData", "data", "offset", "len", "canvas", "state", "DataTile_default", "interpolate", "pixelContext", "createPixelContext", "Tile_default", "offset", "buffer", "Layer_default", "create", "createOrUpdate", "isEmpty", "Tile_default", "DataTile_default", "frameState", "Uniforms", "Tile_default", "DataTile_default", "TileLayer_default", "context", "array", "color", "values", "Uniforms", "geometry", "createDefaultStyle", "Uniforms", "context", "color", "TileLayer_default", "Vector_default", "geometry", "distance", "centroid", "scale", "Tile_default", "z", "x", "y", "DataTile_default", "id", "array", "next", "number", "number", "buffer", "number", "buffer", "defaultCompare", "buffer", "array", "number", "defaultCompare", "isNaN", "Xn", "Yn", "Zn", "array", "lerp", "array", "buffer", "window", "findTagsByName", "getAttribute", "createWorker", "create", "buffer", "id", "line", "id", "xhr", "urlMod", "http", "https", "location", "values", "bbox", "line", "error", "array", "DataTile_default", "self", "values", "Image_default", "context", "DECIMALS", "Image_default", "bbox", "buffer", "bbox", "scale", "context", "array", "wrapX", "context", "Tile_default", "import_react", "import_react", "context", "React", "context", "React", "Vector_default", "Vector_default", "context", "Tile_default", "parse", "array", "array", "context", "parse", "NAMESPACE_URIS", "PARSERS", "context", "Tile_default", "context", "Image_default", "context", "Image_default", "context", "context", "Tile_default", "context", "Tile_default", "context", "Tile_default", "Vector_default", "import_react", "Vector_default", "React", "import_react", "context", "VectorTile_default", "React", "context", "context", "EventType_default", "wrapX", "Map_default", "equals", "transform", "scale", "EventType_default", "context", "context", "context", "context", "context", "context", "import_react", "context", "React", "import_react", "context", "React", "_a", "_b", "import_react", "context", "React", "context", "context", "context", "context", "Property_default", "geometry", "Circle_default", "squaredDistance", "Vector_default", "Property_default", "target", "Vector_default", "getDefaultStyleFunction", "geometry", "equals", "coordinate", "buffer", "squaredDistance", "import_react", "context", "React", "context", "context"]
}
