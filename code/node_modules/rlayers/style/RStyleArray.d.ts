import React from 'react';
import { Feature } from 'ol';
import Style from 'ol/style/Style';
import Geometry from 'ol/geom/Geometry';
import { RContextType } from '../context';
import { default as RStyle, RStyleProps } from './RStyle';
/** An array of RStyle, can be an RStyle of its own
 * - this represents the OpenLayers concept of a style array
 *
 * It replaces the references on its children, so individual elements
 * in the array cannot be referenced
 *
 * It doesn't support caching yet
 *
 * Every style in the array must be a static style and not a function
 *
 * Arrays of style functions are not supported by OpenLayers and won't
 * be supported rlayers either
 */
export default class RStyleArray extends RStyle {
    constructor(props: Readonly<RStyleProps>, context?: React.Context<RContextType>);
    style: (f: Feature<Geometry>, r: number) => Style | Style[];
    refresh(prevProps?: RStyleProps): void;
    render(): JSX.Element;
}
//# sourceMappingURL=RStyleArray.d.ts.map