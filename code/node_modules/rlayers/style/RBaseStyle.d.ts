import React, { PropsWithChildren } from 'react';
import { RContextType } from '../context';
/**
 * @propsfor RBaseStyle
 */
export interface RBaseStyleProps extends PropsWithChildren<unknown> {
}
/**
 * An abstract class used as base for all Style components, not meant to be used directly
 */
export default class RBaseStyle<P extends RBaseStyleProps> extends React.PureComponent<P, Record<string, never>> {
    static contextType: React.Context<RContextType>;
    static classProps: string[];
    classProps: string[];
    ol: unknown;
    context: RContextType;
    constructor(props: Readonly<P>, context?: React.Context<RContextType>);
    create(props: P): unknown;
    refresh(prevProps?: P): void;
    set(ol: unknown): void;
    componentDidMount(): void;
    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<unknown>, snapshot: unknown): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
//# sourceMappingURL=RBaseStyle.d.ts.map