import { ColorLike } from 'ol/colorlike';
import { Stroke } from 'ol/style';
import { default as RBaseStyle, RBaseStyleProps } from './RBaseStyle';
/**
 * @propsfor RStroke
 */
export interface RStrokeProps extends RBaseStyleProps {
    /** color */
    color: ColorLike;
    /** width */
    width: number;
    /** Canvas line cap style: 'butt', 'round' or 'square'
     * @default 'round'
     */
    lineCap?: CanvasLineCap;
    /** Canvas line join style: 'bevel', 'round' or 'miter
     * @default 'round'
     */
    lineJoin?: CanvasLineJoin;
    /** Line dash pattern.
     * @default null
     */
    lineDash?: number[];
}
/**
 * A component for setting the stroke properties of a style
 *
 * Requires an `RStyle` context
 */
export default class RStroke extends RBaseStyle<RStrokeProps> {
    static classProps: string[];
    ol: Stroke;
    create(props: RStrokeProps): Stroke;
    set(ol: Stroke): void;
}
//# sourceMappingURL=RStroke.d.ts.map