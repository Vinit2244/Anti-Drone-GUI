import React from 'react';
import { RContextType } from './context';
import { ROverlayBase, ROverlayProps } from './ROverlay';
/**
 * @propsfor RPopup
 */
export interface RPopupProps extends ROverlayProps {
    /**
     * Trigger action, 'click' or 'hover'
     * @default 'click'
     */
    trigger?: 'click' | 'hover';
    /**
     * Delay in 'hover' mode
     * @default {show: 250, hide: 50}
     */
    delay?: {
        show?: number;
        hide?: number;
    };
}
/**
 * Popup component
 *
 * `Popup` extends `Overlay` and implements an automatic popup
 *
 * Requires a location context
 *
 * (ie it must be descendant of a `RFeature`)
 */
export default class RPopup extends ROverlayBase<RPopupProps> {
    visible: boolean;
    showing: number | undefined;
    hiding: number | undefined;
    constructor(props: Readonly<RPopupProps>, context?: React.Context<RContextType>);
    componentWillUnmount(): void;
    setPosition(): void;
    unregister(): void;
    refresh(): void;
    /**
     * Toggle the state
     */
    toggle: () => void;
    /**
     * Show the popup
     */
    show: () => void;
    /**
     * Hide the popup
     */
    hide: () => void;
}
//# sourceMappingURL=RPopup.d.ts.map