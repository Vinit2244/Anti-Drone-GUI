import React from 'react';
import { Text } from 'ol/style';
import { RContext } from '../context';
import { default as RBaseStyle } from './RBaseStyle';
/**
 * Text element of a style
 *
 * Requires an `RStyle` context
 *
 * Provides an `RStyle` context - for `Fill` or `Stroke`
 */
class RText extends RBaseStyle {
    create(props) {
        this.classProps = RText.classProps;
        return new Text(props);
    }
    set(ol) {
        if (!this.context.style.setText)
            /* istanbul ignore next */
            throw new Error('Parent element does not support a text');
        this.context.style.setText(ol);
    }
    render() {
        return (React.createElement("div", { className: '_rlayers_RStyle_RText' },
            React.createElement(RContext.Provider, { value: Object.assign(Object.assign({}, this.context), { style: this.ol }) }, this.props.children)));
    }
}
RText.classProps = [
    'text',
    'font',
    'offsetY',
    'offsetX',
    'overflow',
    'scale',
    'rotation',
    'textAlign',
    'padding',
    'placement',
    'textBaseline'
];
export default RText;
//# sourceMappingURL=RText.js.map