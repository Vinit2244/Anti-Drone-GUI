import { Feature } from 'ol';
import { Heatmap as LayerHeatmap } from 'ol/layer';
import { Vector as SourceVector } from 'ol/source';
import BaseObject from 'ol/Object';
import { Point } from 'ol/geom';
import { default as RLayerBaseVector, RLayerBaseVectorProps } from './RLayerBaseVector';
/**
 * @propsfor RLayerHeatmap
 */
export interface RLayerHeatmapProps extends RLayerBaseVectorProps {
    /** Blurring */
    blur?: number;
    /** Radius */
    radius?: number;
    /** Weight function for each RFeature, weight goes from 0 to 1 */
    weight?: (f: Feature<Point>) => number;
    /**
     * OpenLayers features that will be loaded
     *
     * this property currently does not support dynamic updates
     */
    features?: Feature<Point>[];
}
/** A vector layer that renders its RFeatures as a heatmap
 *
 * Compatible with RLayerVector
 *
 * Requires an `RMap` context
 *
 * Provides a vector layer for JSX-declared RFeatures
 */
export default class RLayerHeatmap extends RLayerBaseVector<RLayerHeatmapProps> {
    ol: LayerHeatmap;
    source: SourceVector<Point>;
    createSource(props: Readonly<RLayerHeatmapProps>): BaseObject[];
    refresh(prev?: RLayerHeatmapProps): void;
}
//# sourceMappingURL=RLayerHeatmap.d.ts.map