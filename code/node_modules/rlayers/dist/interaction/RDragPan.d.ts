import { MapBrowserEvent } from 'ol';
import { ObjectEvent } from 'ol/Object';
import { default as DragPan } from 'ol/interaction/DragPan';
import { default as RBaseInteraction } from './RBaseInteraction';
/**
 * @propsfor RDragPan
 */
export interface RDragPanProps {
    /** An optional OpenLayers condition */
    condition?: (e: MapBrowserEvent<UIEvent>) => boolean;
    /** Kinetic parameters */
    kinetic?: {
        decay: number;
        minVelocity: number;
        delay: number;
    };
    /** Called on every change */
    onChange?: (this: RDragPan, e: ObjectEvent) => void;
}
/** Panning by dragging */
export default class RDragPan extends RBaseInteraction<RDragPanProps> {
    static classProps: string[];
    ol: DragPan;
    createOL(props: RDragPanProps): DragPan;
}
//# sourceMappingURL=RDragPan.d.ts.map