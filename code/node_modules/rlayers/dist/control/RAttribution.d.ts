import React from 'react';
import { Attribution } from 'ol/control';
import { Options } from 'ol/control/Attribution';
import { RContextType } from '../context';
import { default as RControlBase, RControlProps } from './RControlBase';
/**
 * @propsfor RAttribution
 */
export interface RAttributionProps extends RControlProps {
    /** Is it user-collapsible (some licenses do not allow it) @default true */
    collapsible?: boolean;
    /** Initial state @default true */
    collapsed?: boolean;
}
/**
 * An attributions control (the small **i** in the bottom right corner)
 *
 * Requires an `RMap` context
 */
export default class RAttribution extends RControlBase<RAttributionProps, Record<string, never>> {
    ol: Attribution;
    constructor(props: Readonly<RAttributionProps>, context?: React.Context<RContextType>);
    refresh(prevProps?: RAttributionProps): void;
    toOLProps(props: RAttributionProps): Options;
}
//# sourceMappingURL=RAttribution.d.ts.map