/// <reference types="react" />
import { Vector as LayerVector } from 'ol/layer';
import { Vector as SourceVector, Cluster as SourceCluster } from 'ol/source';
import Geometry from 'ol/geom/Geometry';
import BaseObject from 'ol/Object';
import { default as RLayerBaseVector, RLayerBaseVectorProps } from './RLayerBaseVector';
/**
 * @propsfor RLayerCluster
 */
export interface RLayerClusterProps extends RLayerBaseVectorProps {
    /** Clustering distance */
    distance?: number;
}
/** A vector layer that clusters its RFeatures
 *
 * Compatible with RLayerVector
 *
 * Requires an `RMap` context
 *
 * Not compatible with a vector layer context for JSX-declared RFeatures
 */
export default class RLayerCluster extends RLayerBaseVector<RLayerClusterProps> {
    ol: LayerVector<SourceCluster>;
    source: SourceCluster;
    cluster: SourceVector<Geometry>;
    createSource(props: Readonly<RLayerClusterProps>): BaseObject[];
    refresh(prev?: RLayerClusterProps): void;
    render(): JSX.Element;
}
//# sourceMappingURL=RLayerCluster.d.ts.map