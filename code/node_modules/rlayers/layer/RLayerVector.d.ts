import { Vector as LayerVector } from 'ol/layer';
import { Vector as SourceVector } from 'ol/source';
import Geometry from 'ol/geom/Geometry';
import { default as RLayerBaseVector, RLayerBaseVectorProps } from './RLayerBaseVector';
import BaseObject from 'ol/Object';
/**
 * A vector layer
 *
 * Supports loading of features from external sources
 *
 * Requires an `RMap` context
 *
 * Provides a vector layer context for JSX-declared `RFeature`s
 */
export default class RLayerVector extends RLayerBaseVector<RLayerBaseVectorProps> {
    ol: LayerVector<SourceVector<Geometry>>;
    source: SourceVector<Geometry>;
    createSource(props: Readonly<RLayerBaseVectorProps>): BaseObject[];
    refresh(prevProps?: RLayerBaseVectorProps): void;
}
//# sourceMappingURL=RLayerVector.d.ts.map