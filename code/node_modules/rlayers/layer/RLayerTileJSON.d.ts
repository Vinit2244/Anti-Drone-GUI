import React from 'react';
import { Tile as LayerTile } from 'ol/layer';
import { TileJSON } from 'ol/source';
import { RContextType } from '../context';
import { default as RLayerRaster, RLayerRasterProps } from './RLayerRaster';
/**
 * @propsfor RLayerTileJSON
 */
export interface RLayerTileJSONProps extends RLayerRasterProps {
    /** An URL for loading the tiles with the usual {x}{y}{z} semantics */
    url?: string;
    projection?: never;
}
/**
 * A layer with data from TileJSON tiles
 *
 * Requires an `RMap` context
 */
export default class RLayerTileJSON extends RLayerRaster<RLayerTileJSONProps> {
    ol: LayerTile<TileJSON>;
    source: TileJSON;
    constructor(props: Readonly<RLayerTileJSONProps>, context?: React.Context<RContextType>);
    refresh(prevProps?: RLayerTileJSONProps): void;
}
//# sourceMappingURL=RLayerTileJSON.d.ts.map