"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var layer_1 = require("ol/layer");
var source_1 = require("ol/source");
var RLayerWebGL_1 = __importDefault(require("./RLayerWebGL"));
/**
 * A layer with XYZ raster tiles rendered by WebGL
 *
 * Requires an `RMap` context
 */
var RLayerTileWebGL = /** @class */ (function (_super) {
    __extends(RLayerTileWebGL, _super);
    function RLayerTileWebGL(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.createSource();
        _this.ol = new layer_1.WebGLTile({
            opacity: 0.9,
            source: _this.source,
            cacheSize: props.cacheSize
        });
        _this.eventSources = [_this.ol, _this.source];
        return _this;
    }
    RLayerTileWebGL.prototype.createSource = function () {
        this.source = new source_1.XYZ({
            url: this.props.url,
            interpolate: !this.props.noIterpolation,
            projection: this.props.projection,
            tileGrid: this.props.tileGrid,
            crossOrigin: 'anonymous'
        });
        this.eventSources = [this.ol, this.source];
    };
    RLayerTileWebGL.prototype.refresh = function (prevProps) {
        _super.prototype.refresh.call(this, prevProps);
        if ((prevProps === null || prevProps === void 0 ? void 0 : prevProps.tileGrid) !== this.props.tileGrid || (prevProps === null || prevProps === void 0 ? void 0 : prevProps.url) !== this.props.url) {
            this.createSource();
            this.ol.setSource(this.source);
            this.attachOldEventHandlers(this.source);
        }
    };
    return RLayerTileWebGL;
}(RLayerWebGL_1.default));
exports.default = RLayerTileWebGL;
//# sourceMappingURL=RLayerTileWebGL.js.map