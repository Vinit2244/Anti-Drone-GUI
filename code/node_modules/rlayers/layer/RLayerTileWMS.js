"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Tile_1 = __importDefault(require("ol/layer/Tile"));
var TileWMS_1 = __importDefault(require("ol/source/TileWMS"));
var RLayerRaster_1 = __importDefault(require("./RLayerRaster"));
/**
 * Tiled layer using WMS
 */
var RLayerTileWMS = /** @class */ (function (_super) {
    __extends(RLayerTileWMS, _super);
    function RLayerTileWMS(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.createSource();
        _this.ol = new Tile_1.default({ source: _this.source });
        _this.eventSources = [_this.ol, _this.source];
        return _this;
    }
    RLayerTileWMS.prototype.createSource = function () {
        var _a = this.props, params = _a.params, url = _a.url, projection = _a.projection;
        var options = { params: params, url: url, projection: projection };
        this.source = new TileWMS_1.default(options);
        this.eventSources = [this.ol, this.source];
    };
    RLayerTileWMS.prototype.refresh = function (prevProps) {
        _super.prototype.refresh.call(this, prevProps);
        this.createSource();
        this.ol.setSource(this.source);
        this.attachOldEventHandlers(this.source);
    };
    return RLayerTileWMS;
}(RLayerRaster_1.default));
exports.default = RLayerTileWMS;
//# sourceMappingURL=RLayerTileWMS.js.map